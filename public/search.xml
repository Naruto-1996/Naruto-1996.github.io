<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>appium自动化测试</title>
      <link href="2021/10/12/appium-zi-dong-hua-ce-shi/"/>
      <url>2021/10/12/appium-zi-dong-hua-ce-shi/</url>
      
        <content type="html"><![CDATA[<h4 id="使用Appium对Android-App-进行自动化测试"><a href="#使用Appium对Android-App-进行自动化测试" class="headerlink" title="使用Appium对Android App 进行自动化测试"></a>使用Appium对Android App 进行自动化测试</h4><h5 id="一、环境"><a href="#一、环境" class="headerlink" title="一、环境"></a>一、环境</h5><ul><li>node v16.3.0</li><li>python 2.7</li><li>java 13.0.1</li><li>android sdk 31</li></ul><h4 id="二、概述"><a href="#二、概述" class="headerlink" title="二、概述"></a>二、概述</h4><blockquote><p>Appium是一个自动化开源工具，支持iOS、Android和Windows桌面平台上的原生、移动Web和混合应用的自动化。<br>Appium是跨平台的：它允许你用同样的API对多平台（iOS、Android、Windows）写测试。<br>做到在iOS、Android和Windows测试套件之间复用代码。</p></blockquote><h4 id="三、下载安装环境配置"><a href="#三、下载安装环境配置" class="headerlink" title="三、下载安装环境配置"></a>三、下载安装环境配置</h4><p>1、 安装python安装Appium-Python-Client库（写python自动化测试脚本会用到）</p><pre class="line-numbers language-python"><code class="language-python">pip install Appium<span class="token operator">-</span>Python<span class="token operator">-</span>Client<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、安装SDK</p><p>自行安装即可</p><p>3、安装JDK</p><p>(1) 在<a href="https://www.oracle.com/java/technologies/downloads/">oracle</a>官网下载安装JDK，安装JDK8及以上的版本。</p><p>(2) 安装完成后，设置JDK的环境变量</p><p>(3) 我这里使用的是oh my zsh</p><pre class="line-numbers language-shell"><code class="language-shell">cd ~vim .zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-shell"><code class="language-shell"># 配置ANDROID_HOME环境变量export ANDROID_HOME="/Users/liwenyang/Library/Android/sdk/"# 配置JAVA_HOME环境变量export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-13.0.1.jdk/Contents/Homeexport PATH=$JAVA_HOME/bin:$PATH# 配置Android sdk tools adbexport PATH="$PATH:/Users/liwenyang/Library/Android/sdk/platform-tools"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将jdk版本号、用户名换成自己的 </p><p>然后 <code>source .zshrc</code></p><h4 id="四、安装appium-server"><a href="#四、安装appium-server" class="headerlink" title="四、安装appium server"></a>四、安装appium server</h4><p>1、在<a href="https://github.com/appium/appium-desktop/releases/tag/v1.22.0">appium官网</a>下载</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20211012163841.png"></p><p>下载完之后进行安装就行了</p><p>2、设置</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20211012164022.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20211012164101.png"></p><p>保存并重启就行了</p><p>3、启动</p><p>点击上图中的 start server 出现这个说明启动成功 </p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20211012164215.png"></p><h4 id="五、还需要一个东西"><a href="#五、还需要一个东西" class="headerlink" title="五、还需要一个东西"></a>五、还需要一个东西</h4><p>1、用来定位你app页面中的元素的 写自动化脚本会用到</p><p><a href="https://github.com/appium/appium-inspector/releases/tag/v2021.9.2">点击这个下载</a></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20211012164617.png"></p><p>正常安装即可</p><p>2、配置</p><p>真机测试 </p><p>USB连接手机，打开手机开发者模式，打开开发者选项中的USB调试、USB安装，小米手机还需要打开USB调试（安全设置），然后在CMD命令行输入adb devices回车，如果出现了手机的设备号，说明连接成功。</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20211012165710.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20211012165003.png"></p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"platformName"</span><span class="token operator">:</span> <span class="token string">"Android"</span><span class="token punctuation">,</span> # 声明是ios还是Android系统<span class="token property">"platformVersion"</span><span class="token operator">:</span> <span class="token string">"8.1.0"</span><span class="token punctuation">,</span> # Android内核版本号<span class="token property">"deviceName"</span><span class="token operator">:</span> <span class="token string">"MI_5X"</span><span class="token punctuation">,</span> # 连接的设备名称<span class="token property">"appPackage"</span><span class="token operator">:</span> <span class="token string">"com.tencent.qqmusic"</span><span class="token punctuation">,</span> # apk的包名<span class="token property">"appActivity"</span><span class="token operator">:</span> <span class="token string">".activity.AppStarterActivity"</span><span class="token punctuation">,</span> # apk的launcherActivity<span class="token property">"resetKeyboard"</span><span class="token operator">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span><span class="token property">"noReset"</span><span class="token operator">:</span> <span class="token boolean">True</span> # 在开始会话之前不要重置应用程序状态<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>截图中的 appium前缀是勾选那个就可以加上了</p><p>下面点击 start session 就可以了</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20211012165937.png"></p><p>这个工具就是方便我们进行定位app内的元素用的</p><h4 id="六、写自动化测试脚本"><a href="#六、写自动化测试脚本" class="headerlink" title="六、写自动化测试脚本"></a>六、写自动化测试脚本</h4><p>随便找一个地方写个 autoTest.py</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">from</span> appium <span class="token keyword">import</span> webdrivercaps <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"platformName"</span><span class="token punctuation">:</span> <span class="token string">"Android"</span><span class="token punctuation">,</span>    <span class="token string">"platformVersion"</span><span class="token punctuation">:</span> <span class="token string">"9"</span><span class="token punctuation">,</span>    <span class="token string">"deviceName"</span><span class="token punctuation">:</span> <span class="token string">"Note9"</span><span class="token punctuation">,</span>    <span class="token string">"appPackage"</span><span class="token punctuation">:</span> <span class="token string">"com.easylife.house.customer"</span><span class="token punctuation">,</span>    <span class="token string">"appActivity"</span><span class="token punctuation">:</span> <span class="token string">".ui.pub.GuideActivity"</span><span class="token punctuation">,</span>    <span class="token string">"resetKeyboard"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>    <span class="token string">"noReset"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Remote<span class="token punctuation">(</span><span class="token string">"http://localhost:4723/wd/hub"</span><span class="token punctuation">,</span> caps<span class="token punctuation">)</span>lunch <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">"com.easylife.house.customer:id/activity_launch"</span><span class="token punctuation">)</span>lunch<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">"com.easylife.house.customer:id/iv_icon2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>swipe<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">1550</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">"com.easylife.house.customer:id/iv_icon3"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>swipe<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">1550</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">"com.easylife.house.customer:id/iv_icon4"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>swipe<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">1550</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">"com.easylife.house.customer:id/iv_icon5"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>swipe<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">1550</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#点击首页</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">"com.easylife.house.customer:id/iv_icon1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">"com.easylife.house.customer:id/newHouse"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>swipe<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">1550</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行这个脚本 <code>python3 autoTest.py</code><br>脚本就可以自动的进行点击 滑动 等操作了</p>]]></content>
      
      
      <categories>
          
          <category> Appium </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Mac </tag>
            
            <tag> 自动化测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>deploy a nft art and transfer in eth testnet</title>
      <link href="2021/07/30/deploy-a-nft-art-and-transfer-in-eth-testnet/"/>
      <url>2021/07/30/deploy-a-nft-art-and-transfer-in-eth-testnet/</url>
      
        <content type="html"><![CDATA[<h3 id="如何在以太坊测试网络上发布一个NFT艺术品并转给他人"><a href="#如何在以太坊测试网络上发布一个NFT艺术品并转给他人" class="headerlink" title="如何在以太坊测试网络上发布一个NFT艺术品并转给他人"></a>如何在以太坊测试网络上发布一个NFT艺术品并转给他人</h3><h4 id="1、首先什么是NFT"><a href="#1、首先什么是NFT" class="headerlink" title="1、首先什么是NFT"></a>1、首先什么是NFT</h4><blockquote><p>非同质化代币NFT是一种数字资产，具备不可分割和独一无二这两大特性，可用于代表有形和无形的物品。NFT应用场景多样，包括数字收藏品、音乐、艺术品以及游戏内代币。</p></blockquote><h4 id="2-、什么是ERC-721"><a href="#2-、什么是ERC-721" class="headerlink" title="2 、什么是ERC-721"></a>2 、什么是ERC-721</h4><p>ERC 代表 Ethereum Request for Comment，721 是提案标识符号。 ERC 是以太坊生态系统中的应用级标准，可以是 ERC-20 等代币的智能合约标准，ERC 的作者负责与以太坊社区建立共识，一旦提案得到以太坊社区的审查和批准社区它成为一个标准。您可以在此处跟踪最近的 ERC 提案。创建 ERC-721 是为了提出在智能合约中跟踪和传输 NFT 的功能。</p><p>ERC-721 是一个开放标准，描述了如何在 EVM（以太坊虚拟机）兼容的区块链上构建不可替代的代币；它是不可替代代币的标准接口；它有一套规则，可以很容易地使用 NFT。 NFT 不仅是 ERC-721 类型；它们也可以是 ERC-1155 代币。</p><h4 id="3、我们还需要知道一个东西-IPFS"><a href="#3、我们还需要知道一个东西-IPFS" class="headerlink" title="3、我们还需要知道一个东西 IPFS"></a>3、我们还需要知道一个东西 <code>IPFS</code></h4><blockquote><p>星际文件系统（InterPlanetary File System，缩写为IPFS）是一个旨在创建持久且分布式存储和共享文件的网络传输协议。它是一种内容可寻址的对等超媒体分发协议。在IPFS网络中的节点将构成一个分布式文件系统。它是一个开放源代码项目，自2014年开始由协议实验室在开源社区的帮助下发展。其最初由Juan Benet设计。</p></blockquote><p>如果要发布一个NFT艺术品,我们需要定义这个艺术品的属性，通常我们用<code>json</code>文件来定义，我们还需要一个链接可以查看这个艺术品</p><p>随便创建一个xxx.json</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"NFT Art"</span><span class="token punctuation">,</span><span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"This image shows the true nature of NFT."</span><span class="token punctuation">,</span><span class="token property">"image"</span><span class="token operator">:</span> <span class="token string">"https://ipfs.io/ipfs/QmQLzfy3Zs9S6nV4HG9to9wntbdaoJgC41wgEQMJwm6gBK"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>name 艺术品的名称</p></li><li><p>description 艺术品的描述</p></li><li><p>image 图片的链接</p></li></ul><p>这里我们就定义了一个简单的json文件来表示这个艺术品<br><code>IPFS</code> 是一个去中心化的平台 我们将json文件 图片上传到这个平台 可以拿到这样的链接</p><p><strong>下面我们来说一下如何使用<code>IPFS</code></strong></p><p><a href="https://ipfs.io/">IPFS官网地址</a></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210730175202.png"></p><p>我这里选择的是 桌面应用程序 可视化界面 好操作一些 </p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210730175424.png"></p><p>打开之后 选择导入 我们选择创建的xxx.json 和 一张图片也好 gif也行</p><p>然后我们点击三个点 选择 分享链接 复制一下链接就行了</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210730175647.png"></p><p>当然 你也可以不选择<code>IPFS</code> 只要提供的链接能访问到就行。用IPFS的原因是去中心化 如果是你自己提供的链接那就可能不是去中心化了</p><p>这里我给出我的两个链接</p><pre class="line-numbers language-solidity"><code class="language-solidity">json字符串 https://ipfs.io/ipfs/QmZJEQLGYSMoVMmzVrkujsPiydZiWbHHGFZQLvf8J79s8h?filename=apple.json图片链接https://ipfs.io/ipfs/QmQLzfy3Zs9S6nV4HG9to9wntbdaoJgC41wgEQMJwm6gBK?filename=spin.gif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>后面的<code>?filename=apple.json</code>可以删掉也能访问到</p><h4 id="4、编写智能合约"><a href="#4、编写智能合约" class="headerlink" title="4、编写智能合约"></a>4、编写智能合约</h4><p>编写NFT合约代码的话 我们可以选择一些非常成熟的库在他们的基础上进行编写自己的NFT代码 比较好的库就是<code>OpenZeppelin</code></p><p><a href="https://github.com/OpenZeppelin/openzeppelin-contracts/tree/master/contracts/token/ERC721/extensions">github地址</a></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210730172037.png"></p><p>他这里是提供了很多个不同功能的NFT代码给我们， 我们只需要选择红色框那个来继承就行了，这个是比较简单的， 没有别的复杂功能。</p><h4 id="5、开始编写代码"><a href="#5、开始编写代码" class="headerlink" title="5、开始编写代码"></a>5、开始编写代码</h4><p>这里我们选择在线的<code>Remix</code>来编写我们的合约代码 </p><p><a href="http://remix.app.hubwiz.com/#optimize=false&amp;runs=200&amp;evmVersion=null&amp;version=soljson-v0.7.4+commit.3f05b770.js">Remix中文版地址</a></p><pre class="line-numbers language-solidity"><code class="language-solidity">// SPDX-License-Identifier: MITpragma solidity ^0.8.0;import "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol";contract MobilePhoneNft is ERC721URIStorage{  uint public counter;  constructor() ERC721("MobilePhoneNft", "MPN"){    counter = 0;  }  function createNFTs (string memory tokenURI) public returns(uint) {    uint tokenId = counter;    _safeMint(msg.sender, tokenId);    _setTokenURI(tokenId, tokenURI);    counter ++;    return tokenId;  }  function burn(uint256 tokenId) public virtual {    require(_isApprovedOrOwner(msg.sender, tokenId), "You can not burn it, because you are not the owner!");    super._burn(tokenId);  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们讲一下这个代码 </p><p><code>createNFTs</code> 创建一个NFT 我们调用的时候需要传入一个参数 这个参数是一个地址代表你这个<code>NFT</code>的一些属性 这个地址是一串<code>json</code>字符串</p><p><a href="https://ipfs.io/ipfs/QmZJEQLGYSMoVMmzVrkujsPiydZiWbHHGFZQLvf8J79s8h">https://ipfs.io/ipfs/QmZJEQLGYSMoVMmzVrkujsPiydZiWbHHGFZQLvf8J79s8h</a></p><p><code>json</code> 字符串内容如下:</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"NFT Art"</span><span class="token punctuation">,</span><span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"This image shows the true nature of NFT."</span><span class="token punctuation">,</span><span class="token property">"image"</span><span class="token operator">:</span> <span class="token string">"https://ipfs.io/ipfs/QmQLzfy3Zs9S6nV4HG9to9wntbdaoJgC41wgEQMJwm6gBK"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>tokenId 我们使用<code>counter ++</code> 自增 初始值为0</p><p>有一个<code>burn</code>的方法 当你调用完<code>createNFTs</code>创建了一个NFT但是你并不满意时 可以调用这个方法来烧毁这个<code>NFT</code>。</p><h4 id="6、合约部署"><a href="#6、合约部署" class="headerlink" title="6、合约部署"></a>6、合约部署</h4><p>编译一下我们的合约</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210730180438.png"></p><p>如果没有问题 就可以部署了</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210730180645.png"></p><p>我这里是部署到 Rinkeby 测试网络 部署完成之后 我们就调用一下 合约的方法 <code>createNFTs</code></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210730180909.png"></p><p>填入上面那个 <code>json</code> 的链接 正常付gas费就行了 </p><p>之后我们在<code>https://rinkeby.etherscan.io/</code>测试网络上查看 我们的账户就可以看到那个nft合约了 不过我们看不到图片</p><p>如果想看到图片的话 需要借助<code>openSea</code> 它也是支持了<code>Rinkby</code>测试网络的</p><p><a href="https://testnets.opensea.io/account">Open Sea Rinkby 测试网络</a></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210730181750.png"></p><h4 id="7、将这个NFT转给他人"><a href="#7、将这个NFT转给他人" class="headerlink" title="7、将这个NFT转给他人"></a>7、将这个NFT转给他人</h4><p>我们只需要调用 这个方法就行了 这个方法是 ERC-721 提供的方法</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210730182229.png"></p><p>tokenId 在rinkeby测试网可以查看 我这里是 0</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210730182401.png"></p>]]></content>
      
      
      <categories>
          
          <category> NFT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eth </tag>
            
            <tag> NFT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次被钓鱼网站盗走eth的经历</title>
      <link href="2021/07/01/ji-yi-ci-bei-diao-yu-wang-zhan-dao-zou-eth-de-jing-li/"/>
      <url>2021/07/01/ji-yi-ci-bei-diao-yu-wang-zhan-dao-zou-eth-de-jing-li/</url>
      
        <content type="html"><![CDATA[<h4 id="记一次被钓鱼网站盗走ETH的经历"><a href="#记一次被钓鱼网站盗走ETH的经历" class="headerlink" title="记一次被钓鱼网站盗走ETH的经历"></a>记一次被钓鱼网站盗走ETH的经历</h4><p>我本来是要研究<code>NFT</code>(非同质化代币)的, 在研究这个过程中 有几个在线的交易平台<code>Nifty Gateway</code>、<code>OpenSea</code>、<code>MakersPlace</code>等网站可以查看一些商品属性啥的，有助于了解到底啥是<code>NFT</code></p><p>我这边也是选择了 <code>OpenSea</code> </p><p>之后就被盗走 0.05 个 <code>ETH</code> 700多块钱吧</p><h4 id="钓鱼网站是怎样的"><a href="#钓鱼网站是怎样的" class="headerlink" title="钓鱼网站是怎样的"></a>钓鱼网站是怎样的</h4><p>于是我去 <code>Chrome</code> 浏览器 搜索 <code>OpenSea</code></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210701100243.png"></p><p>也是头晕眼花 没注意瞅 就选择了第一个搜索结果</p><p>打开网站: </p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210701100549.png"></p><p>注意看这里的域名是 <code>www-opensea.io</code> 这里看不出来有啥名堂 咱们继续往下走</p><p>点击右上角小头像进行登录</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210701100814.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210701100904.png"></p><p>到这里 感觉有点不一样了 我的小狐狸明明是已经登录的状态 这里然我输入密码解锁 我也没多想解锁就解锁呗,输入密码进行解锁</p><p>解锁完之后 又让输入私钥 这网站咱也没登录过啊 可能就是需要私钥吧 我就继续输入了私钥</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210701101043.png"></p><p>输入完私钥后 账户里的<code>eth</code>就没了 这个账户最好不要在使用了 因为账号和私钥已经泄露 </p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210701101449.png"></p><p>钱已经被全部转走了 有多少划走多少 转到了<code>0xAf9dE309b54198E2e37C8DB3d367967Fc20EAa9D</code>这个账户 我们去查一下这个账户</p><p><a href="https://etherscan.io/address/0xaf9de309b54198e2e37c8db3d367967fc20eaa9d">骗子账户</a></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210701101815.png"></p><p>这个账户在我写博客的时候 陆陆续续已经进账 1.9 个 <code>eth</code> 了  钱也找不回来了 放弃吧 !!!</p><h4 id="正常网站应该是怎样的"><a href="#正常网站应该是怎样的" class="headerlink" title="正常网站应该是怎样的"></a>正常网站应该是怎样的</h4><p>我们打开第二个 网站</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210701102219.png"></p><p>这里的域名是 <code>opensea.io</code></p><p>之后我们进行登录</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210701102434.png"></p><p>可以看到 正常网站 如果我们钱包是登录的状态 直接是授权连接 不需要我们输入密码的 甚至密钥  </p><p>连接完之后 我们就登录进来了 </p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210701102624.png"></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>正常网站在进行登录的时候 是不需要用户提供私钥的 如果让你输入解锁密码和私钥 那你可要小心了。</p><p>如果让你提供密码和私钥才能进行登录的话 极有可能是 <strong>钓鱼网站</strong> 千万小心。</p><p>一旦私钥泄漏 这个账号最好不要再使用 因为这个账号已经不属于你了 及时换账号吧！</p>]]></content>
      
      
      <categories>
          
          <category> 钓鱼网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eth </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android tablayout viewpager2 fragment 你可能用错了</title>
      <link href="2021/06/25/android-tablayout-viewpager2-fragment-ni-ke-neng-yong-cuo-liao/"/>
      <url>2021/06/25/android-tablayout-viewpager2-fragment-ni-ke-neng-yong-cuo-liao/</url>
      
        <content type="html"><![CDATA[<h3 id="tabLayout-viewPager2-fragment-用不好会导致内存泄漏"><a href="#tabLayout-viewPager2-fragment-用不好会导致内存泄漏" class="headerlink" title="tabLayout + viewPager2 + fragment 用不好会导致内存泄漏"></a>tabLayout + viewPager2 + fragment 用不好会导致内存泄漏</h3><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>tabLayout + viewPager2 + fragment 这是在app开发中非常常见的UI架构了 但是用不好的话 是会导致内存泄漏的</p><p><a href="https://github.com/Naruto-1996/ViewPager2_Demo">Demo地址</a></p><p>先上图: </p><p>(<code>app</code>模板使用<code>android studio</code> 创建一个就行 我只用 <code>HomeFragment</code>)</p><img src="https://ae03.alicdn.com/kf/U3292cb58c99d44a3bcf092f9d0fba361h.png" width="300" height="600" alt="图片名称" align="center"><h3 id="先了解一下viewPager"><a href="#先了解一下viewPager" class="headerlink" title="先了解一下viewPager"></a>先了解一下viewPager</h3><p>之前我们都是使用viewPager 但是 viewPager 有两个毛病 </p><ul><li><p>不能关闭预加载</p></li><li><p>更新Adapter不生效</p></li></ul><p>虽然能解决 但是很麻烦</p><p>viewPager 有个方法 <code>offscreenPageLimit</code> 用来设置 当前页前后预加载的数量 即使设置为0也不起任何作用 因为源码中默认值为1</p><p>先来看个图:</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210625175636.png"></p><p>上面是<code>ViewPager</code>默认情况下的加载示意图，当切换到当前页面时，会默认预加载左右两侧的布局到<code>ViewPager</code>中，<br>尽管两侧的<code>View</code>并不可见的，我们称这种情况叫预加载；由于<code>ViewPager</code>对<code>offscreenPageLimit</code>设置了限制，<br>页面的预加载是不可避免</p><p>如果使用 一定要使用viewPager 也可以做到 fragment 懒加载 主要是对<code>fragment</code>做手脚 结合生命周期方法和setUserVisibleHint状态，控制数据延迟加载，而布局只能提前进入</p><h3 id="viewPager2基本使用"><a href="#viewPager2基本使用" class="headerlink" title="viewPager2基本使用"></a>viewPager2基本使用</h3><p>1、 承载tabLayout 和 viewPager2 需要一个 fragment 或者 activity 这里我们使用 fragment</p><p><code>HomeFragment</code> 如下:</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HomeFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">{</span>  <span class="token keyword">private</span> HomeViewModel homeViewModel<span class="token punctuation">;</span>  <span class="token keyword">private</span> TabLayout tabLayout<span class="token punctuation">;</span>  <span class="token keyword">private</span> ViewPager2 viewPager2<span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">final</span> ArrayList<span class="token operator">&lt;</span>String<span class="token operator">></span> tabTitles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 用List 存放fragment 不推荐使用 用不好 导致内存泄漏</span>  <span class="token keyword">private</span> ArrayList<span class="token operator">&lt;</span>BlankFragment<span class="token operator">></span> fragments <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">public</span> View <span class="token function">onCreateView</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> LayoutInflater inflater<span class="token punctuation">,</span> ViewGroup container<span class="token punctuation">,</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    homeViewModel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ViewModelProvider</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>HomeViewModel<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    View root <span class="token operator">=</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fragment_home<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    tabLayout <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tabs<span class="token punctuation">)</span><span class="token punctuation">;</span>    viewPager2 <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>viewPager<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> root<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onViewCreated</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> View view<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onViewCreated</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 初始化 tabTitles 和 fragments</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">15</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      tabTitles<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      fragments<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>BlankFragment<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>tabTitles<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 关闭预加载</span>    viewPager2<span class="token punctuation">.</span><span class="token function">setOffscreenPageLimit</span><span class="token punctuation">(</span>ViewPager2<span class="token punctuation">.</span>OFFSCREEN_PAGE_LIMIT_DEFAULT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 可以不设置 因为默认是 -1 默认不进行预加载</span>    <span class="token comment" spellcheck="true">// 这个必须设置 不然仍然会启用预加载</span>    <span class="token punctuation">(</span><span class="token punctuation">(</span>RecyclerView<span class="token punctuation">)</span>viewPager2<span class="token punctuation">.</span><span class="token function">getChildAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLayoutManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setItemPrefetchEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 设置缓存数量，对应 RecyclerView 中的 mCachedViews，即屏幕外的视图数量</span>    <span class="token punctuation">(</span><span class="token punctuation">(</span>RecyclerView<span class="token punctuation">)</span>viewPager2<span class="token punctuation">.</span><span class="token function">getChildAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setItemViewCacheSize</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 第一种方法 (可能会内存泄漏)</span>    <span class="token comment" spellcheck="true">//FragmentAdapter adapter = new FragmentAdapter(this, fragments);</span>    <span class="token comment" spellcheck="true">//viewPager2.setAdapter(adapter);</span>    <span class="token comment" spellcheck="true">// 这里使用第二种方法</span>    viewPager2<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FragmentStateAdapter</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token annotation punctuation">@NonNull</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> Fragment <span class="token function">createFragment</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> BlankFragment<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>tabTitles<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> tabTitles<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// viewPager2 滑动监听</span>    viewPager2<span class="token punctuation">.</span><span class="token function">registerOnPageChangeCallback</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ViewPager2<span class="token punctuation">.</span>OnPageChangeCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPageSelected</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPageSelected</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 这里第四个参数一定要设置为false  如果设置为true时 我们在滑动时 BlankFragment的创建 和 销毁 都很正常</span>    <span class="token comment" spellcheck="true">// 一旦 我们通过 点击tabLayout时 如果两个tab距离过远  那么所有划过的tabLayout 都会创建和销毁BlankFragment 这显然不是我们想要的</span>    <span class="token comment" spellcheck="true">// tabLayout 和 viewPager 联动</span>    <span class="token keyword">new</span> <span class="token class-name">TabLayoutMediator</span><span class="token punctuation">(</span>tabLayout<span class="token punctuation">,</span> viewPager2<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TabLayoutMediator<span class="token punctuation">.</span>TabConfigurationStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onConfigureTab</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> TabLayout<span class="token punctuation">.</span>Tab tab<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>        tab<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>tabTitles<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>fragment_home.xml</code> 布局文件:</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">tools:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.ui.home.HomeFragment<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.tabs.TabLayout</span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/tabs<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabGravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ff678f<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorFullWidth</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabIndicatorHeight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabMode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scrollable<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabSelectedTextColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ff678f<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabTextColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#333333<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>tabUnboundedRipple</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.viewpager2.widget.ViewPager2</span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/viewPager<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/purple_200<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、viewPager2的 FragmentStateAdapter 创建fragment时 我们 复用一个fragment</p><p><code>BlankFragment</code> 如下:</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlankFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">{</span>  <span class="token keyword">private</span> String mParam1<span class="token punctuation">;</span>  <span class="token keyword">private</span> TextView mTextView<span class="token punctuation">;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> BlankFragment <span class="token function">newInstance</span><span class="token punctuation">(</span>String param1<span class="token punctuation">)</span> <span class="token punctuation">{</span>    BlankFragment fragment <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlankFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Bundle args <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    args<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">"param1"</span><span class="token punctuation">,</span> param1<span class="token punctuation">)</span><span class="token punctuation">;</span>    fragment<span class="token punctuation">.</span><span class="token function">setArguments</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> fragment<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"TAG=======onPause"</span><span class="token punctuation">,</span> mParam1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>      mParam1 <span class="token operator">=</span> <span class="token function">getArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"param1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"TAG=======onCreate"</span><span class="token punctuation">,</span> mParam1<span class="token punctuation">)</span><span class="token punctuation">;</span>    Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mParam1<span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"TAG=======onDestroy"</span><span class="token punctuation">,</span> mParam1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> View <span class="token function">onCreateView</span><span class="token punctuation">(</span>LayoutInflater inflater<span class="token punctuation">,</span> ViewGroup container<span class="token punctuation">,</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// Inflate the layout for this fragment</span>    View root <span class="token operator">=</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fragment_blank<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    mTextView <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>text1<span class="token punctuation">)</span><span class="token punctuation">;</span>    mTextView<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>mParam1<span class="token punctuation">)</span><span class="token punctuation">;</span>    Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"TAG=======onCreateView"</span><span class="token punctuation">,</span> mParam1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> root<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 对外提供一个刷新Ui的方法</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refreshUi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>      mParam1 <span class="token operator">=</span> <span class="token function">getArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"param1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      mTextView<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>mParam1 <span class="token operator">+</span> <span class="token string">"ddd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDestroyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"TAG======onDestroyView"</span><span class="token punctuation">,</span> mParam1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>fragment_blank.xml</code> 如下:</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">tools:</span>context</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.ui.BlankFragment<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/text1<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>26sp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>black<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至此 我们已经完成了 tabLayout + viewPager2 + fragment </p><h3 id="viewPager2常用方法"><a href="#viewPager2常用方法" class="headerlink" title="viewPager2常用方法"></a>viewPager2常用方法</h3><ul><li><code>setAdapter()</code> 设置适配器</li><li><code>setOrientation()</code> 设置布局方向</li><li><code>setCurrentItem()</code> 设置当前Item下标</li><li><code>beginFakeDrag()</code> 开始模拟拖拽</li><li><code>fakeDragBy()</code> 模拟拖拽中</li><li><code>endFakeDrag()</code> 模拟拖拽结束</li><li><code>setUserInputEnabled()</code> 设置是否允许用户输入/触摸</li><li><code>setOffscreenPageLimit()</code> 设置屏幕外加载页面数量</li><li><code>registerOnPageChangeCallback()</code> 注册页面滑动监听回调</li><li><code>setPageTransformer()</code> 设置页面滑动时的变换效果</li></ul><h3 id="ViewPager2-预加载和缓存"><a href="#ViewPager2-预加载和缓存" class="headerlink" title="ViewPager2 预加载和缓存"></a>ViewPager2 预加载和缓存</h3><p><code>viewPager2</code> 是存在预加载和缓存的 我们虽然可以通过<code>offscreenPageLimit</code> 去设置预加载的数量 但是 <code>viewPager2</code> 会默认帮我们<br>缓存两个<code>fragment</code> 意思就是我们再滑动回来时 不会再去走 fragment 创建的生命周期了 会走 onResume 生命周期函数</p><p><code>one picture is worth a thousand words</code> :</p><p><code>viewPager2</code> 默认开启预加载 </p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210625182426.png"></p><p><strong>如何关闭预加载、并设置缓存数量</strong></p><p><strong>常见设置如下</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//设置应保留在当前可见页面两侧的页面数</span>viewPager2<span class="token punctuation">.</span><span class="token function">setOffscreenPageLimit</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//关闭预加载</span><span class="token punctuation">(</span><span class="token punctuation">(</span>RecyclerView<span class="token punctuation">)</span>viewPager2<span class="token punctuation">.</span><span class="token function">getChildAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLayoutManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setItemPrefetchEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置缓存数量，对应 RecyclerView 中的 mCachedViews，即屏幕外的视图数量</span><span class="token punctuation">(</span><span class="token punctuation">(</span>RecyclerView<span class="token punctuation">)</span>viewPager2<span class="token punctuation">.</span><span class="token function">getChildAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setItemViewCacheSize</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>viewPager2</code> 会默认缓存2个<code>ItemView</code></p><p>我们将<code>((RecyclerView)viewPager2.getChildAt(0)).setItemViewCacheSize(0);</code> 设置为<code>0</code>即可 这样我们每次滑动一个新的<code>tab</code>时 会创建<br>新的<code>fragment</code>并销毁上一个<code>fragment</code></p><h3 id="viewPager2-对-fragment-的支持"><a href="#viewPager2-对-fragment-的支持" class="headerlink" title="viewPager2 对 fragment 的支持"></a>viewPager2 对 fragment 的支持</h3><p>目前，<code>ViewPager2</code>对<code>Fragment</code>的支持只能使用<code>FragmentStateAdapter</code>，使用起来也是非常简单：</p><pre class="line-numbers language-java"><code class="language-java">viewPager2<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FragmentStateAdapter</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@NonNull</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> Fragment <span class="token function">createFragment</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> BlankFragment<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>tabTitles<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> tabTitles<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="另外还有一个小坑"><a href="#另外还有一个小坑" class="headerlink" title="另外还有一个小坑"></a>另外还有一个小坑</h3><p><strong>ViewPager2+TabLayout懒加载问题，Fragment被创建多次</strong></p><p><code>ViewPager2</code>默认只加载当前页面，相当于官方处理了<code>Fragment</code>的懒加载问题，当你使用代码</p><pre><code>new TabLayoutMediator(tabLayout, viewPager, true, new TabLayoutMediator.TabConfigurationStrategy() {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void onConfigureTab(@NonNull TabLayout.Tab tab, int position) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tab.setText(titles.get(position));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}}).attach();</code></pre><p>此时当你滑动<code>ViewPager2</code>时，滑动到某个<code>Fragment</code>页面才会加载，执行onCreateView()方法，</p><p>但是当你手动点击<code>TabLayout</code>时，此时懒加载就会失效，<code>onCreateView()</code>会被执行多次，</p><p>原因就是…此时<code>ViewPager2</code>默认是平滑滚动的，滚动滑过的<code>Fragment</code>都会被加载，</p><p><strong>只需修改代码:</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">new</span> <span class="token class-name">TabLayoutMediator</span><span class="token punctuation">(</span>tabLayout<span class="token punctuation">,</span> viewPager<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TabLayoutMediator<span class="token punctuation">.</span>TabConfigurationStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token annotation punctuation">@Override</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onConfigureTab</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> TabLayout<span class="token punctuation">.</span>Tab tab<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>tab<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>titles<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，第二个<code>boolean</code>参数为<code>smoothScroll</code> 一定要填<code>false</code>  这时点击 哪个<code>tab</code> 就会创建 哪个 <code>fragment</code></p><p>但是页面看起来没有那么平滑了 各有利弊吧</p><p><strong>—————————————————————————————</strong></p><p>如果 需要点击tab无动画 滑动页面时有动画 怎么办呢?</p><p>TabLayoutMediator 是final类  且smoothScroll字段是私有的、我们没法继承重写、但是可以copy源码修改、不会有问题</p><p>我们将 源码copy下来 稍作修改就可以用了 下面是修改好的代码:</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token keyword">static</span> androidx<span class="token punctuation">.</span>viewpager2<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>ViewPager2<span class="token punctuation">.</span>SCROLL_STATE_DRAGGING<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> androidx<span class="token punctuation">.</span>viewpager2<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>ViewPager2<span class="token punctuation">.</span>SCROLL_STATE_IDLE<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> androidx<span class="token punctuation">.</span>viewpager2<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>ViewPager2<span class="token punctuation">.</span>SCROLL_STATE_SETTLING<span class="token punctuation">;</span><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>NonNull<span class="token punctuation">;</span><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Nullable<span class="token punctuation">;</span><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>recyclerview<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>RecyclerView<span class="token punctuation">;</span><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>viewpager2<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>ViewPager2<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>android<span class="token punctuation">.</span>material<span class="token punctuation">.</span>tabs<span class="token punctuation">.</span>TabLayout<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ref<span class="token punctuation">.</span>WeakReference<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * A mediator to link a TabLayout with a ViewPager2. The mediator will synchronize the ViewPager2's * position with the selected tab when a tab is selected, and the TabLayout's scroll position when * the user drags the ViewPager2. TabLayoutMediator will listen to ViewPager2's OnPageChangeCallback * to adjust tab when ViewPager2 moves. TabLayoutMediator listens to TabLayout's * OnTabSelectedListener to adjust VP2 when tab moves. TabLayoutMediator listens to RecyclerView's * AdapterDataObserver to recreate tab content when dataset changes. * * &lt;p>Establish the link by creating an instance of this class, make sure the ViewPager2 has an * adapter and then call {@link #attach()} on it. Instantiating a TabLayoutMediator will only create * the mediator object, {@link #attach()} will link the TabLayout and the ViewPager2 together. When * creating an instance of this class, you must supply an implementation of {@link * com.google.android.material.tabs.TabLayoutMediator.TabConfigurationStrategy} in which you set the text of the tab, and/or perform any styling of the * tabs that you require. Changing ViewPager2's adapter will require a {@link #detach()} followed by * {@link #attach()} call. Changing the ViewPager2 or TabLayout will require a new instantiation of * TabLayoutMediator. */</span><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">TabLayoutMediators</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@NonNull</span> <span class="token keyword">private</span> <span class="token keyword">final</span> TabLayout tabLayout<span class="token punctuation">;</span>  <span class="token annotation punctuation">@NonNull</span> <span class="token keyword">private</span> <span class="token keyword">final</span> ViewPager2 viewPager<span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> autoRefresh<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 这里我们改为静态变量 以便于在静态方法中使用这个变量</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> smoothScroll<span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">final</span> TabConfigurationStrategy tabConfigurationStrategy<span class="token punctuation">;</span>  <span class="token annotation punctuation">@Nullable</span> <span class="token keyword">private</span> RecyclerView<span class="token punctuation">.</span>Adapter<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> adapter<span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">boolean</span> attached<span class="token punctuation">;</span>  <span class="token annotation punctuation">@Nullable</span> <span class="token keyword">private</span> TabLayoutOnPageChangeCallback onPageChangeCallback<span class="token punctuation">;</span>  <span class="token annotation punctuation">@Nullable</span> <span class="token keyword">private</span> TabLayout<span class="token punctuation">.</span>OnTabSelectedListener onTabSelectedListener<span class="token punctuation">;</span>  <span class="token annotation punctuation">@Nullable</span> <span class="token keyword">private</span> RecyclerView<span class="token punctuation">.</span>AdapterDataObserver pagerAdapterObserver<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/**   * A callback interface that must be implemented to set the text and styling of newly created   * tabs.   */</span>  <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TabConfigurationStrategy</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * Called to configure the tab for the page at the specified position. Typically calls {@link     * TabLayout.Tab#setText(CharSequence)}, but any form of styling can be applied.     *     * @param tab The Tab which should be configured to represent the title of the item at the given     *     position in the data set.     * @param position The position of the item within the adapter's data set.     */</span>    <span class="token keyword">void</span> <span class="token function">onConfigureTab</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> TabLayout<span class="token punctuation">.</span>Tab tab<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">public</span> <span class="token function">TabLayoutMediators</span><span class="token punctuation">(</span>    <span class="token annotation punctuation">@NonNull</span> TabLayout tabLayout<span class="token punctuation">,</span>    <span class="token annotation punctuation">@NonNull</span> ViewPager2 viewPager<span class="token punctuation">,</span>    <span class="token annotation punctuation">@NonNull</span> TabConfigurationStrategy tabConfigurationStrategy<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">(</span>tabLayout<span class="token punctuation">,</span> viewPager<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">/* autoRefresh= */</span> <span class="token boolean">true</span><span class="token punctuation">,</span> tabConfigurationStrategy<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">public</span> <span class="token function">TabLayoutMediators</span><span class="token punctuation">(</span>    <span class="token annotation punctuation">@NonNull</span> TabLayout tabLayout<span class="token punctuation">,</span>    <span class="token annotation punctuation">@NonNull</span> ViewPager2 viewPager<span class="token punctuation">,</span>    <span class="token keyword">boolean</span> autoRefresh<span class="token punctuation">,</span>    <span class="token annotation punctuation">@NonNull</span> TabConfigurationStrategy tabConfigurationStrategy<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">(</span>tabLayout<span class="token punctuation">,</span> viewPager<span class="token punctuation">,</span> autoRefresh<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">/* smoothScroll= */</span> <span class="token boolean">true</span><span class="token punctuation">,</span> tabConfigurationStrategy<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">public</span> <span class="token function">TabLayoutMediators</span><span class="token punctuation">(</span>    <span class="token annotation punctuation">@NonNull</span> TabLayout tabLayout<span class="token punctuation">,</span>    <span class="token annotation punctuation">@NonNull</span> ViewPager2 viewPager<span class="token punctuation">,</span>    <span class="token keyword">boolean</span> autoRefresh<span class="token punctuation">,</span>    <span class="token keyword">boolean</span> smoothScroll<span class="token punctuation">,</span>    <span class="token annotation punctuation">@NonNull</span> TabConfigurationStrategy tabConfigurationStrategy<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>tabLayout <span class="token operator">=</span> tabLayout<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>viewPager <span class="token operator">=</span> viewPager<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>autoRefresh <span class="token operator">=</span> autoRefresh<span class="token punctuation">;</span>    TabLayoutMediators<span class="token punctuation">.</span>smoothScroll <span class="token operator">=</span> smoothScroll<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>tabConfigurationStrategy <span class="token operator">=</span> tabConfigurationStrategy<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/**   * Link the TabLayout and the ViewPager2 together. Must be called after ViewPager2 has an adapter   * set. To be called on a new instance of TabLayoutMediator or if the ViewPager2's adapter   * changes.   *   * @throws IllegalStateException If the mediator is already attached, or the ViewPager2 has no   *     adapter.   */</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attach</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>attached<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">"TabLayoutMediator is already attached"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    adapter <span class="token operator">=</span> viewPager<span class="token punctuation">.</span><span class="token function">getAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>adapter <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>        <span class="token string">"TabLayoutMediator attached before ViewPager2 has an "</span> <span class="token operator">+</span> <span class="token string">"adapter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    attached <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Add our custom OnPageChangeCallback to the ViewPager</span>    onPageChangeCallback <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TabLayoutOnPageChangeCallback</span><span class="token punctuation">(</span>tabLayout<span class="token punctuation">)</span><span class="token punctuation">;</span>    viewPager<span class="token punctuation">.</span><span class="token function">registerOnPageChangeCallback</span><span class="token punctuation">(</span>onPageChangeCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Now we'll add a tab selected listener to set ViewPager's current item</span>    onTabSelectedListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ViewPagerOnTabSelectedListener</span><span class="token punctuation">(</span>viewPager<span class="token punctuation">,</span> smoothScroll<span class="token punctuation">)</span><span class="token punctuation">;</span>    tabLayout<span class="token punctuation">.</span><span class="token function">addOnTabSelectedListener</span><span class="token punctuation">(</span>onTabSelectedListener<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Now we'll populate ourselves from the pager adapter, adding an observer if</span>    <span class="token comment" spellcheck="true">// autoRefresh is enabled</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>autoRefresh<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// Register our observer on the new adapter</span>      pagerAdapterObserver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PagerAdapterObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      adapter<span class="token punctuation">.</span><span class="token function">registerAdapterDataObserver</span><span class="token punctuation">(</span>pagerAdapterObserver<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">populateTabsFromPagerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Now update the scroll position to match the ViewPager's current item</span>    tabLayout<span class="token punctuation">.</span><span class="token function">setScrollPosition</span><span class="token punctuation">(</span>viewPager<span class="token punctuation">.</span><span class="token function">getCurrentItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0f</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/**   * Unlink the TabLayout and the ViewPager. To be called on a stale TabLayoutMediator if a new one   * is instantiated, to prevent holding on to a view that should be garbage collected. Also to be   * called before {@link #attach()} when a ViewPager2's adapter is changed.   */</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">detach</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>autoRefresh <span class="token operator">&amp;&amp;</span> adapter <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>      adapter<span class="token punctuation">.</span><span class="token function">unregisterAdapterDataObserver</span><span class="token punctuation">(</span>pagerAdapterObserver<span class="token punctuation">)</span><span class="token punctuation">;</span>      pagerAdapterObserver <span class="token operator">=</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    tabLayout<span class="token punctuation">.</span><span class="token function">removeOnTabSelectedListener</span><span class="token punctuation">(</span>onTabSelectedListener<span class="token punctuation">)</span><span class="token punctuation">;</span>    viewPager<span class="token punctuation">.</span><span class="token function">unregisterOnPageChangeCallback</span><span class="token punctuation">(</span>onPageChangeCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>    onTabSelectedListener <span class="token operator">=</span> null<span class="token punctuation">;</span>    onPageChangeCallback <span class="token operator">=</span> null<span class="token punctuation">;</span>    adapter <span class="token operator">=</span> null<span class="token punctuation">;</span>    attached <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"WeakerAccess"</span><span class="token punctuation">)</span>  <span class="token keyword">void</span> <span class="token function">populateTabsFromPagerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    tabLayout<span class="token punctuation">.</span><span class="token function">removeAllTabs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>adapter <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">int</span> adapterCount <span class="token operator">=</span> adapter<span class="token punctuation">.</span><span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> adapterCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        TabLayout<span class="token punctuation">.</span>Tab tab <span class="token operator">=</span> tabLayout<span class="token punctuation">.</span><span class="token function">newTab</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tabConfigurationStrategy<span class="token punctuation">.</span><span class="token function">onConfigureTab</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>        tabLayout<span class="token punctuation">.</span><span class="token function">addTab</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token comment" spellcheck="true">// Make sure we reflect the currently set ViewPager item</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>adapterCount <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> lastItem <span class="token operator">=</span> tabLayout<span class="token punctuation">.</span><span class="token function">getTabCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> currItem <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>viewPager<span class="token punctuation">.</span><span class="token function">getCurrentItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lastItem<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>currItem <span class="token operator">!=</span> tabLayout<span class="token punctuation">.</span><span class="token function">getSelectedTabPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          tabLayout<span class="token punctuation">.</span><span class="token function">selectTab</span><span class="token punctuation">(</span>tabLayout<span class="token punctuation">.</span><span class="token function">getTabAt</span><span class="token punctuation">(</span>currItem<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/**   * A {@link ViewPager2.OnPageChangeCallback} class which contains the necessary calls back to the   * provided {@link TabLayout} so that the tab position is kept in sync.   *   * &lt;p>This class stores the provided TabLayout weakly, meaning that you can use {@link   * ViewPager2#registerOnPageChangeCallback(ViewPager2.OnPageChangeCallback)} without removing the   * callback and not cause a leak.   */</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">TabLayoutOnPageChangeCallback</span> <span class="token keyword">extends</span> <span class="token class-name">ViewPager2<span class="token punctuation">.</span>OnPageChangeCallback</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@NonNull</span> <span class="token keyword">private</span> <span class="token keyword">final</span> WeakReference<span class="token operator">&lt;</span>TabLayout<span class="token operator">></span> tabLayoutRef<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> previousScrollState<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> scrollState<span class="token punctuation">;</span>    <span class="token function">TabLayoutOnPageChangeCallback</span><span class="token punctuation">(</span>TabLayout tabLayout<span class="token punctuation">)</span> <span class="token punctuation">{</span>      tabLayoutRef <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakReference</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>tabLayout<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPageScrollStateChanged</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token keyword">int</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 根据 是滑动的viewPager还是 点击的 tab 去设置 是否需要平滑动画</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> SCROLL_STATE_DRAGGING<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 如果是滑动就设置平滑动画</span>        smoothScroll <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> SCROLL_STATE_IDLE<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 点击的tab就不设置平滑动画</span>        smoothScroll <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      previousScrollState <span class="token operator">=</span> scrollState<span class="token punctuation">;</span>      scrollState <span class="token operator">=</span> state<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPageScrolled</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">,</span> <span class="token keyword">float</span> positionOffset<span class="token punctuation">,</span> <span class="token keyword">int</span> positionOffsetPixels<span class="token punctuation">)</span> <span class="token punctuation">{</span>      TabLayout tabLayout <span class="token operator">=</span> tabLayoutRef<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>tabLayout <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// Only update the text selection if we're not settling, or we are settling after</span>        <span class="token comment" spellcheck="true">// being dragged</span>        <span class="token keyword">boolean</span> updateText <span class="token operator">=</span>          scrollState <span class="token operator">!=</span> SCROLL_STATE_SETTLING <span class="token operator">||</span> previousScrollState <span class="token operator">==</span> SCROLL_STATE_DRAGGING<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// Update the indicator if we're not settling after being idle. This is caused</span>        <span class="token comment" spellcheck="true">// from a setCurrentItem() call and will be handled by an animation from</span>        <span class="token comment" spellcheck="true">// onPageSelected() instead.</span>        <span class="token keyword">boolean</span> updateIndicator <span class="token operator">=</span>          <span class="token operator">!</span><span class="token punctuation">(</span>scrollState <span class="token operator">==</span> SCROLL_STATE_SETTLING <span class="token operator">&amp;&amp;</span> previousScrollState <span class="token operator">==</span> SCROLL_STATE_IDLE<span class="token punctuation">)</span><span class="token punctuation">;</span>        tabLayout<span class="token punctuation">.</span><span class="token function">setScrollPosition</span><span class="token punctuation">(</span>position<span class="token punctuation">,</span> positionOffset<span class="token punctuation">,</span> updateText<span class="token punctuation">,</span> updateIndicator<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPageSelected</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>      TabLayout tabLayout <span class="token operator">=</span> tabLayoutRef<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>tabLayout <span class="token operator">!=</span> null        <span class="token operator">&amp;&amp;</span> tabLayout<span class="token punctuation">.</span><span class="token function">getSelectedTabPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> position        <span class="token operator">&amp;&amp;</span> position <span class="token operator">&lt;</span> tabLayout<span class="token punctuation">.</span><span class="token function">getTabCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// Select the tab, only updating the indicator if we're not being dragged/settled</span>        <span class="token comment" spellcheck="true">// (since onPageScrolled will handle that).</span>        <span class="token keyword">boolean</span> updateIndicator <span class="token operator">=</span>          scrollState <span class="token operator">==</span> SCROLL_STATE_IDLE            <span class="token operator">||</span> <span class="token punctuation">(</span>scrollState <span class="token operator">==</span> SCROLL_STATE_SETTLING            <span class="token operator">&amp;&amp;</span> previousScrollState <span class="token operator">==</span> SCROLL_STATE_IDLE<span class="token punctuation">)</span><span class="token punctuation">;</span>        tabLayout<span class="token punctuation">.</span><span class="token function">selectTab</span><span class="token punctuation">(</span>tabLayout<span class="token punctuation">.</span><span class="token function">getTabAt</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">,</span> updateIndicator<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">void</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      previousScrollState <span class="token operator">=</span> scrollState <span class="token operator">=</span> SCROLL_STATE_IDLE<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/**   * A {@link TabLayout.OnTabSelectedListener} class which contains the necessary calls back to the   * provided {@link ViewPager2} so that the tab position is kept in sync.   */</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ViewPagerOnTabSelectedListener</span> <span class="token keyword">implements</span> <span class="token class-name">TabLayout<span class="token punctuation">.</span>OnTabSelectedListener</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> ViewPager2 viewPager<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 注释掉这个局部变量 使用最上边的那个全局变量</span>    <span class="token comment" spellcheck="true">//private final boolean smoothScroll;</span>    <span class="token function">ViewPagerOnTabSelectedListener</span><span class="token punctuation">(</span>ViewPager2 viewPager<span class="token punctuation">,</span> <span class="token keyword">boolean</span> smoothScroll<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>viewPager <span class="token operator">=</span> viewPager<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 这一行也注释掉</span>      <span class="token comment" spellcheck="true">//this.smoothScroll = smoothScroll;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTabSelected</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> TabLayout<span class="token punctuation">.</span>Tab tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>      viewPager<span class="token punctuation">.</span><span class="token function">setCurrentItem</span><span class="token punctuation">(</span>tab<span class="token punctuation">.</span><span class="token function">getPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> smoothScroll<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTabUnselected</span><span class="token punctuation">(</span>TabLayout<span class="token punctuation">.</span>Tab tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// No-op</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTabReselected</span><span class="token punctuation">(</span>TabLayout<span class="token punctuation">.</span>Tab tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// No-op</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">PagerAdapterObserver</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>AdapterDataObserver</span> <span class="token punctuation">{</span>    <span class="token function">PagerAdapterObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">populateTabsFromPagerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onItemRangeChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> positionStart<span class="token punctuation">,</span> <span class="token keyword">int</span> itemCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">populateTabsFromPagerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onItemRangeChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> positionStart<span class="token punctuation">,</span> <span class="token keyword">int</span> itemCount<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> Object payload<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">populateTabsFromPagerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onItemRangeInserted</span><span class="token punctuation">(</span><span class="token keyword">int</span> positionStart<span class="token punctuation">,</span> <span class="token keyword">int</span> itemCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">populateTabsFromPagerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onItemRangeRemoved</span><span class="token punctuation">(</span><span class="token keyword">int</span> positionStart<span class="token punctuation">,</span> <span class="token keyword">int</span> itemCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">populateTabsFromPagerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onItemRangeMoved</span><span class="token punctuation">(</span><span class="token keyword">int</span> fromPosition<span class="token punctuation">,</span> <span class="token keyword">int</span> toPosition<span class="token punctuation">,</span> <span class="token keyword">int</span> itemCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">populateTabsFromPagerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>具体用法为:</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">new</span> <span class="token class-name">TabLayoutMediators</span><span class="token punctuation">(</span>tabLayout<span class="token punctuation">,</span> viewPager2<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TabLayoutMediators<span class="token punctuation">.</span>TabConfigurationStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onConfigureTab</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> TabLayout<span class="token punctuation">.</span>Tab tab<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>        tab<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>tabTitles<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>和官方的用法一样 没啥差别</p><p><strong>—————————————————————————————</strong></p><p>如果即要求点击tab有动画 滑动页面也有动画 可以看下面这个 我们摒弃官方的 TabLayoutMediator 联动方法</p><p>我们自己来手动 让 tabLayout 和 viewPager2 联动起来</p><pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">firstMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 设置 tabLayout 标题</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tabTitles<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      tabLayout<span class="token punctuation">.</span><span class="token function">addTab</span><span class="token punctuation">(</span>tabLayout<span class="token punctuation">.</span><span class="token function">newTab</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>tabTitles<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 监听tabLayout事件 设置选中的viewPager2</span>    tabLayout<span class="token punctuation">.</span><span class="token function">addOnTabSelectedListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TabLayout<span class="token punctuation">.</span>OnTabSelectedListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTabSelected</span><span class="token punctuation">(</span>TabLayout<span class="token punctuation">.</span>Tab tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>        viewPager2<span class="token punctuation">.</span><span class="token function">setCurrentItem</span><span class="token punctuation">(</span>tab<span class="token punctuation">.</span><span class="token function">getPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTabUnselected</span><span class="token punctuation">(</span>TabLayout<span class="token punctuation">.</span>Tab tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTabReselected</span><span class="token punctuation">(</span>TabLayout<span class="token punctuation">.</span>Tab tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// viewPager2 滑动监听 设置tab选中</span>    viewPager2<span class="token punctuation">.</span><span class="token function">registerOnPageChangeCallback</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ViewPager2<span class="token punctuation">.</span>OnPageChangeCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token annotation punctuation">@Override</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPageSelected</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>        tabLayout<span class="token punctuation">.</span><span class="token function">selectTab</span><span class="token punctuation">(</span>tabLayout<span class="token punctuation">.</span><span class="token function">getTabAt</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>viewPager2的优点还是有目共睹的, 但是还是要去踩坑啊，我之前也是用<code>viewPager2</code> 但是没用对的话是会产生内存泄露的<br>所以就研究了一下 在这里记录一下问题 参考了很多博客 基本上都不咋解决问题</p><p>只有下面这四篇有帮助 感谢!!!</p><p>第一篇、 <a href="https://hitendev.github.io/2019/05/14/ViewPager2%E9%87%8D%E5%A4%A7%E6%9B%B4%E6%96%B0%EF%BC%8C%E6%94%AF%E6%8C%81offscreenPageLimit/">ViewPager2重大更新</a></p><p>第二篇、 <a href="https://juejin.cn/post/6844904114124652558#heading-9">ViewPager2主要功能</a></p><p>第三篇、 <a href="https://www.jianshu.com/p/2cc7bdd50c6c">解决ViewPager2+TabLayout懒加载问题，Fragment被创建多次</a></p><p>第四篇、<a href="https://blog.csdn.net/BirdEatBug/article/details/117414954">android ViewPager2+TabLayout、滑动效果相关问题！</a></p><p><strong>另外</strong></p><p>LeakCanary –&gt; <a href="https://square.github.io/leakcanary/getting_started/">内存泄漏检测工具</a></p><p>使用非常简单 </p><p>只需要 在build.gradle 中 添加这么一行就可以了 只会在debug模式下检测 不会影响到 正式环境</p><pre><code>dependencies {  // debugImplementation because LeakCanary should only run in debug builds.  debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'}</code></pre>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tabLayout </tag>
            
            <tag> viewPager2 </tag>
            
            <tag> fragment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 中的单例模式</title>
      <link href="2021/06/22/android-zhong-de-dan-li-mo-shi/"/>
      <url>2021/06/22/android-zhong-de-dan-li-mo-shi/</url>
      
        <content type="html"><![CDATA[<h3 id="Android-中的单例模式"><a href="#Android-中的单例模式" class="headerlink" title="Android 中的单例模式"></a>Android 中的单例模式</h3><h4 id="单例模式的优缺点"><a href="#单例模式的优缺点" class="headerlink" title="单例模式的优缺点"></a>单例模式的优缺点</h4><p>1、主要优点:</p><ul><li>提供了对唯一实例的受控访问。</li><li>由于在系统内存中只存在一个对象，因此可以节约系统资源，对于一些需要频繁创建和销毁的对象单例模式无疑可以提高系统的性能。</li><li>允许可变数目的实例</li></ul><p>2、主要缺点:</p><ul><li>由于单利模式中没有抽象层，因此单例类的扩展有很大的困难。</li><li>单例类的职责过重，在一定程度上违背了“单一职责原则”。</li><li>滥用单例将带来一些负面问题，如为了节省资源将数据库连接池对象设计为的单例类，可能会导致共享连接池对象的程序过多而出现连接池溢出；如果实例化的对象长时间不被利用，系统会认为是垃圾而被回收，这将导致对象状态的丢失。</li></ul><h4 id="Java中的几种单例模式"><a href="#Java中的几种单例模式" class="headerlink" title="Java中的几种单例模式"></a>Java中的几种单例模式</h4><blockquote><p>懒汉式、 饿汉式、 DCL双重校验模式、 静态内部类单例模式、 枚举单例、 使用容器实现单例模式</p></blockquote><h4 id="懒汉式-线程不安全"><a href="#懒汉式-线程不安全" class="headerlink" title="懒汉式(线程不安全)"></a>懒汉式(线程不安全)</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//懒汉式单例类.在第一次调用的时候实例化自己   </span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Singleton</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//私有的构造函数</span>    <span class="token keyword">private</span> <span class="token function">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>     <span class="token comment" spellcheck="true">//私有的静态变量 </span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Singleton single <span class="token operator">=</span> null<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//暴露的公有静态方法   </span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Singleton <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span>single <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                 single <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>            <span class="token keyword">return</span> single<span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>如果多个线程同时调用 getInstance 方法，可能存在同时判断 instance 变量是否为空的情况，上面的代码中很容易导致重复创建多个实例，这违背了单例模式的目的。</li><li>这种方式创建的缺点是存在线程不安全的问题，解决的办法就是使用synchronized 关键字，便是单例模式的第二种写法了。</li></ul><h4 id="懒汉式-线程安全"><a href="#懒汉式-线程安全" class="headerlink" title="懒汉式(线程安全)"></a>懒汉式(线程安全)</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Singleton</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//私有的静态变量</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Singleton instance<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//私有的构造方法</span>    <span class="token keyword">private</span> <span class="token function">Singleton</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//公有的同步静态方法</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> Singleton <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>instance <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>          instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">return</span> instance<span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>这种单例实现方式的getInstance（）方法中添加了synchronized 关键字，也就是告诉Java（JVM）getInstance是一个同步方法。</li><li>同步的意思是当两个并发线程访问同一个类中的这个synchronized同步方法时，一个时间内只能有一个线程得到执行，另一个线程必须等待当前线程执行完才能执行，因此同步方法使得线程安全，保证了单例只有唯一个实例。</li><li>缺点也很明显 每次每次调用getInstance（）都进行同步，造成了不必要的同步开销。这种模式一般不建议使用。效率低</li></ul><h4 id="饿汉式-天生线程安全"><a href="#饿汉式-天生线程安全" class="headerlink" title="饿汉式(天生线程安全)"></a>饿汉式(天生线程安全)</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//饿汉式单例类.在类初始化时，已经自行实例化   </span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Singleton</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//static修饰的静态变量在内存中一旦创建，便永久存在</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> Singleton instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">private</span> <span class="token function">Singleton</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token keyword">public</span> <span class="token keyword">static</span> Singleton <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> instance<span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>饿汉式的例子一看就懂，不管三七二十一先创建了对象再说，不同的进程通过 getInstance 获取的都是同一个对象，所以是线程安全的。</li><li>缺点: 如果某个类创建过程会消耗很多资源，但程序运行中没有调用过 getInstance 方法，那么就存在资源浪费的情况，如果一个系统存在非常多此类情况那么这个系统可能存在性能上的问题。</li><li>所以，我们需要的是一种延迟加载的功能。</li></ul><h4 id="DCL双重校验模式-推荐使用"><a href="#DCL双重校验模式-推荐使用" class="headerlink" title="DCL双重校验模式(推荐使用)"></a>DCL双重校验模式(推荐使用)</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Singleton</span> <span class="token punctuation">{</span>      <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">static</span> Singleton singleton<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//静态变量</span>    <span class="token keyword">private</span> <span class="token function">Singleton</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//私有构造函数</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Singleton <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>singleton <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//第一层校验</span>          <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>Singleton<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>singleton <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//第二层校验</span>              singleton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>      <span class="token keyword">return</span> singleton<span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>这种写法也是用的最多的 增加了效率的同时 也是线程安全的</li></ul><h4 id="静态内部类-推荐使用"><a href="#静态内部类-推荐使用" class="headerlink" title="静态内部类(推荐使用)"></a>静态内部类(推荐使用)</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Singleton</span> <span class="token punctuation">{</span>      <span class="token keyword">private</span> <span class="token function">Singleton</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">//私有的构造函数</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Singleton <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> SingletonHolder<span class="token punctuation">.</span>INSTANCE<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token comment" spellcheck="true">//定义的静态内部类</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">SingletonHolder</span> <span class="token punctuation">{</span>          <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Singleton INSTANCE <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//创建实例的地方</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>这种方法也可以做到延迟加载，但是它又不同于饿汉式。</li><li>因为只有调用 getInstance 时，SingletonHolder 才会进行初始化。</li><li>Android中涉及到图片缓存加载的时候经常会看到一些开源组件有各类 ImageHolder 的代码，原理正是如此。</li></ul><h4 id="枚举类型"><a href="#枚举类型" class="headerlink" title="枚举类型"></a>枚举类型</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> Singleton <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//enum枚举类</span>    INSTANCE<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">whateverMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>枚举单例模式最大的优点就是写法简单，枚举在java中与普通的类是一样的，不仅能够有字段，还能够有自己的方法，最重要的是默认枚举实例是线程安全的，并且在任何情况下，它都是一个单例。即使是在反序列化的过程，枚举单例也不会重新生成新的实例。</li></ul><p>我们只需要 Singleton.INSTANCE.whateverMethod() 来访问实例的方法，这比调用getInstance()方法简单多了</p><h4 id="容器式"><a href="#容器式" class="headerlink" title="容器式"></a>容器式</h4><pre><code>public class SingletonManager { 　　private static Map&lt;String, Object&gt; objMap = new HashMap&lt;String,Object&gt;();//使用HashMap作为缓存容器　　private Singleton() { }　　public static void registerService(String key, Objectinstance) {　　　　if (!objMap.containsKey(key) ) {　　　　　　objMap.put(key, instance) ;//第一次是存入Map　　　　}　　}　　public static ObjectgetService(String key) {　　　　return objMap.get(key) ;//返回与key相对应的对象　　}}</code></pre><ul><li>在程序的初始，将多种单例模式注入到一个统一的管理类中，在使用时根据key获取对应类型的对象。</li></ul><p>总结 推荐使用 DCL 和 静态内部类的方式</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单例模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 知识总结</title>
      <link href="2021/06/22/android-zhi-shi-zong-jie/"/>
      <url>2021/06/22/android-zhi-shi-zong-jie/</url>
      
        <content type="html"><![CDATA[<h3 id="Android-细碎知识总结"><a href="#Android-细碎知识总结" class="headerlink" title="Android 细碎知识总结"></a>Android 细碎知识总结</h3><h5 id="1、implementation、api-的区别"><a href="#1、implementation、api-的区别" class="headerlink" title="1、implementation、api 的区别"></a>1、implementation、api 的区别</h5><blockquote><p>android studio 3.0 版本之后 gradle 也升级为了3.x版本</p><p>compile已过时，已被 implementation 和api 取代</p></blockquote><p>那么，他们之间的区别在哪？</p><ul><li><p>implementation: 只能在内部使用此模块，比如我在一个libiary中使用implementation依赖了gson库，然后我的主项目依赖了libiary，那么，我的主项目就无法访问gson库中的方法。<br>这样的好处是编译速度会加快，推荐使用implementation的方式去依赖，</p></li><li><p>api: 如果你需要提供给外部访问，那么就使用api依赖即可</p></li></ul><h5 id="2、Android中为什么不推荐使用-Enum-枚举"><a href="#2、Android中为什么不推荐使用-Enum-枚举" class="headerlink" title="2、Android中为什么不推荐使用 Enum (枚举)"></a>2、Android中为什么不推荐使用 Enum (枚举)</h5><p>大家都说 Android 中不应该使用 Enum，而且官方文档上也写出不应该使用 Enum，好那我就不用了，<br>改成 Android 注解。然后这句好就被一传十，十传百，<br>所有人都记住了 “ Android 中不推荐使用枚举，请使用注解代替”。</p><p>谣言 绝对的谣言</p><p>JakeWharton 关于 Android 中使用枚举的一些建议：</p><p>JW 认为 ProGuard 和 R8 会在编译的时候会将琐碎的枚举优化为整型，不存在效率低下的问题，enum 效率低下只是 Android 团队散布的谣言，同时 Kotlin 和 Java 中的 Enum 在编译成字节码之后是一样的。</p><p>更多的时候我们不需要过分关心使用 Enum 带来的内存增长，你要记住 Enum 是一个类，它只是占用了作为一个类来说应有的内存。</p><p>所以是可以使用的.</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 逆向工程</title>
      <link href="2021/05/19/android-ni-xiang-gong-cheng/"/>
      <url>2021/05/19/android-ni-xiang-gong-cheng/</url>
      
        <content type="html"><![CDATA[<h3 id="Android-逆向工程"><a href="#Android-逆向工程" class="headerlink" title="Android 逆向工程"></a>Android 逆向工程</h3><h4 id="一、需要的工具"><a href="#一、需要的工具" class="headerlink" title="一、需要的工具"></a>一、需要的工具</h4><p>1、Apktool</p><blockquote><p>是一款应用在Apk上的逆向工程的工具，它有编译、反编译、签名等功能</p></blockquote><p>使用HomeBrew安装Apktool </p><p><a href="https://ibotpeaches.github.io/Apktool/install/">这里给出其他安装方式</a></p><pre><code>cd ~brew install apktool</code></pre><p>安装完以后输入</p><pre><code>apktool</code></pre><p>如果出现 下方的东西 安装成功</p><pre><code>Apktool v2.5.0 - a tool for reengineering Android apk fileswith smali v2.4.0 and baksmali v2.4.0Copyright 2010 Ryszard Wiśniewski &lt;brut.alll@gmail.com&gt;Copyright 2010 Connor Tumbleson &lt;connor.tumbleson@gmail.com&gt;usage: apktool -advance,--advanced   prints advance information. -version,--version    prints the version then exitsusage: apktool if|install-framework [options] &lt;framework.apk&gt; -p,--frame-path &lt;dir&gt;   Stores framework files into &lt;dir&gt;. -t,--tag &lt;tag&gt;          Tag frameworks using &lt;tag&gt;.usage: apktool d[ecode] [options] &lt;file_apk&gt; -f,--force              Force delete destination directory. -o,--output &lt;dir&gt;       The name of folder that gets written. Default is apk.out -p,--frame-path &lt;dir&gt;   Uses framework files located in &lt;dir&gt;. -r,--no-res             Do not decode resources. -s,--no-src             Do not decode sources. -t,--frame-tag &lt;tag&gt;    Uses framework files tagged by &lt;tag&gt;.usage: apktool b[uild] [options] &lt;app_path&gt; -f,--force-all          Skip changes detection and build all files. -o,--output &lt;dir&gt;       The name of apk that gets written. Default is dist/name.apk -p,--frame-path &lt;dir&gt;   Uses framework files located in &lt;dir&gt;.For additional info, see: https://ibotpeaches.github.io/Apktool/ For smali/baksmali info, see: https://github.com/JesusFreke/smali</code></pre><p>2、dex2jar</p><blockquote><p>这款工具的作用主要是将dex文件转换成jar文件，转换成jar后我们才好借助JD-GUI来查看反编译dex后的代码</p></blockquote><p><a href="https://github.com/geilige/dex2jar/releases">下载路径</a></p><p>请下载最新的压缩包</p><p>下载完后直接解压就行了 后面我们再说用途</p><p>3、JD-GUI </p><blockquote><p>一款Java反编译器GUI，通过它我们能查看到反编译后的dex的代码，通常需要配合dex2jar使用;</p></blockquote><p><a href="http://java-decompiler.github.io/">下载路径</a></p><p>下载完后解压 进入到文件夹双击图标的时候 如果提示打不开就去  系统偏好设置-&gt; 安全性和隐私 -&gt; 通用 </p><p>设置一下允许</p><h4 id="二、具体操作"><a href="#二、具体操作" class="headerlink" title="二、具体操作"></a>二、具体操作</h4><p>1、首先我们找到一个apk文件</p><pre><code>apktool d test.apk</code></pre><p>运行完成后，得到一个包含资源文件和代码的文件：</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210519180706.png"></p><h5 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h5><p>此时 dex 文件直接反编译成了 smali 文件，而我们需要的是 .dex 文件。</p><p>此时再运行：</p><pre><code>apktool d -s -f test.apk</code></pre><blockquote><p>-d 反编译 apk 文件</p><p>-s 不反编译 dex 文件，而是将其保留</p><p>-f 如果目标文件夹存在，则删除后重新反编译</p></blockquote><p>此时得到这样的文件夹：</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210519180931.png"></p><p>2、将上一步得到的 classes.dex 文件(可能是多个) copy到dex2jar 解压好的目录中 </p><p>运行代码</p><pre><code>sh d2j-dex2jar.sh classes.dex</code></pre><p>如果提示：</p><pre><code>d2j-dex2jar.sh: line 36: ./d2j_invoke.sh: Permission denied</code></pre><p>执行</p><pre><code>sudo chmod +x d2j_invoke.sh</code></pre><p>然后在执行</p><pre><code>sh d2j-dex2jar.sh classes.dex</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210519181313.png"></p><p>运行成功 会在当前目录下生成对应的 .jar文件</p><p>3、 我们打开 可视化工具 jd-gui</p><p>将刚才生成的 .jar 文件拖进去 就能看到源码了</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210519181524.png"></p><p><a href="https://www.zhihu.com/question/29370382">参考文章1</a></p><p><a href="https://blog.csdn.net/fengyuzhengfan/article/details/80286704">参考文章2</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向工程 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>recycleView去掉滑动边界阴影</title>
      <link href="2021/04/27/recycleview-qu-diao-hua-dong-bian-jie-yin-ying/"/>
      <url>2021/04/27/recycleview-qu-diao-hua-dong-bian-jie-yin-ying/</url>
      
        <content type="html"><![CDATA[<h4 id="RecycleView-去掉滑动边界的阴影"><a href="#RecycleView-去掉滑动边界的阴影" class="headerlink" title="RecycleView 去掉滑动边界的阴影"></a>RecycleView 去掉滑动边界的阴影</h4><pre><code>&lt;android.support.v7.widget.RecyclerView    android:layout_width="match_parent"    android:layout_height="match_parent"    android:overScrollMode="never" /&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RecycleView </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu权限详解</title>
      <link href="2021/03/29/ubuntu-quan-xian-xiang-jie/"/>
      <url>2021/03/29/ubuntu-quan-xian-xiang-jie/</url>
      
        <content type="html"><![CDATA[<h3 id="Ubuntu权限详解"><a href="#Ubuntu权限详解" class="headerlink" title="Ubuntu权限详解"></a>Ubuntu权限详解</h3><p>在Linux系统中，文件的权限控制着文件的所有操作，比如一个文件的读写权限、执行权限、是否为目录等等。<br>以下操作全部在终端中执行</p><p>输入ls -altrh</p><pre><code>user1@wzjing-win10:/mnt/c/Users/user1$ ls -ltotal 458391864drwxrwxrwx 0 root root       512 May 13 00:51 AppDatadrwxrwxrwx 0 root root       512 Apr 25 00:10 CLionProjectsdrwxrwxrwx 0 root root       512 May 22 09:32 compiledrwxrwxrwx 0 root root       512 May 28 14:08 Desktop-rwxrwxrwx 0 root root       512 May 28 14:08 test.apk</code></pre><p>每一行的含义分别如下:</p><table><thead><tr><th>权限</th><th>incode</th><th>所属用户</th><th>所属用户组</th><th>文件大小</th><th>修改时间</th><th>文件或文件名</th></tr></thead><tbody><tr><td>drwxrwxrwx</td><td>0</td><td>root</td><td>root</td><td>512</td><td>May 13 00:51</td><td>AppData</td></tr></tbody></table><p>每一行的第一个字段，如<code>drwxrwxrwx</code>代表了这个文件的权限详情，共分为10位，由 d r w x - 五种标识符组成，</p><ul><li><code>d</code> 是否为目录</li><li><code>r</code> 代表用户是否有读取权限</li><li><code>w</code> 代表用户是否有写入权限</li><li><code>x</code> 代表用户是否有执行权限</li><li><code>-</code> 代表此项为空，也就是没有此项权限的意思</li></ul><table><thead><tr><th>位置</th><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>第1位</td><td>d</td><td>代表是否为文件夹</td></tr><tr><td>第2-4位</td><td>rwx</td><td>代表所属用户的读 写 执行权限</td></tr><tr><td>第5-7位</td><td>rwx</td><td>代表所属用户组的读 写 执行权限</td></tr><tr><td>第8-10位</td><td>rwx</td><td>代表其他用户的读 写 执行权限</td></tr></tbody></table><p>如第一位是<code>d</code>代表是文件夹， 第一位如果是-代表不是文件夹（那不就是文件喽）<br><code>rwx</code>代表有读取、写入、执行权限，如果为<code>-wd</code>代表无读取、有写入、有执行权限<br>好吧，现在来理解这一行</p><pre><code>drwxrwxrwx 0 root root       512 May 13 00:51 AppData</code></pre><ul><li>第1位 <code>d</code> 是文件夹</li><li>2-4位 <code>rwx</code> 所属用户root有 读取、写入、执行 三项权限</li><li>5-7位 <code>rwx</code> 所属用户组root有 读取、写入、执行 三项权限</li><li>8-10位 <code>rwx</code> 其他用户user1有 读取、写入、执行 三项权限</li></ul><h3 id="使用chmod命令更改文件权限"><a href="#使用chmod命令更改文件权限" class="headerlink" title="使用chmod命令更改文件权限"></a>使用<code>chmod</code>命令更改文件权限</h3><p>语法<code>chmod [权限操作] [文件名]</code><br>你不能把一个文件改成文件夹或者把文件夹改成文件，所以你只能改后9位<br>使用 <code>u g o a</code> 代表要更改的权限群组，</p><ul><li><code>u</code> [代表所属用户]</li><li><code>g</code> [代表所属用户组]</li><li><code>o</code> [代表其他用户]</li><li><code>a</code> [代表以上所有三个]</li><li><code>-</code> [代表删除权限]</li><li><code>+</code> [代表增加权限]</li><li><code>=</code> [代表将权限设置为]</li></ul><p><strong>示例</strong>（如果提示你没权限修改的话，就在命令前边增加<code>sudo</code>）</p><p><code>chmod u+x test.apk</code> 代表增加所属用户对test.apk的可执行权限</p><p><code>chmod a-w AppData</code> 代表删除所有人对AppData这个文件夹的写入权限</p><p><code>chmod -w AppData</code> a可以省略，此条命令和上边这条完全相同</p><p><strong>也可以一次设置多个权限</strong></p><p><code>chmod g+rwx AppData</code> 代表添加所属用户组可读取、可写入、可执行权限</p><p><code>chmod g=rwx AppData</code> 代表把所属用户组的权限设置为可读取、可写入、可执行</p><p><strong>Tip:</strong>  其实<code>+</code>和<code>=</code>的区别不是很大</p><p><strong>有一种更为简便的写法：</strong></p><p>Linux系统内部设定： <code>r=4 w=2 x=1 -=0</code></p><p><code>r w x</code>任意一种组合的三个值相加的结果都不同</p><p>如：</p><p>rwx=7</p><p>-wx=3</p><p>r-x=5</p><p>rw-=6</p><p>所以可以这么写命令：</p><p><code>chmod 777 test.apk</code> 设置权限为 -rwxrwxrwx</p><p><code>chmod 755 test.apk</code> 设置权限为 -rwxr-xr-x</p><p><code>chmod 666 test.apk</code> 设置权限为 -rw-rw-rw-</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器安装oh_my_zsh</title>
      <link href="2021/03/29/fu-wu-qi-an-zhuang-oh-my-zsh/"/>
      <url>2021/03/29/fu-wu-qi-an-zhuang-oh-my-zsh/</url>
      
        <content type="html"><![CDATA[<h3 id="给自己的服务器安装-oh-my-zsh"><a href="#给自己的服务器安装-oh-my-zsh" class="headerlink" title="给自己的服务器安装 oh my zsh"></a>给自己的服务器安装 oh my zsh</h3><h4 id="1、安装zsh"><a href="#1、安装zsh" class="headerlink" title="1、安装zsh"></a>1、安装zsh</h4><p><code>oh my zsh</code> 需要先安装<code>zsh</code> 所以如果你没有装<code>zsh</code>的话需要先装一下</p><pre><code>cd ~sudo apt install zsh</code></pre><h3 id="2、安装git"><a href="#2、安装git" class="headerlink" title="2、安装git"></a>2、安装git</h3><p>需要安装<code>git</code>因为在装<code>oh my zsh</code>的时候会去clone它的仓库，所以需要装个<code>git</code></p><pre><code>sudo apt install git</code></pre><h3 id="3、安装oh-my-zsh"><a href="#3、安装oh-my-zsh" class="headerlink" title="3、安装oh my zsh"></a>3、安装<code>oh my zsh</code></h3><p>这个过程中可能会出现无法连接github的问题，我之前的博客也有解决方案 可以搜一下关键字 <code>解决服务器连不上github的问题</code></p><pre><code>sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210329100744.png"></p><p>在安装的过程中会问你是否设为默认终端 选择<code>y</code>就行了</p><h3 id="4、更换主题"><a href="#4、更换主题" class="headerlink" title="4、更换主题"></a>4、更换主题</h3><pre><code>cd ~sudo vim .zshrc</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210329101040.png"></p><p>这里去改一下主题名称，保存并退出  然后 <code>source .zshrc</code> 就可以了</p>]]></content>
      
      
      <categories>
          
          <category> oh my zsh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决服务器连不上github的问题</title>
      <link href="2021/03/29/jie-jue-fu-wu-qi-lian-bu-shang-github-de-wen-ti/"/>
      <url>2021/03/29/jie-jue-fu-wu-qi-lian-bu-shang-github-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<h3 id="解决服务器连不上github的问题"><a href="#解决服务器连不上github的问题" class="headerlink" title="解决服务器连不上github的问题"></a>解决服务器连不上github的问题</h3><p>报错信息:</p><pre><code>fatal: unable to access 'https://github.com/ohmyzsh/ohmyzsh.git/': Empty reply from serverError: git clone of oh-my-zsh repo failed</code></pre><p>本来想改变一下服务器终端的主题，一直都是黑白色 有些单调，就想着安装一个 <code>on my zsh</code> 结果死活连不上<code>github</code></p><p>一向贫穷的我怎么买的起香港的服务器当跳板呢，所以绞尽脑汁看各种资料 终于还是发现了</p><p>具体步骤如下:</p><p>1、首先我们去查一下<code>github.com</code>的ip地址</p><p><a href="https://www.ipaddress.com/ip-lookup">https://www.ipaddress.com/ip-lookup</a></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210329093225.png"></p><p>2、我们进入自己的服务器的<code>/etc</code> 目录下</p><pre><code>cd /etcsudo vim hosts</code></pre><p>在<code>hosts</code>文件最后一行 加上下面这行，并保存退出服务器 重新进一下</p><pre><code>GitHub的IP   github.com</code></pre><p>GitHub的IP 是我们刚才查到的</p><p>发现可以连上了。</p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 腾讯云服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ETH智能合约开发</title>
      <link href="2021/03/19/eth-zhi-neng-he-yue-kai-fa/"/>
      <url>2021/03/19/eth-zhi-neng-he-yue-kai-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="ETH智能合约开发-vue-智能合约"><a href="#ETH智能合约开发-vue-智能合约" class="headerlink" title="ETH智能合约开发(vue + 智能合约)"></a>ETH智能合约开发(vue + 智能合约)</h2><h3 id="一、什么是ETH智能合约"><a href="#一、什么是ETH智能合约" class="headerlink" title="一、什么是ETH智能合约"></a>一、什么是ETH智能合约</h3><blockquote><p>说白了就是一段可以运行在以太坊平台上的代码，应用中，我们可以使用 Solidity 来编写和区块链交互的智能合约，<br>合约编写好之后，我们通过一个有余额的外部账户将合约部署到以太坊节点上，<br>并运行合约（使用 Truffle 框架可以更好的帮助我们做这些事情）</p></blockquote><h3 id="二、Truffle-和-ganache-cli-简介"><a href="#二、Truffle-和-ganache-cli-简介" class="headerlink" title="二、Truffle 和 ganache-cli 简介"></a>二、Truffle 和 ganache-cli 简介</h3><blockquote><p>Truffle Truffle是Dapp开发框架，他可以帮我们处理掉大量无关紧要的小事情，<br>让我们可以迅速开始写代码-编译-部署-测试-打包DApp这个流程。<br>Truffle是使用Nodejs开发的，我们首先需要安装Nodejs运行环境。</p></blockquote><blockquote><p>ganache-cli是以太坊节点仿真器软件ganache的命令行版本，可以方便开发者快速进行以太坊DApp的开发与测试。</p></blockquote><p>1、Truffle安装</p><p>查看node版本 没有安装node的请自行google安装</p><pre><code># Nodejs版本&gt; npm -v6.0.0&gt; node -vv8.9.4</code></pre><p>全局安装Truffle工具。</p><pre><code>npm install -g truffle</code></pre><p>安装完成后查看命令行是否安装成功</p><pre><code>&gt; truffleTruffle v4.1.12 - a development framework for EthereumUsage: truffle  [options]Commands:  init      Initialize new and empty Ethereum project  compile   Compile contract source files  migrate   Run migrations to deploy contracts  deploy    (alias for migrate)  build     Execute build pipeline (if configuration present)  test      Run JavaScript and Solidity tests  debug     Interactively debug any transaction on the blockchain (experimental)  opcode    Print the compiled opcodes for a given contract  console   Run a console with contract abstractions and commands available  develop   Open a console with a local development blockchain  create    Helper to create new contracts, migrations and tests  install   Install a package from the Ethereum Package Registry  publish   Publish a package to the Ethereum Package Registry  networks  Show addresses for deployed contracts on each network  watch     Watch filesystem for changes and rebuild the project automatically  serve     Serve the build directory on localhost and watch for changes  exec      Execute a JS module within this Truffle environment  unbox     Download a Truffle Box, a pre-built Truffle project  version   Show version number and exitSee more at http://truffleframework.com/docs</code></pre><p>2、全局安装ganache-cli</p><pre><code>npm install -g ganache-cli</code></pre><h3 id="三、创建项目"><a href="#三、创建项目" class="headerlink" title="三、创建项目"></a>三、创建项目</h3><pre><code>&gt; cd ~&gt; mkdir truffle-crowdfund&gt; cd truffle-crowdfund# 初始化项目&gt; truffle initDownloading...Unpacking...Setting up...Unbox successful. Sweet!Commands:  Compile:        truffle compile  Migrate:        truffle migrate  Test contracts: truffle test</code></pre><h3 id="四、启动测试节点"><a href="#四、启动测试节点" class="headerlink" title="四、启动测试节点"></a>四、启动测试节点</h3><pre><code>ganache-cli</code></pre><p>它会自动给我们生成10个带有100个eth的账户</p><h3 id="五、接下来写合约代码并部署到测试网络上"><a href="#五、接下来写合约代码并部署到测试网络上" class="headerlink" title="五、接下来写合约代码并部署到测试网络上"></a>五、接下来写合约代码并部署到测试网络上</h3><h4 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h4><blockquote><p>假设我准备出版一本区块练技术书籍，但是不确定有多少人愿意购买这本书，于是我发起了一个众筹， 如果在一个月内，<br>  能筹集到 10 个 ETH，我就进行写作，并给参与的读者每人赠送一本书，如果未能筹到足够的资金，<br>  参与的读者赎回之前投入的资金。<br>  同时，为了让读者积极参与，初始时，参与众筹的价格非常低（0.02 ETH），每筹集满 1 个 ETH 时，价格上涨 0.002ETH。<br>  归纳出合约三个对外动作（函数）：</p></blockquote><blockquote><p>1、汇款进合约，可通过实现合约的回退函数来实现。</p><p>2、读者赎回汇款，这个函数仅仅在众筹未达标之后，由读者本人调用生效。</p><p>3、创作者提取资金，这个函数需要在众筹达标之后，由创作者调用。</p></blockquote><blockquote><p>除此之外，还需要一个状态变量来保存以下状态：</p></blockquote><blockquote><p>1、用户众筹的金额，使用一个 mapping 来保存。</p><p>2、当前众筹的价格，以及一个相应的内部函数逐步上涨价格。价格可以使用一个 uint 来保存。</p><p>3、合约众筹的截止时间，用 uint 来保存， 在合约创建时往后追加 30 天，在构造函数中完成。</p><p>4、记录合约众筹的收益者，即创作者，在合约创建时在构造函数中进行赋值，合约创建者就是创作者。</p><p>5、再加入众筹状态，如果众筹停止阻止用户在参与。创作者提取资金时及时关闭众筹。</p></blockquote><h4 id="实现众筹合约"><a href="#实现众筹合约" class="headerlink" title="实现众筹合约"></a>实现众筹合约</h4><p>我们进入到上面使用<code>truffle init</code>命令创建的项目中去</p><p>在 contracts 下创建一个合约文件 Crowdfunding.sol:</p><pre><code>pragma solidity &gt;=0.4.21 &lt;0.7.0;contract Crowdfunding {    // 创作者    address public author;    // 参与金额    mapping(address =&gt; uint) public joined;    // 众筹目标    uint constant Target = 10 ether;    // 众筹截止时间    uint public endTime;    // 记录当前众筹价格    uint public price  = 0.02 ether ;    // 作者提取资金之后，关闭众筹    bool public closed = false;    // 部署合约时调用，初始化作者以及众筹结束时间    constructor() public {        author = msg.sender;        endTime = now + 30 days;    }    // 更新价格，这是一个内部函数    function updatePrice() internal {        uint rise = address(this).balance / 1 ether * 0.002 ether;        price = 0.02 ether + rise;    }    // 用户向合约转账时 触发的回调函数    function () external payable {        require(now &lt; endTime &amp;&amp; !closed  , "众筹已结束");        require(joined[msg.sender] == 0 , "你已经参与过众筹");        require (msg.value &gt;= price, "出价太低了");        joined[msg.sender] = msg.value;        updatePrice();    }     // 作者提取资金    function withdrawFund() external {        require(msg.sender == author, "你不是作者");        require(address(this).balance &gt;= Target, "未达到众筹目标");        closed = true;           msg.sender.transfer(address(this).balance);    }    // 读者赎回资金    function withdraw() external {        require(now &gt; endTime, "还未到众筹结束时间");        require(!closed, "众筹达标，众筹资金已提取");        require(Target &gt; address(this).balance, "众筹达标，你没法提取资金");        msg.sender.transfer(joined[msg.sender]);    }}</code></pre><blockquote><p>代码的介绍，在合约代码中，使用到了 Solidity 语言中的一些知识点：</p></blockquote><blockquote><p>ether : 这是货币单位<br>。<br>days : 这是时间单位，1 days 对应 1 天的秒数。</p><p>now : 这是一个 Solidity 的内置属性，用于获取当前的时间戳，单位是秒。</p><p>require : 如果条件不满足回退交易。</p><p>address.transfer(value) : 对某一个地址进行转账。</p><p>有关 Solidity 语言入门推荐大家使用官网课程 <a href="https://cryptozombies.io/zh/course/">僵尸游戏</a></p></blockquote><h4 id="合约部署"><a href="#合约部署" class="headerlink" title="合约部署"></a>合约部署</h4><p>部署之前我们使用 <code>truffle compile</code> 命令来进行编译</p><p>之后，在 migrations 下创建一个部署脚本 2_crowfunding.js ，内容如下：</p><pre><code>const crowd = artifacts.require("Crowdfunding");module.exports = function(deployer) {  deployer.deploy(crowd);};</code></pre><p>接下来你的文件目录应该是这样的:</p><pre><code>├── build│&nbsp;&nbsp; └── contracts│&nbsp;&nbsp;     ├── CrowdFunding.json│&nbsp;&nbsp;     └── Migrations.json├── contracts│&nbsp;&nbsp; ├── CrowdFunding.sol│&nbsp;&nbsp; └── Migrations.sol├── migrations│&nbsp;&nbsp; ├── 1_initial_migration.js│&nbsp;&nbsp; └── 2_crowdfunding_migration.js├── test└── truffle-config.js</code></pre><p>注意一下这个<code>1_initial_migration.js</code>文件和 <code>Migrations.sol</code>文件 这是我们在使用<code>truffle init</code>命令初始化项目时它为我们生成的文件 这两个文件是不能删除的否则会无法进行部署，我们在<code>migrations</code>文件夹下面创建的文件要按照 1_xxx.js, 2_xxx.js 在部署的时候是按照这个顺序进行的。</p><p>下面我们配置部署脚本<code>truffle-config.js</code></p><p>配置之前 我们还需要做一些事情：</p><p>1、注册infura获取PROJECT-ID</p><p><a href="https://infura.io/">infura</a>是基于ETH的chain公共API服务，为开发者提供链上数据查询、交易广播等功能。</p><p>注册成功之后需要创建项目</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210325100549.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210325100631.png"></p><p>项目名字是随便起的无所谓</p><p>项目创建完之后你就能看到PROJECT-ID了这个我们待会要用</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210325100830.png"></p><p>2、我们还需要一个浏览器插件 <a href="https://metamask.io/">MetaMask</a> 推荐大家使用Chrome浏览器 </p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210325101145.png"></p><p>按照步骤注册账户，并将助记词保存下来， 我们下面要用到</p><p>我们需要获取ETH，以为部署是要gas费的, 测试网络可以每天给我们5个ETH 这足够我们使用了</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210325103044.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210325103155.png"></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210325103316.png"></p><p>3、安装 <code>truffle-hdwallet-provider</code></p><p>由于需要将合约部署到测试网Ropsten，此过程需要部署者私钥进行签名再将数据进行广播，<br><code>truffle-hdwallet-provider</code>是truffle上提供交易离线签名的模块</p><p>注：必须在truffle框架的代码目录下安装，否则不生效</p><pre><code>&gt; cd truffle-crowdfund&gt; npm install truffle-hdwallet-provider</code></pre><p>4、我们终于可以进行修改<code>truffle-config.js</code>部署脚本了</p><pre><code>/** * Use this file to configure your truffle project. It's seeded with some * common settings for different networks and features like migrations, * compilation and testing. Uncomment the ones you need or modify * them to suit your project as necessary. * * More information about configuration can be found at: * * trufflesuite.com/docs/advanced/configuration * * To deploy via Infura you'll need a wallet provider (like @truffle/hdwallet-provider) * to sign your transactions before they're sent to a remote public node. Infura accounts * are available for free at: infura.io/register. * * You'll also need a mnemonic - the twelve word phrase the wallet uses to generate * public/private key pairs. If you're publishing your code to GitHub make sure you load this * phrase from a file you've .gitignored so it doesn't accidentally become public. * */const HDWalletProvider = require('truffle-hdwallet-provider');// const infuraKey = "fj4jll3k.....";//const fs = require('fs');const mnemonic = fs.readFileSync(".secret").toString().trim();module.exports = {  /**   * Networks define how you connect to your ethereum client and let you set the   * defaults web3 uses to send transactions. If you don't specify one truffle   * will spin up a development blockchain for you on port 9545 when you   * run `develop` or `test`. You can ask a truffle command to use a specific   * network from the command line, e.g   *   * $ truffle test --network &lt;network-name&gt;   */  networks: {    // Useful for testing. The `development` name is special - truffle uses it by default    // if it's defined here and no other network is specified at the command line.    // You should run a client (like ganache-cli, geth or parity) in a separate terminal    // tab if you use this network and you must also set the `host`, `port` and `network_id`    // options below to some value.    //    mainnet: {      provider: function () {        // Setting the provider with the Infura Rinkeby address and Token        return new HDWalletProvider(mnemonic, "https://mainnet.infura.io/v3/xxxx1cabc499dc5d569")      },      network_id: 1    },    // development: {    //  host: "127.0.0.1",     // Localhost (default: none)    //  port: 8545,            // Standard Ethereum port (default: none)    //  network_id: "*",       // Any network (default: none)    // },    // Another network with more advanced options...    // advanced: {    // port: 8777,             // Custom port    // network_id: 1342,       // Custom network    // gas: 8500000,           // Gas sent with each transaction (default: ~6700000)    // gasPrice: 20000000000,  // 20 gwei (in wei) (default: 100 gwei)    // from: &lt;address&gt;,        // Account to send txs from (default: accounts[0])    // websocket: true        // Enable EventEmitter interface for web3 (default: false)    // },    // Useful for deploying to a public network.    // NB: It's important to wrap the provider as a function.    ropsten: {      provider: () =&gt; new HDWalletProvider(mnemonic, "https://ropsten.infura.io/v3/xxxx1cabc499dc5d569"),      network_id: 3,       // Ropsten's id      gas: 5500000,        // Ropsten has a lower block limit than mainnet      confirmations: 2,    // # of confs to wait between deployments. (default: 0)      timeoutBlocks: 200,  // # of blocks before a deployment times out  (minimum/default: 50)      skipDryRun: true     // Skip dry run before migrations? (default: false for public nets )    },    // Useful for private networks    // private: {    // provider: () =&gt; new HDWalletProvider(mnemonic, `https://network.io`),    // network_id: 2111,   // This network is yours, in the cloud.    // production: true    // Treats this network as if it was a public net. (default: false)    // }  },  // Set default mocha options here, use special reporters etc.  mocha: {    // timeout: 100000  },  // Configure your compilers  compilers: {    solc: {      // version: "0.5.1",    // Fetch exact version from solc-bin (default: truffle's version)      // docker: true,        // Use "0.5.1" you've installed locally with docker (default: false)      // settings: {          // See the solidity docs for advice about optimization and evmVersion      //  optimizer: {      //    enabled: false,      //    runs: 200      //  },      //  evmVersion: "byzantium"      // }    }  },  // Truffle DB is currently disabled by default; to enable it, change enabled: false to enabled: true  //  // Note: if you migrated your contracts prior to enabling this field in your Truffle project and want  // those previously migrated contracts available in the .db directory, you will need to run the following:  // $ truffle migrate --reset --compile-all  db: {    enabled: false  }};</code></pre><p>注意这几行 </p><pre><code>const HDWalletProvider = require('truffle-hdwallet-provider');// const infuraKey = "fj4jll3k.....";//const fs = require('fs');const mnemonic = fs.readFileSync(".secret").toString().trim();...ropsten: {  provider: () =&gt; new HDWalletProvider(mnemonic, "https://ropsten.infura.io/v3/xxxx1cabc499dc5d569"),  network_id: 3,       // Ropsten's id  gas: 5500000,        // Ropsten has a lower block limit than mainnet  confirmations: 2,    // # of confs to wait between deployments. (default: 0)  timeoutBlocks: 200,  // # of blocks before a deployment times out  (minimum/default: 50)  skipDryRun: true     // Skip dry run before migrations? (default: false for public nets )},</code></pre><p>这里我们用到了 助记词 和 PROJECT-ID 我这里是在项目的根目录下创建了一个<code>.secret</code>文件 把助记词放到了文件里, 这样比较好，<br>你也可以使用变量进行保存 <code>const infuraKey = "fj4jll3k....."</code></p><p>5、部署到Ropsten测试网络</p><p>执行<code>truffle migrate --network ropsten</code> 即可部署至Ropsten</p><p>如需要重新编译所有合约，可执行<code>truffle migrate --network ropsten --reset --compile-all</code></p><pre><code>Compiling your contracts...===========================&gt; Everything is up to date, there is nothing to compile.Starting migrations...======================&gt; Network name:    'ropsten'&gt; Network id:      3&gt; Block gas limit: 8000000 (0x7a1200)1_initial_migration.js======================   Deploying 'Migrations'   ----------------------   &gt; transaction hash:    0xe27c86dc48219fa193d23843b301d6878a6820dcc93fd92a20e24d1ec9c49b31   &gt; Blocks: 3            Seconds: 14   &gt; contract address:    0x2e2982D9d1914b6580139Ec4E356B708478C875F   &gt; block number:        9898882   &gt; block timestamp:     1616554032   &gt; account:             0x270dF7D1f4612063abA065389b3fCbeF7993caA9   &gt; balance:             4.93502452   &gt; gas used:            193243 (0x2f2db)   &gt; gas price:           20 gwei   &gt; value sent:          0 ETH   &gt; total cost:          0.00386486 ETH   Pausing for 2 confirmations...   ------------------------------   &gt; confirmation number: 1 (block: 9898884)   &gt; confirmation number: 2 (block: 9898885)   &gt; Saving migration to chain.   &gt; Saving artifacts   -------------------------------------   &gt; Total cost:          0.00386486 ETH2_crowdfunding_migration.js===========================   Deploying 'CrowdFunding'   ------------------------   &gt; transaction hash:    0x0f787b4d1567a00a8da4b28970632238fc50eb43ee7e33fb8d5c3d92fcbf5880   &gt; Blocks: 2            Seconds: 25   &gt; contract address:    0x3e32bF1e0Af404ed7DbCEf538BEba75ea2a76510   &gt; block number:        9898889   &gt; block timestamp:     1616554105   &gt; account:             0x270dF7D1f4612063abA065389b3fCbeF7993caA9   &gt; balance:             4.9224565   &gt; gas used:            582663 (0x8e407)   &gt; gas price:           20 gwei   &gt; value sent:          0 ETH   &gt; total cost:          0.01165326 ETH   Pausing for 2 confirmations...   ------------------------------   &gt; confirmation number: 1 (block: 9898890)   &gt; confirmation number: 2 (block: 9898891)   &gt; Saving migration to chain.   &gt; Saving artifacts   -------------------------------------   &gt; Total cost:          0.01165326 ETHSummary=======&gt; Total deployments:   2&gt; Final cost:          0.01551812 ETH</code></pre><h3 id="六、使用vue项目与合约进行交互"><a href="#六、使用vue项目与合约进行交互" class="headerlink" title="六、使用vue项目与合约进行交互"></a>六、使用vue项目与合约进行交互</h3><blockquote><p>利用 CrowdFund.vue 来众筹界面，众筹界面需要显示以下几个部分：</p></blockquote><blockquote><p> 1、当前众筹到金额。</p><p> 2、众筹的截止时间。</p><p> 3、当前众筹的价格，参与众筹按钮。</p><p> 4、如果是已经参与，显示其参与的价格以及赎回按钮。</p><p> 5、如果是创作者，显示一个提取资金按钮。</p></blockquote><p>1、 依然是创建一个vue项目</p><pre><code>vue create crowd_funding_vue</code></pre><p>我们在components文件夹下创建一个<code>CrowdFunding.vue</code>文件 我们整个的<code>CrowdFunding.vue</code>文件就像是这样</p><pre><code>&lt;template&gt;    &lt;div class="content"&gt;        &lt;h3&gt; 新书众筹&lt;/h3&gt;        &lt;span&gt;以最低的价格获取我的新书 &lt;/span&gt;        &lt;div class="status"&gt;            &lt;div v-if="!closed"&gt;已众筹资金：&lt;b&gt;{{ total }} ETH &lt;/b&gt;&lt;/div&gt;            &lt;div v-if="closed"&gt; 众筹已完成&lt;/div&gt;            &lt;div&gt;众筹截止时间：{{ endDate }}&lt;/div&gt;        &lt;/div&gt;        &lt;div v-if="joined" class="card-bkg"&gt;            &lt;div class="award-des"&gt;                &lt;span&gt; 参与价格 &lt;/span&gt;                &lt;b&gt; {{ joinPrice }} ETH &lt;/b&gt;            &lt;/div&gt;            &lt;button :disabled="closed" @click="withdraw"&gt;赎回&lt;/button&gt;        &lt;/div&gt;        &lt;div v-if="!joined" class="card-bkg"&gt;            &lt;div class="award-des"&gt;                &lt;span&gt; 当前众筹价格 &lt;/span&gt;                &lt;b&gt; {{ price }} ETH &lt;/b&gt;            &lt;/div&gt;            &lt;button :disabled="closed" @click="join"&gt;参与众筹&lt;/button&gt;        &lt;/div&gt;        &lt;div v-if="isAuthor"&gt;            &lt;button :disabled="closed" @click="withdrawFund"&gt; 提取资金&lt;/button&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/template&gt;&lt;script&gt;    import contract from "truffle-contract";    import crowd from '../../public/build/contracts/CrowdFunding.json';    const Web3 = require('web3');    export default {        name: 'CrowdFund',        // 定义上面HTML模板中使用的变量        data() {            return {                price: null,                total: 0,                closed: true,                joinPrice: null,                joined: false,                endDate: "null",                isAuthor: true,            }        },        // 当前Vue组件被创建时回调的hook 函数        async created() {            //  初始化 web3及账号            await this.initWeb3Account()            //  初始化合约实例            await this.initContract()            //  获取合约的状态信息            await this.getCrowdInfo()        },        methods: {            async initWeb3Account() {                console.log("initWeb3Account 方法执行了-------");                // 检查新版MetaMask                if (window.ethereum) {                    this.provider = window.ethereum;                    try {                        // 请求用户账号授权                        await window.ethereum.enable();                    } catch (error) {                        // 用户拒绝了访问                        console.log("User denied account access");                    }                }                // 老版 MetaMask                else if (window.web3) {                    this.provider = window.web3.currentProvider;                }                // 如果没有注入的web3实例，回退到使用 Ganache                else {                    alert("请安装MetaMask!");                     this.provider = new Web3.providers.HttpProvider("http://127.0.0.1:7545");                }                this.web3 = new Web3(this.provider);                this.web3.eth.getAccounts().then(accs =&gt; {                    this.account = accs[0]                    console.log(accs)                })            },            async initContract() {                const crowdContract = contract(crowd)                crowdContract.setProvider(this.provider)                this.crowdFund = await crowdContract.deployed()            },            async getCrowdInfo() {                // 获取合约的余额                this.web3.eth.getBalance(this.crowdFund.address).then(                    r =&gt; {                        this.total = this.web3.utils.fromWei(r)                    }                )                // 获取读者的参与金额                this.crowdFund.joined(this.account).then(                    r =&gt; {                        if (r &gt; 0) {                            this.joined = true                            this.joinPrice = this.web3.utils.fromWei(r)                        }                    }                )                // 获取合约的关闭状态                this.crowdFund.closed().then(                    r =&gt; this.closed = r                )                // 获取当前的众筹价格                this.crowdFund.price().then(                    r =&gt; this.price = this.web3.utils.fromWei(r)                )                // 获取众筹截止时间                this.crowdFund.endTime().then(r =&gt; {                    var endTime = new Date(r * 1000)                    // 把时间戳转化为本地时间                    this.endDate = endTime.toLocaleDateString().replace(/\//g, "-") + " " + endTime.toTimeString().substr(0, 8);                })                // 获取众筹创作者地址                this.crowdFund.author().then(r =&gt; {                    if (this.account === r) {                        this.isAuthor = true                    } else {                        this.isAuthor = false                    }                })            },            // 读者参与众筹的 join()函数            join() {                this.web3.eth.sendTransaction({                    from: this.account,                    to: this.crowdFund.address,                    value: this.web3.utils.toWei(this.price)                }).then(() =&gt;                    this.getCrowdInfo()                )            },            // 读者赎回的 withdraw()函数            withdraw() {                this.crowdFund.withdraw({                    from: this.account                }).then(() =&gt; {                    this.getCrowdInfo()                })            },            // 创作者提取资金的 withdrawFund()函数            withdrawFund() {                this.crowdFund.withdrawFund({                    from: this.account                }).then(() =&gt; {                    this.getCrowdInfo()                })            }        }    }&lt;/script&gt;</code></pre><p>2、与合约进行交互</p><p>前端界面与合约进行交互时，需要使用到 <code>truffle-contract</code> 及 <code>web3</code> ，因为 Vue 工程本身也是通过 NPM 进行包管理，<br>因此可以直接通过 npm 进行安装，命令如下：</p><pre><code>npm install --save truffle-contract web3</code></pre><p>如果创建vue项目的时候已经启动了vue项目 那么你需要重新启动一下vue项目 因为安装了包之后需要重新启动 这样使用import导入包的时候<br>才不会报错。</p><p>3、将智能合约项目编译产生的<code>build</code>文件夹放进vue项目中的<code>public</code>文件夹下 注意看上面的这句话</p><pre><code>import crowd from '../../public/build/contracts/CrowdFunding.json';</code></pre><p>4、启动vue项目进行交互 看起来就像这样</p><pre><code>npm run serve</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210325105129.png"></p><h4 id="特别感谢一下博文"><a href="#特别感谢一下博文" class="headerlink" title="特别感谢一下博文"></a>特别感谢一下博文</h4><p>1、<a href="https://learnblockchain.cn/2019/12/20/vue-dapp">如何使用Vue.js 开发以太坊DApp</a></p><p>2、<a href="https://blog.csdn.net/u010159567/article/details/104895457">以太坊ETH-智能合约开发-solidity源码分析-truffle进阶</a></p><p>3、<a href="https://blog.csdn.net/TurkeyCock/article/details/85103434">Infura：一键接入以太坊</a></p><p>4、<a href="https://learnblockchain.cn/docs/truffle/getting-started/truffle-with-metamask.html">Truffle 和 MetaMask 配合</a></p><p>5、<a href="https://www.chainnews.com/articles/823921189500.htm">详解 Truffle Migrations （迁移）- 合约部署不再困惑</a></p><p>6、<a href="http://blog.hubwiz.com/2019/09/13/ethereum-dev-tools-2019/#%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8">以太坊开发资源全面指南</a></p>]]></content>
      
      
      <categories>
          
          <category> ETH智能合约 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Solidity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在linux服务器上安装Ruby_On_Rails</title>
      <link href="2021/02/02/zai-linux-fu-wu-qi-shang-an-zhuang-ruby-on-rails/"/>
      <url>2021/02/02/zai-linux-fu-wu-qi-shang-an-zhuang-ruby-on-rails/</url>
      
        <content type="html"><![CDATA[<h4 id="在linux服务器上安装Ruby-On-Rails"><a href="#在linux服务器上安装Ruby-On-Rails" class="headerlink" title="在linux服务器上安装Ruby On Rails"></a>在linux服务器上安装Ruby On Rails</h4><h5 id="1、安装rbenv"><a href="#1、安装rbenv" class="headerlink" title="1、安装rbenv"></a>1、安装rbenv</h5><p>先安装git</p><pre><code># macbrew install git# centosyum install git# ubuntuapt-get install git</code></pre><p>然后安装rbenv</p><pre><code># 安装rbenv到~/.rbenv目录git clone git://github.com/sstephenson/rbenv.git ~/.rbenv</code></pre><p>下面安装一下rbenv的插件</p><pre><code># 用来编译安装 rubygit clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build# 用来管理 gemset, 可选, 因为有 bundler 也没什么必要git clone git://github.com/jamis/rbenv-gemset.git  ~/.rbenv/plugins/rbenv-gemset# 通过 gem 命令安装完 gem 后无需手动输入 rbenv rehash 命令, 推荐git clone git://github.com/sstephenson/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash# 通过 rbenv update 命令来更新 rbenv 以及所有插件, 推荐git clone git://github.com/rkh/rbenv-update.git ~/.rbenv/plugins/rbenv-update# 使用 Ruby China 的镜像安装 Ruby, 国内用户推荐git clone git://github.com/AndorChen/rbenv-china-mirror.git ~/.rbenv/plugins/rbenv-china-mirror</code></pre><p>然后需要将下面两句代码放在bash的配置文件中：</p><pre><code>export PATH="$HOME/.rbenv/bin:$PATH"eval "$(rbenv init -)"</code></pre><p>linux是一般是放在<del>/.bashrc中，mac是放在</del>/.bash_profile中</p><p>修改完成后，执行下面的命令使其生效</p><pre><code># linuxsource ~/.bashrc# macsource ~/.bash_profile</code></pre><h4 id="2、安装ruby"><a href="#2、安装ruby" class="headerlink" title="2、安装ruby"></a>2、安装ruby</h4><p>rbenv install –list  # 列出所有 ruby 版本</p><p>例如安装2.7.2</p><pre><code>rbenv install 2.7.2</code></pre><p>设置使用的ruby版本, 有以下三种设置方式</p><pre><code>rbenv global 2.3.3      # 默认使用2.3.3rbenv shell 2.3.3       # 当前的 shell 使用2.3.3, 会设置一个 `RBENV_VERSION` 环境变量rbenv local 2.3.3      # 当前目录使用2.3.3, 会生成一个 `.rbenv-version` 文件</code></pre><h4 id="3-安装rails"><a href="#3-安装rails" class="headerlink" title="3. 安装rails"></a>3. 安装rails</h4><p>设置ruby版本后，安装rails：</p><pre><code># 在当前的ruby版本中安装railsgem install rails</code></pre><p>好了，这样就完成了rails的安装，rails已经可以使用了，但是为了更好的使用，请继续看后面的教程。</p><h3 id="配置RubyGems镜像"><a href="#配置RubyGems镜像" class="headerlink" title="配置RubyGems镜像"></a>配置RubyGems镜像</h3><p>gem是ruby管理依赖包的工具，而RubyGems的默认地址因为万恶的墙的关系很难访问到，因此需要配置RubyGems 镜像。这里使用的是<a href="https://gems.ruby-china.com/">Ruby China</a>的镜像地址</p><p>命令行输入</p><pre><code>gem sources --add https://gems.ruby-china.com/ --remove https://rubygems.org/</code></pre><p>可以通过下面这个命令查看设置的结果是不是<a href="https://gems.ruby-china.com：">https://gems.ruby-china.com：</a></p><pre><code>gem sources -l</code></pre><h3 id="修改bundle的源地址"><a href="#修改bundle的源地址" class="headerlink" title="修改bundle的源地址"></a>修改bundle的源地址</h3><p>bundler是rails管理gem依赖的工具，同样的，也需要修改其地址为ruby china的镜像</p><p>命令行输入</p><pre><code>bundle config mirror.https://rubygems.org https://gems.ruby-china.com</code></pre>]]></content>
      
      
      <categories>
          
          <category> rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu下安装redis</title>
      <link href="2021/02/02/ubuntu-xia-an-zhuang-redis/"/>
      <url>2021/02/02/ubuntu-xia-an-zhuang-redis/</url>
      
        <content type="html"><![CDATA[<h4 id="ubuntu下安装redis"><a href="#ubuntu下安装redis" class="headerlink" title="ubuntu下安装redis"></a>ubuntu下安装redis</h4><h5 id="1、使用apt安装"><a href="#1、使用apt安装" class="headerlink" title="1、使用apt安装"></a>1、使用apt安装</h5><p>在 Ubuntu 系统安装 Redi 可以使用以下命令:</p><pre><code>$sudo apt-get update$sudo apt-get install redis-server</code></pre><h5 id="2、启动redis"><a href="#2、启动redis" class="headerlink" title="2、启动redis"></a>2、启动redis</h5><pre><code>$ redis-server</code></pre><h5 id="3、查看-redis-是否启动？"><a href="#3、查看-redis-是否启动？" class="headerlink" title="3、查看 redis 是否启动？"></a>3、查看 redis 是否启动？</h5><pre><code>$ redis-cli</code></pre><p>以上命令将打开以下终端：</p><pre><code>redis 127.0.0.1:6379&gt;</code></pre><p>127.0.0.1 是本机 IP ，6379 是 redis 服务端口。现在我们输入 PING 命令。</p><pre><code>redis 127.0.0.1:6379&gt; ping PONG</code></pre>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu下安装mysql</title>
      <link href="2021/02/02/ubuntu-xia-an-zhuang-mysql/"/>
      <url>2021/02/02/ubuntu-xia-an-zhuang-mysql/</url>
      
        <content type="html"><![CDATA[<h4 id="ubuntu下安装mysql"><a href="#ubuntu下安装mysql" class="headerlink" title="ubuntu下安装mysql"></a>ubuntu下安装mysql</h4><blockquote><p>MySQL 的安装比较简单，只需要简单的几步就可以搞定，但它的一些配置却比较繁琐。下面以 Ubuntu 18.04（其他版本类似）为例，详细介绍 MySQL 数据库的安装和配置。</p></blockquote><h5 id="1、安装mysql"><a href="#1、安装mysql" class="headerlink" title="1、安装mysql"></a>1、安装mysql</h5><p>在 Ubuntu 中，默认只有最新版本的 MySQL 包含在 APT 软件包存储库中。</p><p>要安装它，需要使用 apt 更新服务器上的软件包索引：</p><pre class="line-numbers language-linux"><code class="language-linux">$ sudo apt update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后安装默认的 MySQL 软件包：</p><pre><code>$ sudo apt install mysql-server</code></pre><p>这一步不会进行一些配置相关的提示（例如：设置密码），因为会使 MySQL 的安装不安全，我们将在下一步解决该问题。</p><h5 id="2、配置mysql"><a href="#2、配置mysql" class="headerlink" title="2、配置mysql"></a>2、配置mysql</h5><p>在安装完 MySQL 之后，应该运行一下包含的安全脚本：</p><pre><code>sudo mysql_secure_installation</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210202115006.png"></p><p>重点说一下第一个提示，这会询问我们是否愿意设置验证密码插件，该插件可用于测试 MySQL 密码的强度。</p><h5 id="3、更改用户验证方式"><a href="#3、更改用户验证方式" class="headerlink" title="3、更改用户验证方式"></a>3、更改用户验证方式</h5><p>虽然上面设置了 root 用户的密码，但当通过 MySQL 终端登录时，并不能通过密码进行认证：</p><pre><code>$ mysql -u root -pEnter password:ERROR 1698 (28000): Access denied for user 'root'@'localhost'</code></pre><p>这是因为在 MySQL 5.7 及之后的版本中，root 用户被默认设置为通过 auth_socket 插件（而非密码）认证，其主要原因是出于对数据库的安全性考虑。</p><p>话虽如此，但偶尔也需要外部程序来访问，这时就会很麻烦了。为了使 root 用户能通过密码方式连接 MySQL，先通过终端打开 MySQL 的提示符：</p><pre><code>sudo mysql</code></pre><p>然后通过如下命令，检查 MySQL 中每个用户的认证方式：</p><pre><code>mysql&gt; SELECT user, authentication_string, plugin, host FROM mysql.user;+------------------+-------------------------------------------+-----------------------+-----------+| user             | authentication_string                     | plugin                | host      |+------------------+-------------------------------------------+-----------------------+-----------+| root             |                                           | auth_socket           | localhost || mysql.session    | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password | localhost || mysql.sys        | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password | localhost || debian-sys-maint | *ABA968D18E3A0B6DEB02F9D5FBDA21415A86977B | mysql_native_password | localhost |+------------------+-------------------------------------------+-----------------------+-----------+4 rows in set (0.00 sec)</code></pre><p>显而易见，root 用户的认证方式是 auth_socket。现在运行如下命令，将认证方式更改为密码认证（即：mysql_native_password）：</p><pre><code>ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '123456';</code></pre><p>可以看到，已经修改成功了，现在退出数据库：</p><pre><code>mysql&gt; exit</code></pre><p>再来尝试一下，让 root 用户以密码形式登录：</p><pre><code>$ mysql -u root -pEnter password:Welcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 7Server version: 5.7.29-0ubuntu0.18.04.1 (Ubuntu)Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.mysql&gt;</code></pre><h5 id="4、配置远程访问"><a href="#4、配置远程访问" class="headerlink" title="4、配置远程访问"></a>4、配置远程访问</h5><p>默认情况下，MySQL 只监听本地主机（localhost）的连接。若要启用远程连接，需要进行以下配置。</p><ol><li>编辑 MySQL 的 mysqld.cnf 配置文件：</li></ol><pre><code>sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</code></pre><p>注释掉下面这行配置并保存退出：</p><pre><code>bind-address          = 127.0.0.1</code></pre><ol start="2"><li>更改 user 表中的 host 项，将“localhost”改称“%”（表示所有用户都可以访问），并给 root 用户授权：</li></ol><pre><code>$ mysql -u root -pmysql&gt; use mysql;mysql&gt;mysql&gt; update user set host = '%' where user = 'root';mysql&gt;mysql&gt; grant all on *.* to root@'%' identified by '123456' with grant option;mysql&gt;mysql&gt; flush privileges;  # 刷新权限mysql&gt;mysql&gt; exit</code></pre><ol start="3"><li>执行如下命令，重启 mysql 服务：</li></ol><pre><code>$ sudo systemctl restart mysql</code></pre><p>现在，就可以远程连接（下图为 Navicat 截图） MySQl 数据库了：</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210202120829.png"></p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu下彻底卸载mysql</title>
      <link href="2021/02/02/ubuntu-xia-che-di-xie-zai-mysql/"/>
      <url>2021/02/02/ubuntu-xia-che-di-xie-zai-mysql/</url>
      
        <content type="html"><![CDATA[<h4 id="Ubuntu下彻底卸载mysql"><a href="#Ubuntu下彻底卸载mysql" class="headerlink" title="Ubuntu下彻底卸载mysql"></a>Ubuntu下彻底卸载mysql</h4><blockquote><p>采用sudo apt install mysql-server命令的方式默认安装的是MySQL5.7，MySQL5.7版本最高只适配到Ubuntu17.04，<br>不支持Ubuntu18.04，MySQL8.0可适配到Ubuntu18.04故如果系统使用的Ubuntu18.04，<br>只能安装MySQL8.0，而且加密方式需要选择5.x的加密，因为有兼容性问题，如果你已经执行了上边的命令，安装了MySQL5.7，需要先卸载。</p></blockquote><h5 id="1、首先在系统终端中查看MySQL的依赖项，运行命令：dpkg-list-grep-mysql"><a href="#1、首先在系统终端中查看MySQL的依赖项，运行命令：dpkg-list-grep-mysql" class="headerlink" title="1、首先在系统终端中查看MySQL的依赖项，运行命令：dpkg --list|grep mysql"></a>1、首先在系统终端中查看MySQL的依赖项，运行命令：<code>dpkg --list|grep mysql</code></h5><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210202093257.png"></p><h5 id="2、卸载-sudo-apt-get-remove-mysql-common"><a href="#2、卸载-sudo-apt-get-remove-mysql-common" class="headerlink" title="2、卸载 sudo apt-get remove mysql-common"></a>2、卸载 <code>sudo apt-get remove mysql-common</code></h5><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210202093512.png"></p><p>卸载 <code>sudo apt-get autoremove --purge mysql-server-5.7</code></p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210202093713.png"></p><h4 id="3、清除残留数据，运行命令：dpkg-l-grep-rc-awk-39-print-2-39-sudo-xargs-dpkg-P"><a href="#3、清除残留数据，运行命令：dpkg-l-grep-rc-awk-39-print-2-39-sudo-xargs-dpkg-P" class="headerlink" title="3、清除残留数据，运行命令：dpkg -l|grep ^rc|awk '{print$2}'|sudo xargs dpkg -P"></a>3、清除残留数据，运行命令：<code>dpkg -l|grep ^rc|awk '{print$2}'|sudo xargs dpkg -P</code></h4><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20210202093832.png"></p><h4 id="4、再次查看MySQL的剩余依赖项，运行命令：dpkg-list-grep-mysql"><a href="#4、再次查看MySQL的剩余依赖项，运行命令：dpkg-list-grep-mysql" class="headerlink" title="4、再次查看MySQL的剩余依赖项，运行命令：dpkg --list|grep mysql"></a>4、再次查看MySQL的剩余依赖项，运行命令：<code>dpkg --list|grep mysql</code></h4><blockquote><p> 如果还有依赖项 就继续删除剩余依赖项，比如：sudo apt-get autoremove –purge mysql-apt-config<br> 如果没有那就表示删除干净了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建服务器ubuntu系统</title>
      <link href="2020/12/30/da-jian-fu-wu-qi-ubuntu-xi-tong/"/>
      <url>2020/12/30/da-jian-fu-wu-qi-ubuntu-xi-tong/</url>
      
        <content type="html"><![CDATA[<h4 id="购买完服务器后应该做哪些配置"><a href="#购买完服务器后应该做哪些配置" class="headerlink" title="购买完服务器后应该做哪些配置"></a>购买完服务器后应该做哪些配置</h4><h5 id="一-、安装apache"><a href="#一-、安装apache" class="headerlink" title="一 、安装apache"></a>一 、安装apache</h5><pre><code>sudo apt-get install apche2 apche2-doc</code></pre><p>如果你已经安装完了nginx，你需要安装一个这个东西，当你在浏览器地址栏输入服务器公网ip的时候就会出现一个nginx的默认页面 就像这样的</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201230160621.png"></p><h5 id="二、安装mysql"><a href="#二、安装mysql" class="headerlink" title="二、安装mysql"></a>二、安装mysql</h5><pre><code>sudo apt-get install mysql-server mysql-client</code></pre><p>在安装mysql的时候可能会提醒设置root账户密码</p><h5 id="三、更改默认python版本："><a href="#三、更改默认python版本：" class="headerlink" title="三、更改默认python版本："></a>三、更改默认python版本：</h5><p>修改软连接</p><p>1、进入到usr/bin目录下</p><pre><code>cd /usr/bin</code></pre><p>2、查看该目录下与python有关的项</p><pre><code>ls -altrh | grep python</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201230174310.png"></p><p>3、删除软连接并指向新的版本</p><pre><code>sudo rm pythonsudo ln -s python3.6 python</code></pre><p>4、最后结果</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201230174848.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> 服务器搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android一些常用的背景图</title>
      <link href="2020/12/18/android-yi-xie-chang-yong-de-bei-jing-tu/"/>
      <url>2020/12/18/android-yi-xie-chang-yong-de-bei-jing-tu/</url>
      
        <content type="html"><![CDATA[<h4 id="Android中一些常用的xml背景图"><a href="#Android中一些常用的xml背景图" class="headerlink" title="Android中一些常用的xml背景图"></a>Android中一些常用的xml背景图</h4><h5 id="1、绿色背景-圆角为4dp的xml背景-颜色可自行修改"><a href="#1、绿色背景-圆角为4dp的xml背景-颜色可自行修改" class="headerlink" title="1、绿色背景 圆角为4dp的xml背景(颜色可自行修改)"></a>1、绿色背景 圆角为4dp的xml背景(颜色可自行修改)</h5><p>res/drawable 目录下 common_bg_4_radius_green.xml</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>shape</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rectangle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>solid</span> <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/绿色<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>corners</span> <span class="token attr-name"><span class="token namespace">android:</span>radius</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201218170312.png"></p><h5 id="2、绿色border边框背景"><a href="#2、绿色border边框背景" class="headerlink" title="2、绿色border边框背景"></a>2、绿色border边框背景</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">android:</span>shape</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rectangle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stroke</span>  <span class="token attr-name"><span class="token namespace">android:</span>width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.6dp<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/绿色<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>corners</span> <span class="token attr-name"><span class="token namespace">android:</span>radius</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2dp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201218170216.png"></p><h5 id="3、背景为圆形"><a href="#3、背景为圆形" class="headerlink" title="3、背景为圆形"></a>3、背景为圆形</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>shape</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>oval<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>solid</span> <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/绿色<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>corners</span> <span class="token attr-name"><span class="token namespace">android:</span>radius</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8.3dp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>size</span>    <span class="token attr-name"><span class="token namespace">android:</span>width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>17dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>17dp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201218170648.png"></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 背景图 </tag>
            
            <tag> Drawable </tag>
            
            <tag> xml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android自定义EditText一键清除和密文查看</title>
      <link href="2020/12/18/android-zi-ding-yi-edittext-yi-jian-qing-chu-he-mi-wen-cha-kan/"/>
      <url>2020/12/18/android-zi-ding-yi-edittext-yi-jian-qing-chu-he-mi-wen-cha-kan/</url>
      
        <content type="html"><![CDATA[<h4 id="Android自定义EditText一键清除和密文查看"><a href="#Android自定义EditText一键清除和密文查看" class="headerlink" title="Android自定义EditText一键清除和密文查看"></a>Android自定义EditText一键清除和密文查看</h4><ul><li>先上截屏看一下效果<br><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/S01218-16245606.jpg"></li></ul><h5 id="自定义步骤"><a href="#自定义步骤" class="headerlink" title="自定义步骤"></a>自定义步骤</h5><h5 id="1、首先新建一个类PowerfulEditText-java-我放在了widgets目录中这个目录平时就用来存放一些自定义的类"><a href="#1、首先新建一个类PowerfulEditText-java-我放在了widgets目录中这个目录平时就用来存放一些自定义的类" class="headerlink" title="1、首先新建一个类PowerfulEditText.java 我放在了widgets目录中这个目录平时就用来存放一些自定义的类"></a>1、首先新建一个类PowerfulEditText.java 我放在了widgets目录中这个目录平时就用来存放一些自定义的类</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//  这个自定义EditText 有两个按钮 一键清空按钮 和 小眼睛查看明文</span><span class="token comment" spellcheck="true">//  isPassword 字段会根据输入框是否是密码框来决定是否会绘制小眼睛 很好用</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PowerfulEditText</span> <span class="token keyword">extends</span> <span class="token class-name">androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>AppCompatEditText</span> <span class="token punctuation">{</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String TAG <span class="token operator">=</span> <span class="token string">"PowerfulEditText.java"</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_CLEAR_RES <span class="token operator">=</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>delete_edit<span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_VISIBLE_RES <span class="token operator">=</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>black_open_eyes<span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_INVISIBLE_RES <span class="token operator">=</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>black_close_eyes<span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_STYLE_COLOR <span class="token operator">=</span> Color<span class="token punctuation">.</span>BLUE<span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_BUTTON_PADDING <span class="token operator">=</span>    <span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDimensionPixelSize</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>dimen<span class="token punctuation">.</span>btn_edit_text_padding<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_BUTTON_WIDTH <span class="token operator">=</span>    <span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDimensionPixelSize</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>dimen<span class="token punctuation">.</span>btn_edit_text_width<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String STYLE_RECT <span class="token operator">=</span> <span class="token string">"rectangle"</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String STYLE_ROUND_RECT <span class="token operator">=</span> <span class="token string">"roundRect"</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String STYLE_HALF_RECT <span class="token operator">=</span> <span class="token string">"halfRect"</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String STYLE_ANIMATOR <span class="token operator">=</span> <span class="token string">"animator"</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_ROUND_RADIUS <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> ANIMATOR_TIME <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_FOCUSED_STROKE_WIDTH <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_UNFOCUSED_STROKE_WIDTH <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//按钮间隔</span>  <span class="token keyword">private</span> <span class="token keyword">int</span> mBtnPadding <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//按钮宽度</span>  <span class="token keyword">private</span> <span class="token keyword">int</span> mBtnWidth <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//右内边距</span>  <span class="token keyword">private</span> <span class="token keyword">int</span> mTextPaddingRight<span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">int</span> mClearResId <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">int</span> mVisibleResId <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">int</span> mInvisibleResId <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> Bitmap mBitmapClear<span class="token punctuation">;</span>  <span class="token keyword">private</span> Bitmap mBitmapVisible<span class="token punctuation">;</span>  <span class="token keyword">private</span> Bitmap mBitmapInvisible<span class="token punctuation">;</span>  <span class="token keyword">private</span> String mBorderStyle <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">int</span> mStyleColor <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//出现和消失动画</span>  <span class="token keyword">private</span> ValueAnimator mGoneAnimator<span class="token punctuation">;</span>  <span class="token keyword">private</span> ValueAnimator mVisibleAnimator<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//状态值</span>  <span class="token keyword">private</span> <span class="token keyword">boolean</span> isBtnVisible <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// isPassword 字段会根据输入框是否是密码框来决定是否会绘制小眼睛</span>  <span class="token keyword">private</span> <span class="token keyword">boolean</span> isPassword <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">boolean</span> isPasswordVisible <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">boolean</span> isAnimatorRunning <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> <span class="token keyword">int</span> mAnimatorProgress <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> ObjectAnimator mAnimator<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//自定义属性动画</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Property<span class="token operator">&lt;</span>PowerfulEditText<span class="token punctuation">,</span> Integer<span class="token operator">></span> BORDER_PROGRESS    <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Property</span><span class="token operator">&lt;</span>PowerfulEditText<span class="token punctuation">,</span> Integer<span class="token operator">></span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"borderProgress"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Integer <span class="token function">get</span><span class="token punctuation">(</span>PowerfulEditText powerfulEditText<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> powerfulEditText<span class="token punctuation">.</span><span class="token function">getBorderProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">set</span><span class="token punctuation">(</span>PowerfulEditText powerfulEditText<span class="token punctuation">,</span> Integer value<span class="token punctuation">)</span> <span class="token punctuation">{</span>      powerfulEditText<span class="token punctuation">.</span><span class="token function">setBorderProgress</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> Paint mPaint<span class="token punctuation">;</span>  <span class="token keyword">public</span> <span class="token function">PowerfulEditText</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">public</span> <span class="token function">PowerfulEditText</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> AttributeSet attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">init</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">public</span> <span class="token function">PowerfulEditText</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> AttributeSet attrs<span class="token punctuation">,</span> <span class="token keyword">int</span> defStyleAttr<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> defStyleAttr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">init</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> AttributeSet attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//抗锯齿和位图滤波</span>    mPaint <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>ANTI_ALIAS_FLAG <span class="token operator">|</span> Paint<span class="token punctuation">.</span>FILTER_BITMAP_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//读取xml文件中的配置</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>attrs <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>      TypedArray array <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">obtainStyledAttributes</span><span class="token punctuation">(</span>attrs<span class="token punctuation">,</span> R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>PowerfulEditText<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span><span class="token function">getIndexCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> attr <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>attr<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">case</span> R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>PowerfulEditText_clearDrawable<span class="token operator">:</span>            mClearResId <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">getResourceId</span><span class="token punctuation">(</span>attr<span class="token punctuation">,</span> DEFAULT_CLEAR_RES<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>          <span class="token keyword">case</span> R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>PowerfulEditText_visibleDrawable<span class="token operator">:</span>            mVisibleResId <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">getResourceId</span><span class="token punctuation">(</span>attr<span class="token punctuation">,</span> DEFAULT_VISIBLE_RES<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>          <span class="token keyword">case</span> R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>PowerfulEditText_invisibleDrawable<span class="token operator">:</span>            mInvisibleResId <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">getResourceId</span><span class="token punctuation">(</span>attr<span class="token punctuation">,</span> DEFAULT_INVISIBLE_RES<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>          <span class="token keyword">case</span> R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>PowerfulEditText_BtnWidth<span class="token operator">:</span>            mBtnWidth <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">getDimensionPixelSize</span><span class="token punctuation">(</span>attr<span class="token punctuation">,</span> DEFAULT_BUTTON_WIDTH<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>          <span class="token keyword">case</span> R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>PowerfulEditText_BtnSpacing<span class="token operator">:</span>            mBtnPadding <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">getDimensionPixelSize</span><span class="token punctuation">(</span>attr<span class="token punctuation">,</span> DEFAULT_BUTTON_PADDING<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>          <span class="token keyword">case</span> R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>PowerfulEditText_borderStyle<span class="token operator">:</span>            mBorderStyle <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>          <span class="token keyword">case</span> R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>PowerfulEditText_styleColor<span class="token operator">:</span>            mStyleColor <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span>attr<span class="token punctuation">,</span> DEFAULT_STYLE_COLOR<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      array<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//初始化按钮显示的Bitmap</span>    mBitmapClear <span class="token operator">=</span> <span class="token function">createBitmap</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> mClearResId<span class="token punctuation">,</span> DEFAULT_CLEAR_RES<span class="token punctuation">)</span><span class="token punctuation">;</span>    mBitmapVisible <span class="token operator">=</span> <span class="token function">createBitmap</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> mVisibleResId<span class="token punctuation">,</span> DEFAULT_VISIBLE_RES<span class="token punctuation">)</span><span class="token punctuation">;</span>    mBitmapInvisible <span class="token operator">=</span> <span class="token function">createBitmap</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> mInvisibleResId<span class="token punctuation">,</span> DEFAULT_INVISIBLE_RES<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//如果自定义，则使用自定义的值，否则使用默认值</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mBtnPadding <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      mBtnPadding <span class="token operator">=</span> DEFAULT_BUTTON_PADDING<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mBtnWidth <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      mBtnWidth <span class="token operator">=</span> DEFAULT_BUTTON_WIDTH<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//给文字设置一个padding，避免文字和按钮重叠了</span>    mTextPaddingRight <span class="token operator">=</span> mBtnPadding <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> mBtnWidth <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//按钮出现和消失的动画</span>    mGoneAnimator <span class="token operator">=</span> ValueAnimator<span class="token punctuation">.</span><span class="token function">ofFloat</span><span class="token punctuation">(</span><span class="token number">1f</span><span class="token punctuation">,</span> <span class="token number">0f</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setDuration</span><span class="token punctuation">(</span>ANIMATOR_TIME<span class="token punctuation">)</span><span class="token punctuation">;</span>    mVisibleAnimator <span class="token operator">=</span> ValueAnimator<span class="token punctuation">.</span><span class="token function">ofFloat</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">,</span> <span class="token number">1f</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setDuration</span><span class="token punctuation">(</span>ANIMATOR_TIME<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//是否是密码样式</span>    isPassword <span class="token operator">=</span>      <span class="token function">getInputType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">(</span>InputType<span class="token punctuation">.</span>TYPE_TEXT_VARIATION_PASSWORD <span class="token operator">|</span> InputType<span class="token punctuation">.</span>TYPE_CLASS_TEXT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onMeasure</span><span class="token punctuation">(</span><span class="token keyword">int</span> widthMeasureSpec<span class="token punctuation">,</span> <span class="token keyword">int</span> heightMeasureSpec<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onMeasure</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">,</span> heightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//设置右内边距, 防止清除按钮和文字重叠</span>    <span class="token function">setPadding</span><span class="token punctuation">(</span><span class="token function">getPaddingLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getPaddingTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mTextPaddingRight<span class="token punctuation">,</span> <span class="token function">getPaddingBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDraw</span><span class="token punctuation">(</span>Canvas canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDraw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>    mPaint<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>Style<span class="token punctuation">.</span>STROKE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//使用自定义颜色。如未定义，则使用默认颜色</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mStyleColor <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      mPaint<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>mStyleColor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      mPaint<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>DEFAULT_STYLE_COLOR<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//控件获取焦点时，加粗边框</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFocused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      mPaint<span class="token punctuation">.</span><span class="token function">setStrokeWidth</span><span class="token punctuation">(</span>DEFAULT_FOCUSED_STROKE_WIDTH<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      mPaint<span class="token punctuation">.</span><span class="token function">setStrokeWidth</span><span class="token punctuation">(</span>DEFAULT_UNFOCUSED_STROKE_WIDTH<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//绘制边框</span>    <span class="token function">drawBorder</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//绘制清空和明文显示按钮</span>    <span class="token function">drawButtons</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">drawBorder</span><span class="token punctuation">(</span>Canvas canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> width <span class="token operator">=</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> height <span class="token operator">=</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>mBorderStyle<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//矩形样式</span>      <span class="token keyword">case</span> STYLE_RECT<span class="token operator">:</span>        <span class="token function">setBackground</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        canvas<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//圆角矩形样式</span>      <span class="token keyword">case</span> STYLE_ROUND_RECT<span class="token operator">:</span>        <span class="token function">setBackground</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> roundRectLineWidth <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFocused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          roundRectLineWidth <span class="token operator">=</span> DEFAULT_FOCUSED_STROKE_WIDTH <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>          roundRectLineWidth <span class="token operator">=</span> DEFAULT_UNFOCUSED_STROKE_WIDTH <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        mPaint<span class="token punctuation">.</span><span class="token function">setStrokeWidth</span><span class="token punctuation">(</span>roundRectLineWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Build<span class="token punctuation">.</span>VERSION<span class="token punctuation">.</span>SDK_INT <span class="token operator">>=</span> <span class="token number">21</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          canvas<span class="token punctuation">.</span><span class="token function">drawRoundRect</span><span class="token punctuation">(</span>            roundRectLineWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> roundRectLineWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> width <span class="token operator">-</span> roundRectLineWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> height <span class="token operator">-</span> roundRectLineWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>            DEFAULT_ROUND_RADIUS<span class="token punctuation">,</span> DEFAULT_ROUND_RADIUS<span class="token punctuation">,</span>            mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>          canvas<span class="token punctuation">.</span><span class="token function">drawRoundRect</span><span class="token punctuation">(</span>            <span class="token keyword">new</span> <span class="token class-name">RectF</span><span class="token punctuation">(</span>roundRectLineWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> roundRectLineWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> width <span class="token operator">-</span> roundRectLineWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> height <span class="token operator">-</span> roundRectLineWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            DEFAULT_ROUND_RADIUS<span class="token punctuation">,</span> DEFAULT_ROUND_RADIUS<span class="token punctuation">,</span>            mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//半矩形样式</span>      <span class="token keyword">case</span> STYLE_HALF_RECT<span class="token operator">:</span>        <span class="token function">setBackground</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        canvas<span class="token punctuation">.</span><span class="token function">drawLine</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>        canvas<span class="token punctuation">.</span><span class="token function">drawLine</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> height<span class="token punctuation">,</span> mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>        canvas<span class="token punctuation">.</span><span class="token function">drawLine</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//动画特效样式</span>      <span class="token keyword">case</span> STYLE_ANIMATOR<span class="token operator">:</span>        <span class="token function">setBackground</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>isAnimatorRunning<span class="token punctuation">)</span> <span class="token punctuation">{</span>          canvas<span class="token punctuation">.</span><span class="token function">drawLine</span><span class="token punctuation">(</span>width <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> mAnimatorProgress<span class="token punctuation">,</span> height<span class="token punctuation">,</span> width <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> mAnimatorProgress<span class="token punctuation">,</span> height<span class="token punctuation">,</span> mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>mAnimatorProgress <span class="token operator">==</span> width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            isAnimatorRunning <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>          canvas<span class="token punctuation">.</span><span class="token function">drawLine</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">drawButtons</span><span class="token punctuation">(</span>Canvas canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>isBtnVisible<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//播放按钮出现的动画</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>mVisibleAnimator<span class="token punctuation">.</span><span class="token function">isRunning</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">float</span> scale <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> mVisibleAnimator<span class="token punctuation">.</span><span class="token function">getAnimatedValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">drawClearButton</span><span class="token punctuation">(</span>scale<span class="token punctuation">,</span> canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>isPassword<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token function">drawVisibleButton</span><span class="token punctuation">(</span>scale<span class="token punctuation">,</span> canvas<span class="token punctuation">,</span> isPasswordVisible<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//绘制静态的按钮</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token function">drawClearButton</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>isPassword<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token function">drawVisibleButton</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> canvas<span class="token punctuation">,</span> isPasswordVisible<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//播放按钮消失的动画</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>mGoneAnimator<span class="token punctuation">.</span><span class="token function">isRunning</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">float</span> scale <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> mGoneAnimator<span class="token punctuation">.</span><span class="token function">getAnimatedValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">drawClearButton</span><span class="token punctuation">(</span>scale<span class="token punctuation">,</span> canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>isPassword<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token function">drawVisibleButton</span><span class="token punctuation">(</span>scale<span class="token punctuation">,</span> canvas<span class="token punctuation">,</span> isPasswordVisible<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">drawClearButton</span><span class="token punctuation">(</span><span class="token keyword">float</span> scale<span class="token punctuation">,</span> Canvas canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> right <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">getScrollX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mBtnPadding <span class="token operator">-</span> mBtnWidth <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1f</span> <span class="token operator">-</span> scale<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">getScrollX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mBtnPadding <span class="token operator">-</span> mBtnWidth <span class="token operator">*</span> <span class="token punctuation">(</span>scale <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">1f</span> <span class="token operator">-</span> scale<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2f</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> top <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mBtnWidth <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> bottom <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>top <span class="token operator">+</span> mBtnWidth <span class="token operator">*</span> scale<span class="token punctuation">)</span><span class="token punctuation">;</span>    Rect rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>    canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>mBitmapClear<span class="token punctuation">,</span> null<span class="token punctuation">,</span> rect<span class="token punctuation">,</span> mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">drawVisibleButton</span><span class="token punctuation">(</span><span class="token keyword">float</span> scale<span class="token punctuation">,</span> Canvas canvas<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isVisible<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> right <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">getScrollX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mBtnPadding <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">-</span> mBtnWidth <span class="token operator">-</span> mBtnWidth <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1f</span> <span class="token operator">-</span> scale<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">getScrollX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mBtnPadding <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">-</span> mBtnWidth <span class="token operator">-</span> mBtnWidth <span class="token operator">*</span> <span class="token punctuation">(</span>scale <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">1f</span> <span class="token operator">-</span> scale<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2f</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> top <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mBtnWidth <span class="token operator">*</span> scale<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> bottom <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>top <span class="token operator">+</span> mBtnWidth <span class="token operator">*</span> scale<span class="token punctuation">)</span><span class="token punctuation">;</span>    Rect rect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rect</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>isVisible<span class="token punctuation">)</span> <span class="token punctuation">{</span>      canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>mBitmapVisible<span class="token punctuation">,</span> null<span class="token punctuation">,</span> rect<span class="token punctuation">,</span> mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>mBitmapInvisible<span class="token punctuation">,</span> null<span class="token punctuation">,</span> rect<span class="token punctuation">,</span> mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 清除按钮出现时的动画效果</span>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">startVisibleAnimator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">endAllAnimator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    mVisibleAnimator<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 清除按钮消失时的动画效果</span>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">startGoneAnimator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">endAllAnimator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    mGoneAnimator<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 结束所有动画</span>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">endAllAnimator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    mGoneAnimator<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    mVisibleAnimator<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onFocusChanged</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> focused<span class="token punctuation">,</span> <span class="token keyword">int</span> direction<span class="token punctuation">,</span> Rect previouslyFocusedRect<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onFocusChanged</span><span class="token punctuation">(</span>focused<span class="token punctuation">,</span> direction<span class="token punctuation">,</span> previouslyFocusedRect<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//播放按钮出现和消失动画</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>focused <span class="token operator">&amp;&amp;</span> <span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isBtnVisible<span class="token punctuation">)</span> <span class="token punctuation">{</span>        isBtnVisible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token function">startVisibleAnimator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>isBtnVisible<span class="token punctuation">)</span> <span class="token punctuation">{</span>        isBtnVisible <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token function">startGoneAnimator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//实现动画特效样式</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>focused <span class="token operator">&amp;&amp;</span> mBorderStyle<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>STYLE_ANIMATOR<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      isAnimatorRunning <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      mAnimator <span class="token operator">=</span> ObjectAnimator<span class="token punctuation">.</span><span class="token function">ofInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> BORDER_PROGRESS<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      mAnimator<span class="token punctuation">.</span><span class="token function">setDuration</span><span class="token punctuation">(</span>ANIMATOR_TIME<span class="token punctuation">)</span><span class="token punctuation">;</span>      mAnimator<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">setBorderProgress</span><span class="token punctuation">(</span><span class="token keyword">int</span> borderProgress<span class="token punctuation">)</span> <span class="token punctuation">{</span>    mAnimatorProgress <span class="token operator">=</span> borderProgress<span class="token punctuation">;</span>    <span class="token function">postInvalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">protected</span> <span class="token keyword">int</span> <span class="token function">getBorderProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> mAnimatorProgress<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onTextChanged</span><span class="token punctuation">(</span>CharSequence text<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> lengthBefore<span class="token punctuation">,</span> <span class="token keyword">int</span> lengthAfter<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onTextChanged</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> start<span class="token punctuation">,</span> lengthBefore<span class="token punctuation">,</span> lengthAfter<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isFocused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isBtnVisible<span class="token punctuation">)</span> <span class="token punctuation">{</span>        isBtnVisible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token function">startVisibleAnimator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>isBtnVisible<span class="token punctuation">)</span> <span class="token punctuation">{</span>        isBtnVisible <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token function">startGoneAnimator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span>MotionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> MotionEvent<span class="token punctuation">.</span>ACTION_UP<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">boolean</span> clearTouched <span class="token operator">=</span>        <span class="token punctuation">(</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mBtnPadding <span class="token operator">-</span> mBtnWidth <span class="token operator">&lt;</span> event<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mBtnPadding<span class="token punctuation">)</span>          <span class="token operator">&amp;&amp;</span> <span class="token function">isFocused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">boolean</span> visibleTouched <span class="token operator">=</span>        <span class="token punctuation">(</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mBtnPadding <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">-</span> mBtnWidth <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">&lt;</span> event<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mBtnPadding <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">-</span> mBtnWidth<span class="token punctuation">)</span>          <span class="token operator">&amp;&amp;</span> isPassword <span class="token operator">&amp;&amp;</span> <span class="token function">isFocused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>clearTouched<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">setError</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>visibleTouched<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>isPasswordVisible<span class="token punctuation">)</span> <span class="token punctuation">{</span>          isPasswordVisible <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          <span class="token function">setInputType</span><span class="token punctuation">(</span>InputType<span class="token punctuation">.</span>TYPE_TEXT_VARIATION_PASSWORD <span class="token operator">|</span> InputType<span class="token punctuation">.</span>TYPE_CLASS_TEXT<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">setSelection</span><span class="token punctuation">(</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>          isPasswordVisible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>          <span class="token function">setInputType</span><span class="token punctuation">(</span>InputType<span class="token punctuation">.</span>TYPE_TEXT_VARIATION_VISIBLE_PASSWORD<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">setSelection</span><span class="token punctuation">(</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onTouchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 开始晃动的入口</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startShakeAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">setAnimation</span><span class="token punctuation">(</span><span class="token function">shakeAnimation</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">startAnimation</span><span class="token punctuation">(</span><span class="token function">getAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/**   * 晃动动画   *   * @param counts 0.5秒钟晃动多少下   * @return   */</span>  <span class="token keyword">private</span> Animation <span class="token function">shakeAnimation</span><span class="token punctuation">(</span><span class="token keyword">int</span> counts<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Animation translateAnimation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TranslateAnimation</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    translateAnimation<span class="token punctuation">.</span><span class="token function">setInterpolator</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CycleInterpolator</span><span class="token punctuation">(</span>counts<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    translateAnimation<span class="token punctuation">.</span><span class="token function">setDuration</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> translateAnimation<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">private</span> Bitmap <span class="token function">createBitmap</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> <span class="token keyword">int</span> resId<span class="token punctuation">,</span> <span class="token keyword">int</span> defResId<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>resId <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> resId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> defResId<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个类里面会用到values目录中的attrs.xml 和 dimens.xml 如果没有就自行创建</p><h5 id="2、往attrs-xml中写入自定义EditText的属性"><a href="#2、往attrs-xml中写入自定义EditText的属性" class="headerlink" title="2、往attrs.xml中写入自定义EditText的属性"></a>2、往attrs.xml中写入自定义EditText的属性</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!--  自定义EditText的属性--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>declare-styleable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>PowerfulEditText<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--图片资源--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clearDrawable<span class="token punctuation">"</span></span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>reference<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>visibleDrawable<span class="token punctuation">"</span></span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>reference<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>invisibleDrawable<span class="token punctuation">"</span></span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>reference<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--按钮宽度大小--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BtnWidth<span class="token punctuation">"</span></span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dimension<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--按钮间距大小--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>BtnSpacing<span class="token punctuation">"</span></span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dimension<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!--边框颜色和样式--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>styleColor<span class="token punctuation">"</span></span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>color<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>borderStyle<span class="token punctuation">"</span></span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>string<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>declare-styleable</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3、往dimens-xml中写入一些大小配置"><a href="#3、往dimens-xml中写入一些大小配置" class="headerlink" title="3、往dimens.xml中写入一些大小配置"></a>3、往dimens.xml中写入一些大小配置</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- Default screen margins, per the Android Design guidelines. 自定义editText的属性设置 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>activity_horizontal_margin<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>16dp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>activity_vertical_margin<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>16dp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!--按钮间距大小--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn_edit_text_padding<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>8dp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!--按钮宽度大小--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dimen</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn_edit_text_width<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>16dp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dimen</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4、在布局文件中使用"><a href="#4、在布局文件中使用" class="headerlink" title="4、在布局文件中使用"></a>4、在布局文件中使用</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.你的包名.widgets.PowerfulEditText</span>          <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/password_edit<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>45dp<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@null<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">android:</span>paddingStart</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>12dp<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15sp<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">android:</span>hint</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请输入密码<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">app:</span>BtnWidth</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@dimen/btn_edit_text_width<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">app:</span>BtnSpacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@dimen/btn_edit_text_padding<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">android:</span>inputType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textPassword<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">tools:</span>ignore</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>RtlSymmetry<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一共是7个样式可以在xml中使用</p><pre><code>app:clearDrawable="@drawable/clear_all"  app:visibleDrawable="@drawable/visible"  app:invisibleDrawable="@drawable/invisible"  app:BtnWidth="@dimen/btn_edittext_width"  app:BtnSpacing="@dimen/btn_edittext_padding"  app:borderStyle="halfRect"  app:styleColor="#ff0000"  </code></pre><p>其中，边框样式的对应规则如下。</p><pre><code>1、矩形样式：         app:borderStyle="rectangle"2、半矩形样式：       app:borderStyle="halfRect"3、圆角矩形样式：     app:borderStyle="roundRect"4、动画特效样式：     app:borderStyle="animator"控件抖动的效果也是利用动画实现的。调用view实例的以下方法即可实现抖动。mPEditText.startShakeAnimation()</code></pre><p>也可以使用依赖的方式去项目中用，不过如果作者不维护, 那你的项目也就需要改动了</p><p>作者的<a href="https://github.com/AndroidWJC/PowerfulEditText">github链接</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EditText </tag>
            
            <tag> 密文 </tag>
            
            <tag> 一键清除 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux(ubuntu) - 使用fail2ban 为nginx保驾护航</title>
      <link href="2020/12/09/linux-ubuntu-shi-yong-fail2ban-wei-nginx-bao-jia-hu-hang/"/>
      <url>2020/12/09/linux-ubuntu-shi-yong-fail2ban-wei-nginx-bao-jia-hu-hang/</url>
      
        <content type="html"><![CDATA[<h4 id="Linux-ubuntu-使用fail2ban-为nginx保驾护航"><a href="#Linux-ubuntu-使用fail2ban-为nginx保驾护航" class="headerlink" title="Linux(ubuntu) - 使用fail2ban 为nginx保驾护航"></a>Linux(ubuntu) - 使用fail2ban 为nginx保驾护航</h4><h4 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h4><p>Fail2ban软件包包含在默认的Ubuntu 20.04存储库中。 要安装它，请以root或具有sudo特权的用户身份输入以下命令：</p><pre><code>sudo apt updatesudo apt install fail2ban</code></pre><p>安装完成后，Fail2ban服务将自动启动。 您可以通过检查服务状态来验证它：</p><pre><code>sudo systemctl status fail2ban</code></pre><p>输出将如下所示：</p><pre><code> fail2ban.service - Fail2Ban Service     Loaded: loaded (/lib/systemd/system/fail2ban.service; enabled; vendor preset: enabled)     Active: active (running) since Wed 2020-08-19 06:16:29 UTC; 27s ago       Docs: man:fail2ban(1)   Main PID: 1251 (f2b/server)      Tasks: 5 (limit: 1079)     Memory: 13.8M     CGroup: /system.slice/fail2ban.service             └─1251 /usr/bin/python3 /usr/bin/fail2ban-server -xf start</code></pre><h4 id="2、Fail2ban配置"><a href="#2、Fail2ban配置" class="headerlink" title="2、Fail2ban配置"></a>2、Fail2ban配置</h4><p>默认的<code>Fail2ban</code>安装带有两个配置文件， <code>/etc/fail2ban/jail.conf</code> 和 <code>/etc/fail2ban/jail.d/defaults-debian.conf</code>。 不建议修改这些文件，因为更新软件包时它们可能会被覆盖。</p><p>最好的做法是：</p><pre><code>sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local 或者新建sudo vim /etc/fail2ban/jail.local </code></pre><p>然后修改 jail.local的内容</p><pre><code>[nginx-req-limit]enabled = truefilter = nginx-req-limitaction = iptables-multiport[name=ReqLimit, port="http,https", protocol=tcp]logpath = /var/log/nginx/access.logfindtime = 60maxretry = 600bantime = 600</code></pre><p>新增文件：<code>/etc/fail2ban/filter.d/nginx-req-limit.conf</code></p><pre><code># Fail2Ban configuration file## supports: ngx_http_limit_req_module module[Definition]failregex =  -.*- .*HTTP/1.* .* .*$# Option: ignoreregex# Notes.: regex to ignore. If this regex matches, the line is ignored.# Values: TEXT#ignoreregex =</code></pre><h4 id="将IP地址列入白名单"><a href="#将IP地址列入白名单" class="headerlink" title="将IP地址列入白名单"></a>将IP地址列入白名单</h4><p>您可以将要排除在外的IP地址，IP范围或主机添加到 <code>ignoreip</code> 指示。 在这里，您应该添加您的本地PC IP地址和所有其他要列入白名单的计算机。</p><p><code>/etc/fail2ban/jail.local</code></p><pre><code>ignoreip = 127.0.0.1/8 ::1 123.123.123.123 192.168.1.0/24</code></pre><ul><li>每次编辑配置文件时，都需要重新启动Fail2ban服务以使更改生效：</li></ul><pre><code>sudo systemctl restart fail2ban</code></pre><h4 id="Fail2ban客户端-命令"><a href="#Fail2ban客户端-命令" class="headerlink" title="Fail2ban客户端 命令"></a>Fail2ban客户端 命令</h4><ul><li>检查监狱状态：</li></ul><p><code>sudo fail2ban-client status sshd</code></p><ul><li>解禁IP：</li></ul><p><code>sudo fail2ban-client set sshd unbanip 23.34.45.56</code></p><ul><li>禁止IP</li></ul><p><code>sudo fail2ban-client set sshd banip 23.34.45.56</code></p>]]></content>
      
      
      <categories>
          
          <category> Fail2ban </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给Linux安装nginx</title>
      <link href="2020/12/09/gei-linux-an-zhuang-nginx/"/>
      <url>2020/12/09/gei-linux-an-zhuang-nginx/</url>
      
        <content type="html"><![CDATA[<h4 id="给Linux-ubuntu-服务器安装nginx"><a href="#给Linux-ubuntu-服务器安装nginx" class="headerlink" title="给Linux(ubuntu)服务器安装nginx"></a>给Linux(ubuntu)服务器安装nginx</h4><h5 id="1：检查80端口是否被占用。"><a href="#1：检查80端口是否被占用。" class="headerlink" title="1：检查80端口是否被占用。"></a>1：检查80端口是否被占用。</h5><h5 id="2：安装nginx"><a href="#2：安装nginx" class="headerlink" title="2：安装nginx"></a>2：安装nginx</h5><p>给nginx配置安装目录,就是nginx存放的目录</p><p>我一般安装软件都是安装在/usr/local下面的</p><pre><code>mkdir /usr/local/nginx</code></pre><p>进入nginx目录<code>cd /usr/local/nginx</code></p><p>使用wget命令下载nginx资源包</p><pre><code>wget http://nginx.org/download/nginx-1.12.2.tar.gz</code></pre><p>解压</p><pre class="line-numbers language-yaml"><code class="language-yaml">tar <span class="token punctuation">-</span>zxvf nginx<span class="token punctuation">-</span>1.5.9.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行<code> ./configure命令</code></p><pre><code>cd nginx-1.5.9sudo ./configure</code></pre><p>执行<code>./configure</code>可能会存在一下错误,如果出现请执行一下命令</p><blockquote><p>错误1</p><p>/configure: error: the HTTP rewrite module requires the PCRE library.</p></blockquote><p>解决方法</p><p>安装pcre-devel解决问题</p><pre><code>sudo apt-get updatesudo apt-get install libpcre3 libpcre3-dev</code></pre><blockquote><p>错误2</p><p>./configure: error: the HTTP cache module requires md5 functions<br>from OpenSSL library. You can either disable the module by using<br>–without-http-cache option, or install the OpenSSL library into the system,<br>or build the OpenSSL library statically from the source with nginx by using<br>–with-http_ssl_module –with-openssl=<path> options.</path></p></blockquote><p>解决办法：</p><pre><code>sudo apt-get install openssl libssl-dev</code></pre><blockquote><p>错误3 （如果出现这种检查不通过，则说明缺少某些依赖。）</p><p>ubuntu@VM-0-16-ubuntu:/usr/local/nginx/nginx-1.12.2$ sudo ./configure<br>checking for OS</p><p>Linux 4.15.0-118-generic x86_64<br>checking for C compiler … not found</p><p>./configure: error: C compiler cc is not found</p></blockquote><p>解决办法：</p><pre class="line-numbers language-yaml"><code class="language-yaml">sudo apt<span class="token punctuation">-</span>get install build<span class="token punctuation">-</span>essential<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>错误4</p><p>error: the HTTP gzip module requires the zlib library.</p></blockquote><p>解决办法：</p><pre><code>apt-get install zlib1g-dev</code></pre><p>然后在执行<code> ./configure命令</code></p><pre><code>cd nginx-1.5.9sudo ./configure</code></pre><h5 id="3-编译"><a href="#3-编译" class="headerlink" title="3.编译"></a>3.编译</h5><p><code>make</code> 编译 （make的过程是把各种语言写的源码文件，变成可执行文件和各种库文件）</p><pre><code>cd /usr/local/nginx/nginx-1.5.9sudo make</code></pre><h5 id="4-make-install安装"><a href="#4-make-install安装" class="headerlink" title="4.make install安装"></a>4.make install安装</h5><p><code>make install</code> 安装 （<code>make install</code>是把这些编译出来的可执行文件和库文件复制到合适的地方）</p><pre><code>sudo make install</code></pre><h5 id="5-启动nginx服务"><a href="#5-启动nginx服务" class="headerlink" title="5.启动nginx服务"></a>5.启动nginx服务</h5><pre><code>cd /usr/local/nginx/sbinsudo ./nginx</code></pre><h5 id="6-看nginx服务是否启动"><a href="#6-看nginx服务是否启动" class="headerlink" title="6.看nginx服务是否启动"></a>6.看nginx服务是否启动</h5><pre><code>ubuntu@VM-0-16-ubuntu:/usr/local/nginx/sbin$ ps -ef | grep nginxroot      7183     1  0 14:53 ?        00:00:00 nginx: master process ./nginxnobody    7184  7183  0 14:53 ?        00:00:00 nginx: worker processubuntu    7252 23084  0 14:53 pts/1    00:00:00 grep --color=auto nginx</code></pre><p>我们看到服务已经起来了,输入ip即可访问我们nginx目录下面的html文件夹下面的index.html文件</p><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201209145642.png"></p><p>===================华丽的分割线======================</p><p><code>nginx -s reload </code>：修改配置后重新加载生效</p><p><code>nginx -s reopen</code> ：重新打开日志文件</p><p>关闭nginx：</p><p><code>nginx -s stop</code> :快速停止nginx</p><p><code>quit </code>：完整有序的停止nginx</p>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> linux </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给服务器设置ssh免密码登录</title>
      <link href="2020/12/09/gei-fu-wu-qi-she-zhi-ssh-mian-mi-ma-deng-lu/"/>
      <url>2020/12/09/gei-fu-wu-qi-she-zhi-ssh-mian-mi-ma-deng-lu/</url>
      
        <content type="html"><![CDATA[<h4 id="给服务器设置ssh免密码登录"><a href="#给服务器设置ssh免密码登录" class="headerlink" title="给服务器设置ssh免密码登录"></a>给服务器设置ssh免密码登录</h4><h4 id="SSH是什么？"><a href="#SSH是什么？" class="headerlink" title="SSH是什么？"></a>SSH是什么？</h4><blockquote><p>SSH 为 Secure Shell 的缩写，由IETF的网络工作小组（Network Working Group）所制定；SSH为建立在应用层和传输层基础上的安全协议。<br>SSH是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用SSH协议可以有效防止远程管理过程中的信息泄露问题。<br>SSH最初是UNIX系统上的一个程序，后来又迅速扩展到其他操作平台。SSH在正确使用时可弥补网络中的漏洞。SSH客户端适用于多种平台。<br>几乎所有UNIX平台—包括HP-UX、Linux、AIX、Solaris、Digital UNIX、Irix，以及其他平台，都可运行SSH。</p></blockquote><ul><li>简单来理解，就是我拥有一台服务器，我现在想要登录上去做一些事情，那就得使用ssh登录到远程的服务器上，才能在上面进行操作。</li></ul><h4 id="SSH-服务端以及客户端配置"><a href="#SSH-服务端以及客户端配置" class="headerlink" title="SSH 服务端以及客户端配置"></a>SSH 服务端以及客户端配置</h4><h5 id="启动-sshd-服务"><a href="#启动-sshd-服务" class="headerlink" title="启动 sshd 服务"></a>启动 sshd 服务</h5><blockquote><p>一开始在远程服务器上面，需要查看一下他的sshd服务启动了没有，如果没有启动，任何客户端主机是连接不上来的，一般如果是自己在云厂商处购买了主机，主机启动的时候就会把sshd服务启动起来。但有可能自己在测试环境搭建机器的时候，是没有默认启动的，这时候就需要在测试机器的终端看一下，命令如下</p></blockquote><pre><code>ubuntu@VM-0-16-ubuntu:~$ ps -ef | grep sshdroot      1221     1  0 Dec07 ?        00:00:00 /usr/sbin/sshd -Droot     15649  1221  0 09:21 ?        00:00:00 sshd: ubuntu [priv]ubuntu   15740 15649  0 09:21 ?        00:00:00 sshd: ubuntu@pts/0ubuntu   24863 15741  0 10:24 pts/0    00:00:00 grep --color=auto sshd</code></pre><blockquote><p>这里看到第一行,sshd已经启动起来了,进程号是 1221</p></blockquote><ul><li>如果没有启动的话,那就启动一下,命令如下</li></ul><pre><code>ubuntu@VM-0-16-ubuntu:~$ service sshd start</code></pre><h4 id="登录服务器主机的方式"><a href="#登录服务器主机的方式" class="headerlink" title="登录服务器主机的方式"></a>登录服务器主机的方式</h4><h4 id="1、客户端使用密码的方式登录目标主机"><a href="#1、客户端使用密码的方式登录目标主机" class="headerlink" title="1、客户端使用密码的方式登录目标主机"></a>1、客户端使用密码的方式登录目标主机</h4><pre><code>➜  ~ ssh root@192.168.0.187root@192.168.0.187's password:</code></pre><p>输入密码即可</p><h4 id="2、客户端使用密钥方式登录目标主机-免密码"><a href="#2、客户端使用密钥方式登录目标主机-免密码" class="headerlink" title="2、客户端使用密钥方式登录目标主机(免密码)"></a>2、客户端使用密钥方式登录目标主机(免密码)</h4><blockquote><p>使用场景：</p><p>1、如果某个运维人员临时需要登录一台机器，但是机器的管理员并不想把密码暴露给他，所以会让这个运维人员发一个自己的公钥给自己，帮他添加进去，这个运维人员就可以顺利的登录机器了。在运维做完了自己的事情之后，机器的管理员会把他从公钥列表中删掉，这样一来整个过程，密码没有暴露，运维也在这段时间内登上了机器，很完美。</p><p>2、因为自己懒，不想敲密码,想直接使用自己在电脑上配置的ssh_xxx来登录</p></blockquote><h4 id="使用ssh-keygen生成密匙对"><a href="#使用ssh-keygen生成密匙对" class="headerlink" title="使用ssh-keygen生成密匙对"></a>使用ssh-keygen生成密匙对</h4><pre><code>➜  ~ cd .ssh ➜  .ssh ➜  .ssh ssh-keygen -t rsaGenerating public/private rsa key pair.Enter file in which to save the key (/Users/zhaochao/.ssh/id_rsa): id_rsaEnter passphrase (empty for no passphrase):</code></pre><p>回车以后，询问是否要输入一个密码来保护这个密匙，为了方便起见，我就不输入了，不然每次使用这个密匙文件还要输一遍密码,直接一路回车就ok</p><p>到了这里，可以看到我们已经创建好了密匙对</p><pre><code>➜  .ssh lsid_rsa      id_rsa.pub  known_hosts</code></pre><p>我们可以使用<code>cat</code>命令来获取这个id_rsa.pub</p><pre><code>➜  .ssh cat id_rsa.pub ssh-rsa AAAAB3NDzaC1yc2EAFADAADAQFcPFT++P8rOkltuIGDSle45yEyDXtDGcCVcHmHAa8TH3/1G+cGusuvREewaJWdxS95fopdi7iumedN+bOJsCIyDsskuLJtt9FaT1MlEg8C3DH+VTkVTKadOYtFF0cwSediRadqjhMQqTOq6gH1g6zTkr4eGEIPp5RaPFDLZmeGiOeYvIS+d8eIdpHckO90KWL0T0bOcjifHlle+5ia0tSo4ZP5ekp0CxTlu0McorQIU7C1cjW/Iz5xQHpYFOdkKYImQob0H0bletwGY8K4A48ioEG9bfiBwbhmCrt93SGcp40G4e6KsuqLMe+5JUqqRcOg7TqvmD/FnftFbjDz2VTGJ/WlEJ4P3HXvAR8CdKPc/DJMmTV3oxwlmdgtDLFpqW7BkydkF2wSkO1+QP4p5ua3Ned7VLlNb16JKafBXD59q1yhwtsvhDxcgmk0tL5O3H4KPCHMZ6tePcWF2wPf+K/zLqV5DF2KXjat+PMveQf6NWAP+KK2jlG8AyV2+BBTI4nC5TdRZMXGmnVOvoc/eGbBB0NohoxZbFnjIVmpLUJcXrUXmXPojjauXQ0z37Ve/uOarVCkDTMimL+GZ4HrOx2s7FR1XM0cpw== 123456@qq.com</code></pre><h4 id="将公钥文件放进authorized-keys中"><a href="#将公钥文件放进authorized-keys中" class="headerlink" title="将公钥文件放进authorized_keys中"></a>将公钥文件放进authorized_keys中</h4><p>目标主机上如果没有.ssh文件夹，就自己创建一个，创建好之后,再创建一个authorized_keys文件。如果有的话就不用了。</p><pre><code>root@wzt-dev2-PC:~/.ssh# lltotal 8drwxr-xr-x  2 root root 4096 7月  17 19:49 ./drwx------ 10 root root 4096 7月  17 19:49 ../-rw-r--r--  1 root root    0 7月  17 19:49 authorized_keys</code></pre><pre><code>vim authorized_keys</code></pre><p>将刚才的id_rsa.pub的内容放进去保存一下就可以</p><h4 id="这里需要注意"><a href="#这里需要注意" class="headerlink" title="这里需要注意"></a>这里需要注意</h4><blockquote><p>authorized_keys 文件对权限有哟求，必须是600(-rw——-)或者644<br>.ssh目录 必须是700(drwx——),否则一会儿登录不成功<br>弄完之后检查一下权限，如果不是的话，改成响应的权限就ok了</p></blockquote><h4 id="准备就绪，在客户端上登录目标主机"><a href="#准备就绪，在客户端上登录目标主机" class="headerlink" title="准备就绪，在客户端上登录目标主机"></a>准备就绪，在客户端上登录目标主机</h4><p>在登录之前，要确认一下目标主机是否允许密匙对登录，一般都是打开的，如果没有打开就自己打开</p><blockquote><p>(查看 /etc/ssh/sshd_config 文件内容 中的 PubkeyAuthentication 这一项是否为 yes,如果不是就自己修改成yes之后重启sshd服务 )</p></blockquote><pre><code>wzy@wzt-dev2-PC:~$ cat /etc/ssh/sshd_config# Package generated configuration file# See the sshd_config(5) manpage for details# What ports, IPs and protocols we listen forPort 22# Use these options to restrict which interfaces/protocols sshd will bind to#ListenAddress ::#ListenAddress 0.0.0.0Protocol 2# HostKeys for protocol version 2HostKey /etc/ssh/ssh_host_rsa_keyHostKey /etc/ssh/ssh_host_dsa_keyHostKey /etc/ssh/ssh_host_ecdsa_keyHostKey /etc/ssh/ssh_host_ed25519_key#Privilege Separation is turned on for securityUsePrivilegeSeparation yes# Lifetime and size of ephemeral version 1 server keyKeyRegenerationInterval 3600ServerKeyBits 1024# LoggingSyslogFacility AUTHLogLevel INFO# Authentication:LoginGraceTime 120PermitRootLogin yesStrictModes yesRSAAuthentication yesPubkeyAuthentication yes   &lt;---------------  在这里#AuthorizedKeysFile %h/.ssh/authorized_keys</code></pre><p>到此我们就配置完了。 (不用输入密码就可以登录了)</p><pre><code>➜  ~ ./ssh_my_tencent Welcome to Ubuntu 18.04.4 LTS (GNU/Linux 4.15.0-118-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage  System information as of Wed Dec  9 10:45:26 CST 2020  System load:  0.0               Processes:           89  Usage of /:   5.0% of 49.15GB   Users logged in:     0  Memory usage: 12%               IP address for eth0: 172.21.0.16  Swap usage:   0% * Introducing self-healing high availability clusters in MicroK8s.   Simple, hardened, Kubernetes for production, from RaspberryPi to DC.     https://microk8s.io/high-availability * Canonical Livepatch is available for installation.   - Reduce system reboots and improve kernel security. Activate at:     https://ubuntu.com/livepatchNew release '20.04.1 LTS' available.Run 'do-release-upgrade' to upgrade to it.&lt; Hi, How are you &gt; -----------------        \   ^__^         \  (oo)\_______            (__)\       )\/\                ||----w |                ||     ||Last login: Wed Dec  9 09:21:16 2020 from 124.126.1.181</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给Linux服务器设置登录提示</title>
      <link href="2020/12/08/gei-linux-fu-wu-qi-she-zhi-deng-lu-ti-shi/"/>
      <url>2020/12/08/gei-linux-fu-wu-qi-she-zhi-deng-lu-ti-shi/</url>
      
        <content type="html"><![CDATA[<h5 id="1、给Linux设置登录提示"><a href="#1、给Linux设置登录提示" class="headerlink" title="1、给Linux设置登录提示"></a>1、给Linux设置登录提示</h5><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201208180823.png"></p><pre><code>sudo vim /etc/motd</code></pre><p>然后把你想要的内用拷贝进去 退出服务器,重新登录就可以看到了</p><pre><code>&lt; Hi, How are you &gt; -----------------        \   ^__^         \  (oo)\_______            (__)\       )\/\                ||----w |                ||     ||  </code></pre><h5 id="2、给Linux设置彩色界面"><a href="#2、给Linux设置彩色界面" class="headerlink" title="2、给Linux设置彩色界面"></a>2、给Linux设置彩色界面</h5><h5 id="查看当前终端支持集中颜色"><a href="#查看当前终端支持集中颜色" class="headerlink" title="查看当前终端支持集中颜色"></a>查看当前终端支持集中颜色</h5><p>使用<code>tput colors</code>命令即可查看当前终端支持几种颜色</p><h5 id="查看当前终端类型"><a href="#查看当前终端类型" class="headerlink" title="查看当前终端类型"></a>查看当前终端类型</h5><p><code>$TERM</code>变量代表当前终端类型，可使用<code>echo $TERM</code>命令查看。</p><h5 id="输出当前支持的颜色"><a href="#输出当前支持的颜色" class="headerlink" title="输出当前支持的颜色"></a>输出当前支持的颜色</h5><p>运行以下命令，若输出了完整的256种颜色，就说明当前终端支持256色：</p><pre><code>(x=`tput op` y=`printf %76s`;for i in {0..256};do o=00$i;echo -e ${o:${#o}-3:3} `tput setaf $i;tput setab $i`${y// /=}$x;done)</code></pre><p>若只有前8种颜色，说明当前配置是8色模式，默认情况下，Ubuntu中的Gnome-Terminal就只开启了8色支持。此时可通过修改<code>~/.bashrc</code>文件将其改为256色，在<code>.bashrc</code>文件最后中加入以下代码即可：</p><pre><code>export TERM=vte-256color</code></pre><p>如果没有<code>.bashrc</code>文件 可以选择<code>sudo vim .bashrc</code> 创建一个 也可以使用<code>sudo cp /etc/skel/.bashrc ./</code> 命令拷贝到home目录下</p><p>最后输入命令source ~/.bashrc，一定要输入，不然配置文件无法生效(虽然source了但是退出登录进来后有没有了颜色)</p><h5 id="解决-bashrc文件每次打开终端都需要source的问题"><a href="#解决-bashrc文件每次打开终端都需要source的问题" class="headerlink" title="解决.bashrc文件每次打开终端都需要source的问题"></a>解决.bashrc文件每次打开终端都需要source的问题</h5><p><code>sudo vim ~/.bash_profile</code>在文件内部输入</p><pre><code># 加载.bashrc文件if test -f .bashrc ; thensource .bashrc fi</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在linux服务器上安装vim</title>
      <link href="2020/12/08/zai-linux-fu-wu-qi-shang-an-zhuang-vim/"/>
      <url>2020/12/08/zai-linux-fu-wu-qi-shang-an-zhuang-vim/</url>
      
        <content type="html"><![CDATA[<h4 id="在Linux服务器上-安装-vim-及-vundle-install-vim-and-vundle"><a href="#在Linux服务器上-安装-vim-及-vundle-install-vim-and-vundle" class="headerlink" title="在Linux服务器上 安装 vim 及 vundle ( install vim and vundle)"></a>在Linux服务器上 安装 vim 及 vundle ( install vim and vundle)</h4><h5 id="1、-直接下载-这个文件-并且解压-成为-home目录下的-vim-即可"><a href="#1、-直接下载-这个文件-并且解压-成为-home目录下的-vim-即可" class="headerlink" title="1、 直接下载 这个文件 ,  并且解压,成为 home目录下的 .vim 即可."></a>1、 直接下载 <a href="http://siwei.me/system/resources/W1siZiIsIjIwMTQvMTAvMjEvMDlfNTdfMDdfODA3X2RvdF92aW1fZm9sZGVyLnppcCJdXQ/dot_vim_folder.zip">这个文件</a> ,  并且解压,成为 home目录下的 .vim 即可.</h5><h5 id="2、-下载-vimrc-保存到-home目录下。"><a href="#2、-下载-vimrc-保存到-home目录下。" class="headerlink" title="2、 下载  vimrc, 保存到 home目录下。"></a>2、 下载  <a href="http://siwei.me/system/resources/BAhbBlsHOgZmSSIjMjAxNC8wMS8xOS8wNV81MV8zOF82NjVfLnZpbXJjBjoGRVQ/.vimrc">vimrc</a>, 保存到 home目录下。</h5><p>接下来使用scp 命令将下载的两个文件传到Linux服务器上</p><pre><code>scp ~/Downloads/dot_vim_folder.zip ubuntu@85.136.62.11:~scp ~/Downloads/vimrc ubuntu@85.136.62.11:~</code></pre><p>传上去后进入到Linux服务器 这个 ~ 目录 </p><pre><code>cd ~unzip dot_vim_folder.zip</code></pre><p>然后将vimrc文件重命令一下 改为.vimrc 就好了</p><pre><code>mv vimrc .vimrc</code></pre><h4 id="conf文件代码不高亮-这里做一下配置-按照下面的命令进行配置就行"><a href="#conf文件代码不高亮-这里做一下配置-按照下面的命令进行配置就行" class="headerlink" title=".conf文件代码不高亮  这里做一下配置 按照下面的命令进行配置就行"></a>.conf文件代码不高亮  这里做一下配置 按照下面的命令进行配置就行</h4><pre><code>#!/bin/bash## Highligh Nginx config file in Vim# Download syntax highlightmkdir -p ~/.vim/syntax/wget http://www.vim.org/scripts/download_script.php?src_id=19394 -O ~/.vim/syntax/nginx.vim# Set location of Nginx config filecat &gt; ~/.vim/filetype.vim &lt;&lt;EOFau BufRead,BufNewFile /etc/nginx/*,/etc/nginx/conf.d/*,/usr/local/nginx/conf/* if &amp;ft == '' | setfiletype nginx | endifEOF</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis使用心得</title>
      <link href="2020/12/02/redis-shi-yong-xin-de/"/>
      <url>2020/12/02/redis-shi-yong-xin-de/</url>
      
        <content type="html"><![CDATA[<h3 id="Redis-使用"><a href="#Redis-使用" class="headerlink" title="Redis 使用"></a>Redis 使用</h3><h4 id="1、在本地使用"><a href="#1、在本地使用" class="headerlink" title="1、在本地使用"></a>1、在本地使用</h4><p>进入到redis的src目录中</p><pre><code>./redis-cli </code></pre><ul><li>一些常规操作</li></ul><pre><code>LPUSH 是把新的元素从右侧插入到数组中LPUSH fruits apple   # =&gt; ["apple"]   把元素从左边插入到数组中&gt; LPUSH  fruits banana   # =&gt; ["banana", "apple"]  RPUSH 是把新的元素从右侧插入到数组中&gt; LINDEX fruits 0     # =&gt; "banana"&gt; LINDEX fruits 1    # =&gt;  "apple"&gt; LRANGE fruits 0 1  #=&gt; ['banana', 'apple']   ， 注意只有lrange, 没有 rrange. </code></pre><ul><li>获取所有的key</li></ul><pre><code>keys *   这个*号是匹配所有的key 可以拼接 比如 fruits*</code></pre><pre><code>127.0.0.1:6379&gt; keys *1) "fruits"</code></pre><ul><li>查看某个key下的值:</li></ul><pre><code>lrange fruits 0 -1</code></pre><pre><code>127.0.0.1:6379&gt; lrange fruits 0 -11) "def"2) "abc"3) "banana"4) "apple"</code></pre><ul><li>截断 保留trim中参数部分</li></ul><pre><code>ltrim fruits 0 2</code></pre><pre><code>我们看到 这里只保留了0-2剩下的都删除了127.0.0.1:6379&gt; lrange fruits 0 -11) "def"2) "abc"3) "banana"</code></pre>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 运维方面的知识</title>
      <link href="2020/12/02/linux-yun-wei-fang-mian-de-zhi-shi/"/>
      <url>2020/12/02/linux-yun-wei-fang-mian-de-zhi-shi/</url>
      
        <content type="html"><![CDATA[<h3 id="Linux-常用命令"><a href="#Linux-常用命令" class="headerlink" title="Linux 常用命令"></a>Linux 常用命令</h3><h5 id="1、怎么看Linux系统版本"><a href="#1、怎么看Linux系统版本" class="headerlink" title="1、怎么看Linux系统版本"></a>1、怎么看Linux系统版本</h5><p>登陆Linux，在终端输入</p><pre class="line-numbers language-Linux"><code class="language-Linux">cat /proc/version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="2、查看服务器内存使用情况"><a href="#2、查看服务器内存使用情况" class="headerlink" title="2、查看服务器内存使用情况"></a>2、查看服务器内存使用情况</h5><pre class="line-numbers language-linux"><code class="language-linux">free -m<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201202120027.png"></p><h4 id="参数解释："><a href="#参数解释：" class="headerlink" title="参数解释："></a>参数解释：</h4><p>Mem行（单位均为M）：</p><ul><li>total：内存总数</li><li>used：已使用内存数</li><li>free：空闲内存数</li><li>shared：当前废弃不用</li><li>buffers：缓存内存数（Buffer）</li><li>cached：缓存内舒数（Page）</li></ul><p>(-/+ buffers/cache)行：</p><ul><li>（-buffers/cache）: 真正使用的内存数，指的是第一部分的 used - buffers - cached</li><li>（+buffers/cache）: 可用的内存数，指的是第一部分的 free + buffers + cached</li></ul><p>Swap行指交换分区。</p><p>实际上不要看free少就觉得内存不足了，buffers和cached都是可以在使用内存时拿来用的，应该以(-/+ buffers/cache)行的free和used来看。只要没发现swap的使用，就不用太担心，如果swap用了很多，那就要考虑增加物理内存了。</p><h4 id="3、-查看CPU使用情况"><a href="#3、-查看CPU使用情况" class="headerlink" title="3、 查看CPU使用情况"></a>3、 查看CPU使用情况</h4><pre><code>top</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201202120433.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 防火墙 </tag>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rails 连接多个数据库</title>
      <link href="2020/12/01/rails-lian-jie-duo-ge-shu-ju-ku/"/>
      <url>2020/12/01/rails-lian-jie-duo-ge-shu-ju-ku/</url>
      
        <content type="html"><![CDATA[<h4 id="Rails项目中如何连接多个数据库"><a href="#Rails项目中如何连接多个数据库" class="headerlink" title="Rails项目中如何连接多个数据库"></a>Rails项目中如何连接多个数据库</h4><h5 id="1、修改config-database-yml文件"><a href="#1、修改config-database-yml文件" class="headerlink" title="1、修改config/database.yml文件"></a>1、修改config/database.yml文件</h5><pre class="line-numbers language-ruby"><code class="language-ruby">default<span class="token punctuation">:</span> <span class="token operator">&amp;</span>default  adapter<span class="token punctuation">:</span> mysql2  encoding<span class="token punctuation">:</span> utf8  collation<span class="token punctuation">:</span> utf8_general_ci  pool<span class="token punctuation">:</span> <span class="token number">5</span>  host<span class="token punctuation">:</span> localhost  username<span class="token punctuation">:</span> root  password<span class="token punctuation">:</span> <span class="token number">123456</span><span class="token comment" spellcheck="true">#原数据库</span>development<span class="token punctuation">:</span>  <span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token punctuation">:</span> <span class="token operator">*</span>default  database<span class="token punctuation">:</span> cadae<span class="token comment" spellcheck="true">#你想要连接的另一个数据库</span>development_main_database<span class="token punctuation">:</span>  <span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token punctuation">:</span> <span class="token operator">*</span>default  database<span class="token punctuation">:</span> cadae_copytest<span class="token punctuation">:</span>  <span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token punctuation">:</span> <span class="token operator">*</span>default  database<span class="token punctuation">:</span> cadae_testproduction<span class="token punctuation">:</span>  <span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token punctuation">:</span> <span class="token operator">*</span>default  url<span class="token punctuation">:</span> <span class="token string">'mysql2://root:666666@localhost:3306/coiex?pool=10&amp;timeout=3000'</span>  pool<span class="token punctuation">:</span> <span class="token number">10</span>  database<span class="token punctuation">:</span> cadae<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2、新建一个连接类继承-ActiveRecord-Base"><a href="#2、新建一个连接类继承-ActiveRecord-Base" class="headerlink" title="2、新建一个连接类继承 ActiveRecord::Base"></a>2、新建一个连接类继承 ActiveRecord::Base</h5><ul><li>比如放在app/models/ 目录下 就叫做 database_connection.rb</li></ul><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token keyword">class</span> <span class="token class-name">DatabaseConnection</span> <span class="token operator">&lt;</span> <span class="token constant">ActiveRecord</span><span class="token punctuation">:</span><span class="token symbol">:Base</span>  <span class="token comment" spellcheck="true">#共用连接池，减少数据库连接的消耗</span>  <span class="token keyword">self</span><span class="token punctuation">.</span>abstract_class <span class="token operator">=</span> <span class="token keyword">true</span>  <span class="token comment" spellcheck="true"># 这里根据rails运行环境不同自动获取运行环境 转换为symbol类型   </span>  <span class="token function">establish_connection</span><span class="token punctuation">(</span><span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span>Rails<span class="token punctuation">.</span>env<span class="token delimiter tag">}</span></span>_main_database"</span><span class="token punctuation">.</span>to_sym<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#或者使用</span>  <span class="token comment" spellcheck="true">#establish_connection(:development_main_database)</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>这里有个小坑 在创建database_connection.rb文件的时候 最好不要创建一个文件夹然后把它放进去 这样可能会找不到这个文件</li></ul><h5 id="3、在需要连接另一个数据库的model中继承咱们写的这个类就行了"><a href="#3、在需要连接另一个数据库的model中继承咱们写的这个类就行了" class="headerlink" title="3、在需要连接另一个数据库的model中继承咱们写的这个类就行了"></a>3、在需要连接另一个数据库的model中继承咱们写的这个类就行了</h5><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token keyword">class</span> <span class="token class-name">AccountVerificationResult</span> <span class="token operator">&lt;</span> <span class="token constant">DatabaseConnection</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zsh: permission denied: 解决办法</title>
      <link href="2020/11/18/zsh-permission-denied-jie-jue-ban-fa/"/>
      <url>2020/11/18/zsh-permission-denied-jie-jue-ban-fa/</url>
      
        <content type="html"><![CDATA[<h3 id="1、出现原因"><a href="#1、出现原因" class="headerlink" title="1、出现原因"></a>1、出现原因</h3><pre class="line-numbers language-java"><code class="language-java">用户没有权限，所以才出现了这个错误，所以只需要用chmod修改一下权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2、解决办法"><a href="#2、解决办法" class="headerlink" title="2、解决办法"></a>2、解决办法</h3><pre><code>chmod u+x *.sh</code></pre><h3 id="3、说明"><a href="#3、说明" class="headerlink" title="3、说明"></a>3、说明</h3><pre><code>chmod是权限管理命令change the permissions mode of a file的缩写。u代表所有者。x代表执行权限。’+’ 表示增加权限。chmod u+x file.sh 就表示对当前目录下的file.sh文件的所有者增加可执行权限。</code></pre>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zsh </tag>
            
            <tag> chmod </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android intent.setFlags方法中参数值的含义</title>
      <link href="2020/10/21/android-intent-setflags-fang-fa-zhong-can-shu-zhi-de-han-yi/"/>
      <url>2020/10/21/android-intent-setflags-fang-fa-zhong-can-shu-zhi-de-han-yi/</url>
      
        <content type="html"><![CDATA[<h4 id="Android中intent-setFlags方法中参数值的含义"><a href="#Android中intent-setFlags方法中参数值的含义" class="headerlink" title="Android中intent.setFlags方法中参数值的含义"></a>Android中intent.setFlags方法中参数值的含义</h4><h5 id="一、FLAG-ACTIVITY-NEW-TASK"><a href="#一、FLAG-ACTIVITY-NEW-TASK" class="headerlink" title="一、FLAG_ACTIVITY_NEW_TASK:"></a>一、FLAG_ACTIVITY_NEW_TASK:</h5><p>例如现在栈一的情况是：A    B   C(C位于栈顶)，C通过intent跳转到D，并且这个Intent添加了FLAG_ACTIVITY_NEW_TASK标记，<br>如果D这个Activity在Manifest.xml中声明了添加Task affinity，系统首先会查找有没有和D的Task affinity相同的task栈存在，<br>如果存在，就将D压入那个栈，如果不存在则会新建一个D的affinity的栈将其压入。如果D的Task affinity默认没有设置，则会将其压入栈1，变成A B C D，<br>这样就和不加FLAG_ACTIVITY_NEW_TASK标记效果是一样的了。但如果试图从非Activity的非正常途径启动一个activity，<br>比如从一个service、BroadcastReceiver等中启动一个Activity，则intent要设置Intent.FLAG_ACTIVITY_NEW_TASK标记。<br>Activity要存在于Activity栈中，而非Activity的途径启动Activity时必然不存在一个Activity的栈，<br>所以要新建一个Activity栈来存放要启动的Activity。</p><h5 id="二、FLAG-ACTIVITY-CLEAR-TOP"><a href="#二、FLAG-ACTIVITY-CLEAR-TOP" class="headerlink" title="二、FLAG_ACTIVITY_CLEAR_TOP:"></a>二、FLAG_ACTIVITY_CLEAR_TOP:</h5><p>例如现在的栈情况为A B C D, D此时通过intent跳转到B，如果这个intent设置FLAG_ACTIVITY_CLEAR_TOP标记，则栈情况变为:A B。如果没有添加这个标记，则栈的情况将会变为：A B C D B 。<br>也就是说，如果设置了FLAG_ACTIVITY_CLEAR_TOP标记，并且目标Activity在栈中已存在，<br>则会把位于该目标Activity之上的Activity从栈中弹出销毁。</p><h5 id="三、FLAG-ACTIVITY-NO-HISTORY"><a href="#三、FLAG-ACTIVITY-NO-HISTORY" class="headerlink" title="三、FLAG_ACTIVITY_NO_HISTORY:"></a>三、FLAG_ACTIVITY_NO_HISTORY:</h5><p>例如现在栈的情况为：A B C 。C通过intent跳转到D，这个intent添加FLAG_ACTIVITY_NO_HISTORY标志，此时界面显示D的内容，但是它并不会压入栈中。<br>如果按返回键，返回到C，栈的情况是：A  B  C。如果D中又跳转到E，栈的情况为：A B C E,此时按返回键会回到C，因为D根本就没有被压入栈中。</p><h5 id="四、FLAG-ACTIVITY-SINGLE-TOP"><a href="#四、FLAG-ACTIVITY-SINGLE-TOP" class="headerlink" title="四、FLAG_ACTIVITY_SINGLE_TOP:"></a>四、FLAG_ACTIVITY_SINGLE_TOP:</h5><p>和Activity的Launch mode的singleTop类似。如果某个intent设置了这个标志，并且这个intent的目标Activity就是栈顶的Activity，那么将不会新建一个实例压入栈中。<br>简言之，目标Activity已在栈顶则跳转过去，不在栈顶则在栈顶新建Activity。</p><ul><li>如果遇到这种错误</li></ul><pre class="line-numbers language-java"><code class="language-java">Caused by<span class="token operator">:</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>AndroidRuntimeException<span class="token operator">:</span> Calling <span class="token function">startActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> from outside of an Activity  context requires the FLAG_ACTIVITY_NEW_TASK flag<span class="token punctuation">.</span> Is <span class="token keyword">this</span> really what you want<span class="token operator">?</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Context中有一个startActivity方法，Activity继承自Context，覆写了startActivity方法。<br>如果使用Activity的startActivity方法，不会有任何问题，而如果使用Context的startActivity方法，<br>就必须新建一个Activity栈，遇到上面的异常，是因为使用了Context的startActivity方法。</p><p>解决的办法是：为intent设置一个flag，即</p><pre class="line-numbers language-java"><code class="language-java">intent<span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span>Intent<span class="token punctuation">.</span>FLAG_ACTIVITY_NEW_TASK<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样就可以在新的Activity栈里启动这个Activity了。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Intent </tag>
            
            <tag> setFlags </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android ImageView设置background和src的区别</title>
      <link href="2020/10/21/android-imageview-she-zhi-background-he-src-de-qu-bie/"/>
      <url>2020/10/21/android-imageview-she-zhi-background-he-src-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<h4 id="一、ImageView设置background和src的区别。"><a href="#一、ImageView设置background和src的区别。" class="headerlink" title="一、ImageView设置background和src的区别。"></a>一、ImageView设置background和src的区别。</h4><ul><li>1.src是图片内容（前景），bg是背景，可以同时使用。</li><li>2.background会根据ImageView组件给定的长宽进行拉伸，而src就存放的是原图的大小，不会进行拉伸 。</li><li>3.scaleType只对src起作用；bg可设置透明度。</li></ul><h4 id="二、ImageView几种不同的设置图片的方式。"><a href="#二、ImageView几种不同的设置图片的方式。" class="headerlink" title="二、ImageView几种不同的设置图片的方式。"></a>二、ImageView几种不同的设置图片的方式。</h4><p>设置background：</p><pre class="line-numbers language-java"><code class="language-java">image<span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDrawable</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>black<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//变形</span>image<span class="token punctuation">.</span><span class="token function">setBackgroundResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>black<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//变形 </span>image<span class="token punctuation">.</span><span class="token function">setBackgroundDrawable</span><span class="token punctuation">(</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDrawable</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>black<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">////变形</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>设置src:</p><pre class="line-numbers language-java"><code class="language-java">image<span class="token punctuation">.</span><span class="token function">setImageDrawable</span><span class="token punctuation">(</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDrawable</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>blackk<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//不会变形</span>Stringpath <span class="token operator">=</span> Environment<span class="token punctuation">.</span><span class="token function">getExternalStorageDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>File<span class="token punctuation">.</span>separator<span class="token operator">+</span><span class="token string">"test1.jpg"</span><span class="token punctuation">;</span>Bitmap bm <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeFile</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>image<span class="token punctuation">.</span><span class="token function">setImageBitmap</span><span class="token punctuation">(</span>bm<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//不会变形</span>image<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>blackk<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//不会变形</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ImageView </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android-如何监听前后台</title>
      <link href="2020/10/21/android-ru-he-jian-ting-qian-hou-tai/"/>
      <url>2020/10/21/android-ru-he-jian-ting-qian-hou-tai/</url>
      
        <content type="html"><![CDATA[<h4 id="Android-如何监听前后台"><a href="#Android-如何监听前后台" class="headerlink" title="Android-如何监听前后台"></a>Android-如何监听前后台</h4><p>简单讲讲android如何判断应用切换到后台和应用切换到前台。这个其实很简单，之前需要做一个功能，当app由后台进入前台时需要完成一些逻辑操作，所以在网上查找如何判断app由后台进入前台，最终是解决了问题。这里记录一下。</p><h5 id="一、使用ActivityLifecycleCallbacks简单app进入后台"><a href="#一、使用ActivityLifecycleCallbacks简单app进入后台" class="headerlink" title="一、使用ActivityLifecycleCallbacks简单app进入后台"></a>一、使用ActivityLifecycleCallbacks简单app进入后台</h5><p>有时需要监听到应用在前后台切换并做些处理，一般的做法可能是建立一个BaseActivity，然后全部的Activity都继承它，在BaseActivity的onStart和onStop中计数去处理。这样并不是最好的方式，不做详细介绍，有更好的方式，道理其实差不多，就是借助ActivityLifecycleCallbacks来实现。</p><p>1、 写了一个帮助类</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>cadae<span class="token punctuation">.</span>helpers<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>Activity<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>Application<span class="token punctuation">;</span><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppFrontBackHelper</span> <span class="token punctuation">{</span>  <span class="token keyword">private</span> OnAppStatusListener mOnAppStatusListener<span class="token punctuation">;</span>  <span class="token keyword">public</span> <span class="token function">AppFrontBackHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/**   * 注册状态监听，仅在Application中使用   * @param application   * @param listener   */</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span>Application application<span class="token punctuation">,</span> OnAppStatusListener listener<span class="token punctuation">)</span><span class="token punctuation">{</span>    mOnAppStatusListener <span class="token operator">=</span> listener<span class="token punctuation">;</span>    application<span class="token punctuation">.</span><span class="token function">registerActivityLifecycleCallbacks</span><span class="token punctuation">(</span>activityLifecycleCallbacks<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unRegister</span><span class="token punctuation">(</span>Application application<span class="token punctuation">)</span><span class="token punctuation">{</span>    application<span class="token punctuation">.</span><span class="token function">unregisterActivityLifecycleCallbacks</span><span class="token punctuation">(</span>activityLifecycleCallbacks<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">private</span> Application<span class="token punctuation">.</span>ActivityLifecycleCallbacks activityLifecycleCallbacks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Application<span class="token punctuation">.</span>ActivityLifecycleCallbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//打开的Activity数量统计</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> activityStartCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onActivityCreated</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">,</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onActivityStarted</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>      activityStartCount<span class="token operator">++</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//数值从0变到1说明是从后台切到前台</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>activityStartCount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//从后台切到前台</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>mOnAppStatusListener <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>          mOnAppStatusListener<span class="token punctuation">.</span><span class="token function">onFront</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onActivityResumed</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onActivityPaused</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onActivityStopped</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>      activityStartCount<span class="token operator">--</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//数值从1到0说明是从前台切到后台</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>activityStartCount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//从前台切到后台</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>mOnAppStatusListener <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>          mOnAppStatusListener<span class="token punctuation">.</span><span class="token function">onBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onActivitySaveInstanceState</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">,</span> Bundle outState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onActivityDestroyed</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OnAppStatusListener</span><span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">onFront</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token function">onBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="二、Application中使用（注意：仅在Application中才能使用，因为Application的生命周期能监听到每个Activity）"><a href="#二、Application中使用（注意：仅在Application中才能使用，因为Application的生命周期能监听到每个Activity）" class="headerlink" title="二、Application中使用（注意：仅在Application中才能使用，因为Application的生命周期能监听到每个Activity）"></a>二、Application中使用（注意：仅在Application中才能使用，因为Application的生命周期能监听到每个Activity）</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        AppFrontBackHelper helper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppFrontBackHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        helper<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>MyApp<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AppFrontBackHelper<span class="token punctuation">.</span>OnAppStatusListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFront</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//应用切到前台处理</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//应用切到后台处理</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里在后台我们就可以去做一些事情比如开始一个计时任务 超时时退出登录</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> Timer mTimer<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 计时器，每1秒执行一次任务</span>    <span class="token keyword">private</span> MyTimerTask mTimerTask<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 计时任务，判断是否未操作时间到达ns</span>    <span class="token keyword">private</span> <span class="token keyword">long</span> mLastActionTime<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 上一次操作时间</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        AppFrontBackHelper helper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AppFrontBackHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        helper<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>MyApp<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AppFrontBackHelper<span class="token punctuation">.</span>OnAppStatusListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFront</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//应用切到前台处理</span>                Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"TAG"</span><span class="token punctuation">,</span> <span class="token string">"在前台"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                mLastActionTime <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>mTimer <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                     mTimer<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//应用切到后台处理</span>                Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"TAG"</span><span class="token punctuation">,</span> <span class="token string">"在后台"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>SharedPrefsHelper<span class="token punctuation">.</span><span class="token function">isLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                  <span class="token function">startTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 登录成功，开始计时</span>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">startTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mTimer <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>      mTimer<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    mTimer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Timer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    mTimerTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyTimerTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 初始化上次操作时间为登录成功的时间</span>    mLastActionTime <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 每过1s检查一次</span>    mTimer<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span>mTimerTask<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"TAG"</span><span class="token punctuation">,</span> <span class="token string">"开始计时了。。。。。。。。。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">MyTimerTask</span> <span class="token keyword">extends</span> <span class="token class-name">TimerTask</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"TAG"</span><span class="token punctuation">,</span> <span class="token string">"计时中……"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 一小时未操作停止计时并退出登录</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> mLastActionTime <span class="token operator">></span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">3600</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">stopTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 停止计时任务</span>        <span class="token function">LogOutAuto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//退出登录状态</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 停止计时任务</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">stopTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    mTimer<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 计时任务是否完成 赋值</span>    SharedPrefsHelper<span class="token punctuation">.</span><span class="token function">setBoolean</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>IS_TIMER_TASK_FINISHED<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 用户按下后退键 初始化值</span>    SharedPrefsHelper<span class="token punctuation">.</span><span class="token function">setBoolean</span><span class="token punctuation">(</span>Constants<span class="token punctuation">.</span>USER_PRESSED_BACK<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"TAG"</span><span class="token punctuation">,</span><span class="token string">"结束了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string">"TAG"</span><span class="token punctuation">,</span> <span class="token string">"取消计时"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android-RecycleView内部item点击事件</title>
      <link href="2020/10/21/android-recycleview-nei-bu-item-dian-ji-shi-jian/"/>
      <url>2020/10/21/android-recycleview-nei-bu-item-dian-ji-shi-jian/</url>
      
        <content type="html"><![CDATA[<h4 id="RecyclerView的使用——Item内部控件的点击事件"><a href="#RecyclerView的使用——Item内部控件的点击事件" class="headerlink" title="RecyclerView的使用——Item内部控件的点击事件"></a>RecyclerView的使用——Item内部控件的点击事件</h4><h5 id="一、在adapter中写item点击事件的接口供外部的activity使用"><a href="#一、在adapter中写item点击事件的接口供外部的activity使用" class="headerlink" title="一、在adapter中写item点击事件的接口供外部的activity使用"></a>一、在adapter中写item点击事件的接口供外部的activity使用</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/*** item内部的监听接口*/</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ItemInnerOnclickListener</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 这个String id 是点击item是想要传的参数</span>    <span class="token keyword">void</span> <span class="token function">onItemInnerOnClick</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">,</span> String id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">private</span> ItemInnerOnclickListener mItemInnerOnclickListener<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setOnItemOnClickListener</span><span class="token punctuation">(</span>ItemInnerOnclickListener mItemInnerOnclickListener<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>mItemInnerOnclickListener <span class="token operator">=</span> mItemInnerOnclickListener<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在holder中就可以这么去写：(这里我使用了CommonAdapter 所以holder的代码可能不太一样)</p><pre class="line-numbers language-java"><code class="language-java">holder<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>cancel_withdraw<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">OnMultiClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMultiClick</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// record.id 是activity那边拿到数据后用bean来解析的 传递过来的数据</span>    <span class="token comment" spellcheck="true">// public class WithdrawRecordsAdapter extends CommonAdapter&lt;WithdrawRecordBean.Record></span>    mItemInnerOnclickListener<span class="token punctuation">.</span><span class="token function">onItemInnerOnClick</span><span class="token punctuation">(</span>position<span class="token punctuation">,</span> record<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="二、在activity中我们就可以这么去写"><a href="#二、在activity中我们就可以这么去写" class="headerlink" title="二、在activity中我们就可以这么去写"></a>二、在activity中我们就可以这么去写</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> WithdrawRecordsAdapter withdrawRecordsAdapter<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java">withdrawRecordsAdapter<span class="token punctuation">.</span><span class="token function">setOnItemOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WithdrawRecordsAdapter<span class="token punctuation">.</span>ItemInnerOnclickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token annotation punctuation">@Override</span>          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onItemInnerOnClick</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">,</span> String id<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">showDialog</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我们设置点击事件的时候去new了一个adapter中点击事件的接口，并且我们还可以拿到adapter中点击时想要传递的String id 去做一些事情</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓开发 </tag>
            
            <tag> RecycleView </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rust 闭包</title>
      <link href="2020/10/21/rust-bi-bao/"/>
      <url>2020/10/21/rust-bi-bao/</url>
      
        <content type="html"><![CDATA[<h4 id="快速掌握Rust闭包"><a href="#快速掌握Rust闭包" class="headerlink" title="快速掌握Rust闭包"></a>快速掌握Rust闭包</h4><p><em>闭包(Closure) : 也叫Lambda表达式或匿名函数。</em></p><p>不像普通函数，闭包可以对参数和返回类型进行推断，大多数时候都不需要写出来。以下定义都是合法的：</p><pre class="line-numbers language-rust"><code class="language-rust"><span class="token operator">||</span> <span class="token number">42</span><span class="token punctuation">;</span><span class="token operator">|</span>x<span class="token operator">|</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token operator">|</span>x<span class="token punctuation">:</span>i32<span class="token operator">|</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token closure-params"><span class="token punctuation">|</span>x<span class="token punctuation">:</span>i32<span class="token punctuation">|</span></span> <span class="token punctuation">-></span> i32 <span class="token punctuation">{</span> x <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在上面的例子中，如果是单行语句且没有标注返回类型的时候，花括号是可选的。</p><ul><li>闭包可以像任何其他对象一样绑定到某个变量,然后可以像调用函数一样调用闭包</li></ul><pre class="line-numbers language-rust"><code class="language-rust"><span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token operator">|</span>x<span class="token operator">|</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"x is {}"</span><span class="token punctuation">,</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>打印结果如下：</p><pre class="line-numbers language-rust"><code class="language-rust">x is <span class="token number">6</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也可以在定义的地方直接调用:</p><pre class="line-numbers language-rust"><code class="language-rust"><span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">|</span>x<span class="token operator">|</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// r == 3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>闭包可以捕获外部的环境变量（自由变量）。</li></ul><p>闭包捕获变量的方式分为三类：引用（&amp;T）、可变引用（&amp;mut T）和值（T）。捕获变量时，闭包会根据上面列出的顺序（从约束最少到约束最多），优先按引用捕获，必要时才会使用后面的捕获方式：</p><pre class="line-numbers language-rust"><code class="language-rust"><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 闭包按引用捕获变量x，因为println!只需要引用参数</span><span class="token keyword">let</span> show_x <span class="token operator">=</span> <span class="token operator">||</span> <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"x = {}"</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">show_x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>外部变量的引用保存在show_x对象中，对外部变量的借用持续到show_x离开作用域为止。</p><p>下面是一个捕获可变引用的例子：</p><pre class="line-numbers language-rust"><code class="language-rust"><span class="token keyword">let</span> <span class="token keyword">mut</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 闭包按可变引用捕获变量count </span><span class="token comment" spellcheck="true">// incr也必须是可变的，因为它持有可变引用，调用incr会改变闭包的状态</span><span class="token keyword">let</span> <span class="token keyword">mut</span> incr <span class="token operator">=</span> <span class="token closure-params"><span class="token punctuation">|</span><span class="token punctuation">|</span></span> <span class="token punctuation">{</span> count <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"count = {}"</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">incr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面的代码演示了闭包转移捕获变量所有权时的情况（捕获变量的值）：</p><pre class="line-numbers language-rust"><code class="language-rust"><span class="token keyword">use</span> std<span class="token punctuation">:</span><span class="token punctuation">:</span>mem<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// b是不可复制类型，因此按值捕获时所有权会转移</span><span class="token keyword">let</span> b <span class="token operator">=</span> Box<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token closure-params"><span class="token punctuation">|</span><span class="token punctuation">|</span></span> <span class="token punctuation">{</span>    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"b = {}"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// drop函数取T类型，因此闭包会按值捕获变量b</span>    mem<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">drop</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用闭包后b的所有权已经转移，无法再访问：</p><pre class="line-numbers language-rust"><code class="language-rust"><span class="token comment" spellcheck="true">// 编译错误</span><span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"b = {}"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>同样，因为b的所有权已经转移，无法再次调用这个闭包：</p><pre class="line-numbers language-rust"><code class="language-rust"><span class="token comment" spellcheck="true">// 编译错误</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果要强制按值捕获，可以在闭包前添加关键字move：</p><pre class="line-numbers language-rust"><code class="language-rust"><span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token keyword">move</span> <span class="token closure-params"><span class="token punctuation">|</span><span class="token punctuation">|</span></span> <span class="token punctuation">{</span>    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"b = {}"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>同样地，调用闭包后b的所有权已经转移，无法再访问。</p>]]></content>
      
      
      <categories>
          
          <category> Rust </category>
          
      </categories>
      
      
        <tags>
            
            <tag> closure </tag>
            
            <tag> 函数式编程 </tag>
            
            <tag> Rust 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA 破解</title>
      <link href="2020/10/21/idea-po-jie/"/>
      <url>2020/10/21/idea-po-jie/</url>
      
        <content type="html"><![CDATA[<h4 id="2020-09-024-亲测有效：IntelliJ-IDEA-2020-2-最新全家桶系列产品激活破解方法-JetBrains-全家桶激活"><a href="#2020-09-024-亲测有效：IntelliJ-IDEA-2020-2-最新全家桶系列产品激活破解方法-JetBrains-全家桶激活" class="headerlink" title="2020-09-024 亲测有效：IntelliJ IDEA 2020.2 最新全家桶系列产品激活破解方法, JetBrains 全家桶激活"></a>2020-09-024 亲测有效：IntelliJ IDEA 2020.2 最新全家桶系列产品激活破解方法, JetBrains 全家桶激活</h4><h5 id="激活方法"><a href="#激活方法" class="headerlink" title="激活方法"></a>激活方法</h5><h5 id="1、下载最新版的idea-正常安装"><a href="#1、下载最新版的idea-正常安装" class="headerlink" title="1、下载最新版的idea 正常安装"></a>1、下载最新版的idea 正常安装</h5><h5 id="2、选择免费试用30天"><a href="#2、选择免费试用30天" class="headerlink" title="2、选择免费试用30天"></a>2、选择免费试用30天</h5><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201021130024.png"></p><h5 id="3、进入到idea中后-将压缩包拖进idea-并重启"><a href="#3、进入到idea中后-将压缩包拖进idea-并重启" class="headerlink" title="3、进入到idea中后 将压缩包拖进idea 并重启"></a>3、进入到idea中后 将压缩包拖进idea 并重启</h5><p><strong>[<a href="https://justcode.ikeepstudying.com/wp-content/uploads/2020/09/jetbrains-agent.zip">jetbrains-agent.zip 下载地址</a>]</strong></p><h5 id="4、输入安装参数"><a href="#4、输入安装参数" class="headerlink" title="4、输入安装参数"></a>4、输入安装参数</h5><pre><code>LFq51qqupnaiTNn39w6zATiOTxZI2JYuRJEBlzmUDv4zeeNlXhMgJZVb0q5QkLr+CIUrSuNB7ucifrGXawLB4qswPOXYG7+ItDNUR/9UkLTUWlnHLX07hnR1USOrWIjTmbytcIKEdaI6x0RskyotuItj84xxoSBP/iRBW2EHpOc</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201021130345.png"></p><h5 id="5、会询问你是否重启，重启就完事了"><a href="#5、会询问你是否重启，重启就完事了" class="headerlink" title="5、会询问你是否重启，重启就完事了"></a>5、会询问你是否重启，重启就完事了</h5><h2 id="下面是原文地址"><a href="#下面是原文地址" class="headerlink" title="下面是原文地址"></a>下面是原文地址</h2><p><strong>[<a href="https://justcode.ikeepstudying.com/2020/09/2020-09-09-%e4%ba%b2%e6%b5%8b%e6%9c%89%e6%95%88%ef%bc%9aintellij-idea-2020-2-%e6%9c%80%e6%96%b0%e5%85%a8%e5%ae%b6%e6%a1%b6%e7%b3%bb%e5%88%97%e4%ba%a7%e5%93%81%e6%bf%80%e6%b4%bb%e7%a0%b4%e8%a7%a3/">原文地址</a>]</strong></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rust 琐碎知识记录板</title>
      <link href="2020/10/21/rust-suo-sui-zhi-shi-ji-lu-ban/"/>
      <url>2020/10/21/rust-suo-sui-zhi-shi-ji-lu-ban/</url>
      
        <content type="html"><![CDATA[<h3 id="下面是Rust的一些琐碎知识"><a href="#下面是Rust的一些琐碎知识" class="headerlink" title="下面是Rust的一些琐碎知识"></a>下面是Rust的一些琐碎知识</h3><h5 id="1、format-宏"><a href="#1、format-宏" class="headerlink" title="1、format!宏"></a>1、format!宏</h5><ul><li>format!: write formatted text to String  这个宏可以将一个文本格式化成String类型（可变字符串，在堆上面分配空间），类似于C#中的String.Format方法。</li></ul><pre class="line-numbers language-rust"><code class="language-rust"><span class="token keyword">let</span> world <span class="token operator">=</span> <span class="token string">"world"</span><span class="token punctuation">;</span><span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token function">format!</span><span class="token punctuation">(</span><span class="token string">"Hello {}!"</span><span class="token punctuation">,</span> world<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这样text的类型就会是String</p>]]></content>
      
      
      <categories>
          
          <category> Rust </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Rust </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用命令</title>
      <link href="2020/10/21/chang-yong-ming-ling/"/>
      <url>2020/10/21/chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h3 id="下面总结一下常用的命令"><a href="#下面总结一下常用的命令" class="headerlink" title="下面总结一下常用的命令"></a>下面总结一下常用的命令</h3><ul><li>1、Mac系统查看端口占用和杀死进程</li></ul><pre><code>lsof -i tcp:8080</code></pre><p>该命令会显示8080端口的占用情况，有pid，可以根据pid关掉该进程</p><pre><code>kill -9 pid号</code></pre><ul><li>2、</li></ul>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 常用命令 </tag>
            
            <tag> MacOs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是运行时(Runtime)</title>
      <link href="2020/10/20/shi-me-shi-yun-xing-shi-runtime/"/>
      <url>2020/10/20/shi-me-shi-yun-xing-shi-runtime/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是运行时（Runtime）"><a href="#什么是运行时（Runtime）" class="headerlink" title="什么是运行时（Runtime）"></a>什么是运行时（Runtime）</h3><p>任何语言要运行都需要自己的运行时，Java 程序的运行时叫 Java Runtime，Android 程序的运行时叫 Android Runtime，而具体 Runtime 是个什么东西呢，<br>就是说一个程序要在一个硬件或者平台上跑，就必须要有一个中间层用来把程序语言转换为机器能听懂的机器语言。</p><p>Java Runtime 的左右就是如此，如我们编写好了 Java 的 Hello World 程序.</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span>  <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"hello world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码我们认识，作用就是输出一个 “hello world”，但是要在一个冷冰冰的机器上，让机器能读懂并运行这段代码，就需要一个 Java 语言的运行时环境，只有这个环境才能读懂它，并能让代码更机器进行打交道。</p><p>到这里我们已经明白，<strong>如果一个电脑要能运行 Java 程序就必须安装有 Java Runtime</strong>。对于其他语言也是如此，要在平台上运行就必须要有对应平台上的 Runtime 组件，这也是开发一个新语言必须要做的事。</p><p>说道 Runtime，在 Java 发展的过程中，Java 一下子火了有一个很重要原因，就是在 90 年代，微软的 IE 浏览器为了打败网景浏览器，曾经就在 IE 中默认安装 Java 运行时，再加上 IE 浏览器内置在 Windows 操作系统中，使得 IE 装机量特别大，同样这对 Java 也是一个非常大的促进作用。由于 IE 内置 Java Runtime，使得在 IE 浏览器中开发 Java 程序变得更加简单。如出名的 Java Applet（Java 小程序）开发。</p><p>后来因为 Sun 跟 微软之间诉讼等事情，这个合作也没多久，现在 IE 已经默认禁用了 Java Applet。</p><p>说道 <strong>Java Runtime（简称 JRE）</strong> ，曾经在一开始开发 Java 程序时，经常把 JRE 跟 JDK 搞混。</p><p>JRE 是一个独立的东西，就是 Java 程序的运行环境，其中包含一个 JAVA 虚拟机（JVM）以及一些标准的函数类库。</p><p>而 JDK 是 Sun 公司专门给开发人员准备的 Java 开发工具集。它其中就包含了 JRE，所以配置好 JDK，自然就可以在电脑上运行 Java 程序了。除此之外，JDK 还包含了源码、API 文档、编译工具等等。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Runtime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rust 0u8在rust中是什么意思</title>
      <link href="2020/10/19/rust-0u8-zai-rust-zhong-shi-shi-me-yi-si/"/>
      <url>2020/10/19/rust-0u8-zai-rust-zhong-shi-shi-me-yi-si/</url>
      
        <content type="html"><![CDATA[<h4 id="rust-0u8在rust中是什么意思"><a href="#rust-0u8在rust中是什么意思" class="headerlink" title="rust 0u8在rust中是什么意思"></a>rust 0u8在rust中是什么意思</h4><h6 id="当我在学习Rust-编程语言"><a href="#当我在学习Rust-编程语言" class="headerlink" title="当我在学习Rust 编程语言"></a>当我在学习<a href="https://learnku.com/docs/rust-lang/2018/ch06-03-if-let/4515">Rust 编程语言</a></h6><ul><li>遇到了如下这种问题：  <pre class="line-numbers language-rust"><code class="language-rust"><span class="token keyword">let</span> some_u8_value <span class="token operator">=</span> <span class="token function">Some</span><span class="token punctuation">(</span><span class="token number">0u8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">match</span> some_u8_value <span class="token punctuation">{</span>  <span class="token function">Some</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"three"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  _ <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>0u8 是什么意思，在我的印象中应该是这么写    <pre class="line-numbers language-rust"><code class="language-rust"><span class="token keyword">let</span> some_u8_value <span class="token operator">=</span> <span class="token function">Some</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token punctuation">:</span>u8<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>然而并没有这种写法，直到我在 <a href="https://rustwiki.org/zh-CN/rust-by-example/types/literals.html">rust_by_example</a> 中看到了答案，</li></ul><h3 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h3><ul><li><p>对数值字面量，只要把类型作为后缀加上去，就完成了类型说明。比如指定字面量 42 的 类型是 i32，只需要写 42i32。</p></li><li><p>无后缀的数值字面量，其类型取决于怎样使用它们。如果没有限制，编译器会对整数使用 i32，对浮点数使用 f64。</p></li></ul><pre class="line-numbers language-rust"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 带后缀的字面量，其类型在初始化时已经知道了。</span>    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1u8</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">2u32</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> z <span class="token operator">=</span> <span class="token number">3f32</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 无后缀的字面量，其类型取决于如何使用它们。</span>    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// `size_of_val` 返回一个变量所占的字节数</span>    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"size of `x` in bytes: {}"</span><span class="token punctuation">,</span> std<span class="token punctuation">:</span><span class="token punctuation">:</span>mem<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"size of `y` in bytes: {}"</span><span class="token punctuation">,</span> std<span class="token punctuation">:</span><span class="token punctuation">:</span>mem<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"size of `z` in bytes: {}"</span><span class="token punctuation">,</span> std<span class="token punctuation">:</span><span class="token punctuation">:</span>mem<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"size of `i` in bytes: {}"</span><span class="token punctuation">,</span> std<span class="token punctuation">:</span><span class="token punctuation">:</span>mem<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"size of `f` in bytes: {}"</span><span class="token punctuation">,</span> std<span class="token punctuation">:</span><span class="token punctuation">:</span>mem<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">size_of_val</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Rust </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Rust </tag>
            
            <tag> 0u8 </tag>
            
            <tag> 字面量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>picture_bed</title>
      <link href="2020/10/18/picture-bed/"/>
      <url>2020/10/18/picture-bed/</url>
      
        <content type="html"><![CDATA[<h3 id="Mac环境–如何做一个自用的图床"><a href="#Mac环境–如何做一个自用的图床" class="headerlink" title="Mac环境–如何做一个自用的图床"></a>Mac环境–如何做一个自用的图床</h3><h4 id="1、下载PicGo"><a href="#1、下载PicGo" class="headerlink" title="1、下载PicGo"></a>1、下载PicGo</h4><p>PicGo<a href="https://github.com/Molunerfinn/picgo/releases">下载地址</a></p><h4 id="2、创建一个Github仓库并进行设置"><a href="#2、创建一个Github仓库并进行设置" class="headerlink" title="2、创建一个Github仓库并进行设置"></a>2、创建一个Github仓库并进行设置</h4><h5 id="（1）创建仓库"><a href="#（1）创建仓库" class="headerlink" title="（1）创建仓库"></a>（1）创建仓库</h5><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201018155437.png"></p><h5 id="2-点击头像-点击Settings"><a href="#2-点击头像-点击Settings" class="headerlink" title="(2) 点击头像 点击Settings"></a>(2) 点击头像 点击Settings</h5><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201018160141.png"></p><h5 id="3-再点-Developer-settings"><a href="#3-再点-Developer-settings" class="headerlink" title="(3) 再点 Developer settings"></a>(3) 再点 Developer settings</h5><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201018160243.png"></p><h5 id="4-再点-Personal-access-tokens"><a href="#4-再点-Personal-access-tokens" class="headerlink" title="(4) 再点 Personal access tokens"></a>(4) 再点 Personal access tokens</h5><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201018160353.png"></p><h5 id="5-填写内容"><a href="#5-填写内容" class="headerlink" title="(5) 填写内容"></a>(5) 填写内容</h5><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201018160722.png"></p><h5 id="6-复制生成的token-注意：网页关闭后就再也看不到这个token了"><a href="#6-复制生成的token-注意：网页关闭后就再也看不到这个token了" class="headerlink" title="(6) 复制生成的token (注意：网页关闭后就再也看不到这个token了)"></a>(6) 复制生成的token (注意：网页关闭后就再也看不到这个token了)</h5><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201018161000.png"></p><h4 id="3、在刚才创建的仓库中新增一个项目"><a href="#3、在刚才创建的仓库中新增一个项目" class="headerlink" title="3、在刚才创建的仓库中新增一个项目"></a>3、在刚才创建的仓库中新增一个项目</h4><pre><code>git initgit add .git commit -m "备注"git remote add origin 仓库地址git push -u origin master</code></pre><p>下面是我的项目：<br><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201018162357.png"></p><h4 id="4、配置刚才下载的PicGo"><a href="#4、配置刚才下载的PicGo" class="headerlink" title="4、配置刚才下载的PicGo"></a>4、配置刚才下载的PicGo</h4><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201018161711.png"></p><p>设置自定义域名：<br>    <a href="https://cdn.jsdelivr.net/gh/Naruto-1996/picture">https://cdn.jsdelivr.net/gh/Naruto-1996/picture</a><br>    <a href="https://cdn.jsdelivr.net/gh/%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BB%93%E5%BA%93%E5%90%8D">https://cdn.jsdelivr.net/gh/用户名/仓库名</a></p><p>配置完就可以在PicGo中上传图片了。</p>]]></content>
      
      
      <categories>
          
          <category> 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> jsDelivr </tag>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+github搭建一个博客</title>
      <link href="2020/10/16/hexo-github-da-jian-yi-ge-bo-ke/"/>
      <url>2020/10/16/hexo-github-da-jian-yi-ge-bo-ke/</url>
      
        <content type="html"><![CDATA[<h3 id="使用Hexo-Github-搭建一个博客网站-Mac环境"><a href="#使用Hexo-Github-搭建一个博客网站-Mac环境" class="headerlink" title="使用Hexo + Github 搭建一个博客网站 [Mac环境]"></a>使用Hexo + Github 搭建一个博客网站 [Mac环境]</h3><h4 id="1、创建Github仓库"><a href="#1、创建Github仓库" class="headerlink" title="1、创建Github仓库"></a>1、创建Github仓库</h4><p><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201018163610.png"></p><ul><li>注意Repository name 中一定要输入：你的用户名.github.io其他地方不用修改，然后直接点 ”Create repository“ 按钮完成创建即可<h4 id="2、安装博客需要的框架"><a href="#2、安装博客需要的框架" class="headerlink" title="2、安装博客需要的框架"></a>2、安装博客需要的框架</h4></li></ul><pre><code>安装 Homebrew$ ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"查询Homebrew是否安装成功的命令$ brew -v安装 git$ brew install git查询git是否安装成功的命令$ git --version安装 node.js$ brew install node查询node是否安装成功的命令$ node -v安装 hexo$ npm install -g hexo查询hexo是否安装成功的命令$ hexo -v</code></pre><h4 id="3、安装博客相关的插件"><a href="#3、安装博客相关的插件" class="headerlink" title="3、安装博客相关的插件"></a>3、安装博客相关的插件</h4><pre><code>自动部署到Github上的插件  $ npm install hexo-deployer-git --save安装博客首页生成插件  $ npm install hexo-generator-index --save安装tag生成插件  $ npm install hexo-generator-tag --save* 到此为止，安装完毕</code></pre><h4 id="4、创建博客、调试、发布"><a href="#4、创建博客、调试、发布" class="headerlink" title="4、创建博客、调试、发布"></a>4、创建博客、调试、发布</h4><ul><li><p>创建本地一个目录，用来创建博客<br>  <code>$ hexo init Blog</code><br>执行成功后会在本地创建一个Blog的文件夹</p></li><li><p>cd 到Blog中<br>  <code>$ hexo new firstBlog</code><br>在Blog/source/_posts中就会新建一个firstBlog.md的文件，然后你就可以编辑你的博客内容了，Visual Studio Code编辑器支持预览，还可以和印象笔记同步</p></li><li><p>本地调试<br>  <code>$ sudo hexo server 或 $ sudo hexo s</code><br>然后可以访问<a href="http://localhost:4000来查看结果">http://localhost:4000来查看结果</a>  </p></li><li><p>安装发布插件<br>在博客文件夹运行下面命令<br><code>$ npm install hexo-deployer-git --save</code><br>然后在Blog文件夹下的_config.yml文件修改发布的配置，最后一行改为（注意替换yourusername）  </p></li></ul><pre><code># Site title: "李文洋"             subtitle: 'Android开发、Ruby程序员、目前正在学习Rust' description: '单身可撩、帅气的程序员小哥哥' keywords:                  author: 李文洋language: zh-CN            timezone: ''deploy:  type: git  #使用Git 发布  repo: https://github.com/Naruto-1996/Naruto-1996.github.io.git  #自己的Github仓库地址  branch: master</code></pre><ul><li>运行生成发布</li></ul><pre><code>$ sudo hexo g$ sudo hexo d</code></pre><p>如果改动了站点的源码，需要在发布之前  </p><p><code>$ sudo hexo clean</code>  </p><p>如果成功了就可以通过yourusername.github.io来访问你的博客了</p><h4 id="5、新建分类页面"><a href="#5、新建分类页面" class="headerlink" title="5、新建分类页面"></a>5、新建分类页面</h4><p>categories 页是用来展示所有分类的页面，如果在你的博客 source 目录下还没有 categories/index.md 文件，那么你就需要新建一个，命令如下：</p><pre><code>hexo new page "categories"</code></pre><p>编辑你刚刚新建的页面文件 /source/categories/index.md，至少需要以下内容：</p><pre><code>---title: categoriesdate: 2018-09-30 17:25:30type: "categories"layout: "categories"---</code></pre><h4 id="6、新建标签页面-tags"><a href="#6、新建标签页面-tags" class="headerlink" title="6、新建标签页面 tags"></a>6、新建标签页面 tags</h4><p>tags 页是用来展示所有标签的页面，如果在你的博客 source 目录下还没有 tags/index.md 文件，那么你就需要新建一个，命令如下：</p><pre><code>hexo new page "tags"</code></pre><p>编辑你刚刚新建的页面文件 /source/tags/index.md，至少需要以下内容：</p><pre><code>---title: tagsdate: 2018-09-30 17:25:30type: "tags"layout: "tags"---</code></pre><h4 id="7、新建关于我-about-页面"><a href="#7、新建关于我-about-页面" class="headerlink" title="7、新建关于我 about 页面"></a>7、新建关于我 about 页面</h4><p>about 页是用来展示关于我和我的博客信息的，如果在你的博客 source 目录下还没有 about/index.md 文件，那么你就需要新建一个，命令如下：</p><pre><code>hexo new page "about"</code></pre><p>编辑你刚刚新建的页面文件 /source/about/index.md，至少需要以下内容：</p><pre><code>---title: aboutdate: 2018-09-30 17:25:30type: "about"layout: "about"---</code></pre><h4 id="8、新建留言板-contact-页（可选的）"><a href="#8、新建留言板-contact-页（可选的）" class="headerlink" title="8、新建留言板 contact 页（可选的）"></a>8、新建留言板 contact 页（可选的）</h4><p>contact 页是用来展示留言板信息的，如果在你的博客 source 目录下还没有 contact/index.md 文件，那么你就需要新建一个，命令如下：</p><pre><code>hexo new page "contact"</code></pre><p>编辑你刚刚新建的页面文件 /source/contact/index.md，至少需要以下内容：</p><pre><code>---title: contactdate: 2018-09-30 17:25:30type: "contact"layout: "contact"---</code></pre><ul><li>注：本留言板功能依赖于第三方评论系统，请激活你的评论系统才有效果。并且在主题的 _config.yml 文件中，第 19至 21 行的“菜单”配置，取消关于留言板的注释即可。</li></ul><h4 id="9、新建友情链接页面-friends"><a href="#9、新建友情链接页面-friends" class="headerlink" title="9、新建友情链接页面 friends"></a>9、新建友情链接页面 friends</h4><p>friends 页是用来展示好友的，如果在你的博客 source 目录下还没有 friends/index.md 文件，那么你就需要新建一个，命令如下：</p><pre><code>hexo new page "friends"</code></pre><p>编辑你刚刚新建的页面文件 /source/friends/index.md，至少需要以下内容：</p><pre><code>---title: friendsdate: 2018-09-30 17:25:30type: "friends"layout: "friends"---</code></pre><p>同时，在你的博客 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json 文件，文件内容如下所示：</p><pre><code>[{    "avatar": "http://image.luokangyuan.com/1_qq_27922023.jpg",    "name": "码酱",    "introduction": "我不是大佬，只是在追寻大佬的脚步",    "url": "http://luokangyuan.com/",    "title": "前去学习"}, {    "avatar": "http://image.luokangyuan.com/4027734.jpeg",    "name": "闪烁之狐",    "introduction": "编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬",    "url": "https://blinkfox.github.io/",    "title": "前去学习"}, {    "avatar": "http://image.luokangyuan.com/avatar.jpg",    "name": "ja_rome",    "introduction": "平凡的脚步也可以走出伟大的行程",    "url": "https://me.csdn.net/jlh912008548",    "title": "前去学习"}]</code></pre><h4 id="10、接下来就是如何写博客了"><a href="#10、接下来就是如何写博客了" class="headerlink" title="10、接下来就是如何写博客了"></a>10、接下来就是如何写博客了</h4><p><code>sudo hexo new "第一个博客" </code></p><p>就会在Blog文件夹中的 source/_posts 文件夹下创建出一个 第一个博客.md 文件</p><pre><code>---title: 第一个博客date: 2020-10-16 18:57:25categories:- Mactags:- hexo- github---</code></pre><ul><li>注意这里的 categories 和 tag 标签 就是对文章的分类和标签 写了这些就会在前端展示出来<br><img src="https://cdn.jsdelivr.net/gh/Naruto-1996/picture/images/20201018172533.png"></li></ul><p>然后就可以运行一下命令来生成和发布文章到github上了  </p><pre><code>sudo hexo gsudo hexo d</code></pre><h4 id="11、关于主题的配置我这里就不在说了可以自行Google一下-hexo主题配置"><a href="#11、关于主题的配置我这里就不在说了可以自行Google一下-hexo主题配置" class="headerlink" title="11、关于主题的配置我这里就不在说了可以自行Google一下 hexo主题配置"></a>11、关于主题的配置我这里就不在说了可以自行Google一下 hexo主题配置</h4><p>留个传送门供我自己使用<br><a href="https://hexo.io/themes/">主题传送门</a></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/10/16/hello-world/"/>
      <url>2020/10/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
            <tag> 表格 </tag>
            
            <tag> 表单验证 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
